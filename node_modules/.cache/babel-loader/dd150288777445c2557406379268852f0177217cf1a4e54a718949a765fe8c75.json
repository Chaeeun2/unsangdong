{"ast":null,"code":"import ColorSpace from \"../space.js\";\nimport { multiplyMatrices } from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\nconst c1 = 3424 / 4096;\nconst c2 = 2413 / 128;\nconst c3 = 2392 / 128;\nconst m1 = 2610 / 16384;\nconst m2 = 2523 / 32;\nconst im1 = 16384 / 2610;\nconst im2 = 32 / 2523;\n\n// The matrix below includes the 4% crosstalk components\n// and is from the Dolby \"What is ICtCp\" paper\"\nconst XYZtoLMS_M = [[0.3592832590121217, 0.6976051147779502, -0.0358915932320290], [-0.1920808463704993, 1.1004767970374321, 0.0753748658519118], [0.0070797844607479, 0.0748396662186362, 0.8433265453898765]];\n// linear-light Rec.2020 to LMS, again with crosstalk\n// rational terms from Jan Fröhlich,\n// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\n// and ITU-R BT.2124-0 p.2\n/*\nconst Rec2020toLMS_M = [\n\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\n\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\n\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\n];\n*/\n// this includes the Ebner LMS coefficients,\n// the rotation, and the scaling to [-0.5,0.5] range\n// rational terms from Fröhlich p.97\n// and ITU-R BT.2124-0 pp.2-3\nconst LMStoIPT_M = [[2048 / 4096, 2048 / 4096, 0], [6610 / 4096, -13613 / 4096, 7003 / 4096], [17933 / 4096, -17390 / 4096, -543 / 4096]];\n\n// inverted matrices, calculated from the above\nconst IPTtoLMS_M = [[0.9999999999999998, 0.0086090370379328, 0.1110296250030260], [0.9999999999999998, -0.0086090370379328, -0.1110296250030259], [0.9999999999999998, 0.5600313357106791, -0.3206271749873188]];\n/*\nconst LMStoRec2020_M = [\n\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\n\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\n\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\n];\n*/\nconst LMStoXYZ_M = [[2.0701522183894223, -1.3263473389671563, 0.2066510476294053], [0.3647385209748072, 0.6805660249472273, -0.0453045459220347], [-0.0497472075358123, -0.0492609666966131, 1.1880659249923042]];\n\n// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\n// from Dolby, \"WHAT IS ICTCP?\"\n// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\n// and\n// Dolby, \"Perceptual Color Volume\n// Measuring the Distinguishable Colors of HDR and WCG Displays\"\n// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\nexport default new ColorSpace({\n  id: \"ictcp\",\n  name: \"ICTCP\",\n  // From BT.2100-2 page 7:\n  // During production, signal values are expected to exceed the\n  // range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\n  // signal degradation during cascaded processing. Such values of E′,\n  // below 0.0 or exceeding 1.0, should not be clipped during production\n  // and exchange.\n  // Values below 0.0 should not be clipped in reference displays (even\n  // though they represent “negative” light) to allow the black level of\n  // the signal (LB) to be properly set using test signals known as “PLUGE”\n  coords: {\n    i: {\n      refRange: [0, 1],\n      // Constant luminance,\n      name: \"I\"\n    },\n    ct: {\n      refRange: [-0.5, 0.5],\n      // Full BT.2020 gamut in range [-0.5, 0.5]\n      name: \"CT\"\n    },\n    cp: {\n      refRange: [-0.5, 0.5],\n      name: \"CP\"\n    }\n  },\n  base: XYZ_Abs_D65,\n  fromBase(XYZ) {\n    // move to LMS cone domain\n    let LMS = multiplyMatrices(XYZtoLMS_M, XYZ);\n    return LMStoICtCp(LMS);\n  },\n  toBase(ICtCp) {\n    let LMS = ICtCptoLMS(ICtCp);\n    return multiplyMatrices(LMStoXYZ_M, LMS);\n  }\n});\nfunction LMStoICtCp(LMS) {\n  // apply the PQ EOTF\n  // we can't ever be dividing by zero because of the \"1 +\" in the denominator\n  let PQLMS = LMS.map(function (val) {\n    let num = c1 + c2 * (val / 10000) ** m1;\n    let denom = 1 + c3 * (val / 10000) ** m1;\n    return (num / denom) ** m2;\n  });\n\n  // LMS to IPT, with rotation for Y'C'bC'r compatibility\n  return multiplyMatrices(LMStoIPT_M, PQLMS);\n}\nfunction ICtCptoLMS(ICtCp) {\n  let PQLMS = multiplyMatrices(IPTtoLMS_M, ICtCp);\n\n  // From BT.2124-0 Annex 2 Conversion 3\n  let LMS = PQLMS.map(function (val) {\n    let num = Math.max(val ** im2 - c1, 0);\n    let denom = c2 - c3 * val ** im2;\n    return 10000 * (num / denom) ** im1;\n  });\n  return LMS;\n}","map":{"version":3,"names":["ColorSpace","multiplyMatrices","XYZ_Abs_D65","c1","c2","c3","m1","m2","im1","im2","XYZtoLMS_M","LMStoIPT_M","IPTtoLMS_M","LMStoXYZ_M","id","name","coords","i","refRange","ct","cp","base","fromBase","XYZ","LMS","LMStoICtCp","toBase","ICtCp","ICtCptoLMS","PQLMS","map","val","num","denom","Math","max"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/spaces/ictcp.js"],"sourcesContent":["import ColorSpace from \"../space.js\";\nimport {multiplyMatrices} from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\n\nconst c1 = 3424 / 4096;\nconst c2 = 2413 / 128;\nconst c3 = 2392 / 128;\nconst m1 = 2610 / 16384;\nconst m2 = 2523 / 32;\nconst im1 = 16384 / 2610;\nconst im2 = 32 / 2523;\n\n// The matrix below includes the 4% crosstalk components\n// and is from the Dolby \"What is ICtCp\" paper\"\nconst XYZtoLMS_M = [\n\t[  0.3592832590121217,  0.6976051147779502, -0.0358915932320290 ],\n\t[ -0.1920808463704993,  1.1004767970374321,  0.0753748658519118 ],\n\t[  0.0070797844607479,  0.0748396662186362,  0.8433265453898765 ],\n];\n// linear-light Rec.2020 to LMS, again with crosstalk\n// rational terms from Jan Fröhlich,\n// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\n// and ITU-R BT.2124-0 p.2\n/*\nconst Rec2020toLMS_M = [\n\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\n\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\n\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\n];\n*/\n// this includes the Ebner LMS coefficients,\n// the rotation, and the scaling to [-0.5,0.5] range\n// rational terms from Fröhlich p.97\n// and ITU-R BT.2124-0 pp.2-3\nconst LMStoIPT_M = [\n\t[  2048 / 4096,   2048 / 4096,       0      ],\n\t[  6610 / 4096, -13613 / 4096,  7003 / 4096 ],\n\t[ 17933 / 4096, -17390 / 4096,  -543 / 4096 ],\n];\n\n// inverted matrices, calculated from the above\nconst IPTtoLMS_M = [\n\t[ 0.9999999999999998,  0.0086090370379328,  0.1110296250030260 ],\n\t[ 0.9999999999999998, -0.0086090370379328, -0.1110296250030259 ],\n\t[ 0.9999999999999998,  0.5600313357106791, -0.3206271749873188 ],\n];\n/*\nconst LMStoRec2020_M = [\n\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\n\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\n\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\n];\n*/\nconst LMStoXYZ_M = [\n\t[  2.0701522183894223, -1.3263473389671563,  0.2066510476294053 ],\n\t[  0.3647385209748072,  0.6805660249472273, -0.0453045459220347 ],\n\t[ -0.0497472075358123, -0.0492609666966131,  1.1880659249923042 ],\n];\n\n// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\n// from Dolby, \"WHAT IS ICTCP?\"\n// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\n// and\n// Dolby, \"Perceptual Color Volume\n// Measuring the Distinguishable Colors of HDR and WCG Displays\"\n// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\nexport default new ColorSpace({\n\tid: \"ictcp\",\n\tname: \"ICTCP\",\n\t// From BT.2100-2 page 7:\n\t// During production, signal values are expected to exceed the\n\t// range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\n\t// signal degradation during cascaded processing. Such values of E′,\n\t// below 0.0 or exceeding 1.0, should not be clipped during production\n\t// and exchange.\n\t// Values below 0.0 should not be clipped in reference displays (even\n\t// though they represent “negative” light) to allow the black level of\n\t// the signal (LB) to be properly set using test signals known as “PLUGE”\n\tcoords: {\n\t\ti: {\n\t\t\trefRange: [0, 1],\t// Constant luminance,\n\t\t\tname: \"I\",\n\t\t},\n\t\tct: {\n\t\t\trefRange: [-0.5, 0.5],\t// Full BT.2020 gamut in range [-0.5, 0.5]\n\t\t\tname: \"CT\",\n\t\t},\n\t\tcp: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t\tname: \"CP\",\n\t\t},\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoLMS_M, XYZ);\n\n\t\treturn LMStoICtCp(LMS);\n\t},\n\ttoBase (ICtCp) {\n\t\tlet LMS = ICtCptoLMS(ICtCp);\n\n\t\treturn multiplyMatrices(LMStoXYZ_M, LMS);\n\t},\n});\n\nfunction LMStoICtCp (LMS) {\n\t// apply the PQ EOTF\n\t// we can't ever be dividing by zero because of the \"1 +\" in the denominator\n\tlet PQLMS = LMS.map (function (val) {\n\t\tlet num = c1 + (c2 * ((val / 10000) ** m1));\n\t\tlet denom = 1 + (c3 * ((val / 10000) ** m1));\n\n\t\treturn (num / denom)  ** m2;\n\t});\n\n\t// LMS to IPT, with rotation for Y'C'bC'r compatibility\n\treturn multiplyMatrices(LMStoIPT_M, PQLMS);\n}\n\nfunction ICtCptoLMS (ICtCp) {\n\tlet PQLMS = multiplyMatrices(IPTtoLMS_M, ICtCp);\n\n\t// From BT.2124-0 Annex 2 Conversion 3\n\tlet LMS = PQLMS.map (function (val) {\n\t\tlet num  = Math.max((val ** im2) - c1, 0);\n\t\tlet denom = (c2 - (c3 * (val ** im2)));\n\t\treturn 10000 * ((num / denom) ** im1);\n\t});\n\n\treturn LMS;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}