{"ast":null,"code":"/*\nAdapted from: https://github.com/hsluv/hsluv-javascript/blob/14b49e6cf9a9137916096b8487a5372626b57ba4/src/hsluv.ts\n\nCopyright (c) 2012-2022 Alexei Boronine\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport ColorSpace from \"../space.js\";\nimport LCHuv from \"./lchuv.js\";\nimport { fromXYZ_M } from \"./srgb-linear.js\";\nimport { skipNone } from \"../util.js\";\nimport { calculateBoundingLines } from \"./hsluv.js\";\nconst ε = 216 / 24389; // 6^3/29^3 == (24/116)^3\nconst κ = 24389 / 27; // 29^3/3^3\n\nconst m_r0 = fromXYZ_M[0][0];\nconst m_r1 = fromXYZ_M[0][1];\nconst m_r2 = fromXYZ_M[0][2];\nconst m_g0 = fromXYZ_M[1][0];\nconst m_g1 = fromXYZ_M[1][1];\nconst m_g2 = fromXYZ_M[1][2];\nconst m_b0 = fromXYZ_M[2][0];\nconst m_b1 = fromXYZ_M[2][1];\nconst m_b2 = fromXYZ_M[2][2];\nfunction distanceFromOrigin(slope, intercept) {\n  return Math.abs(intercept) / Math.sqrt(Math.pow(slope, 2) + 1);\n}\nfunction calcMaxChromaHpluv(lines) {\n  let r0 = distanceFromOrigin(lines.r0s, lines.r0i);\n  let r1 = distanceFromOrigin(lines.r1s, lines.r1i);\n  let g0 = distanceFromOrigin(lines.g0s, lines.g0i);\n  let g1 = distanceFromOrigin(lines.g1s, lines.g1i);\n  let b0 = distanceFromOrigin(lines.b0s, lines.b0i);\n  let b1 = distanceFromOrigin(lines.b1s, lines.b1i);\n  return Math.min(r0, r1, g0, g1, b0, b1);\n}\nexport default new ColorSpace({\n  id: \"hpluv\",\n  name: \"HPLuv\",\n  coords: {\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    },\n    s: {\n      range: [0, 100],\n      name: \"Saturation\"\n    },\n    l: {\n      range: [0, 100],\n      name: \"Lightness\"\n    }\n  },\n  base: LCHuv,\n  gamutSpace: \"self\",\n  // Convert LCHuv to HPLuv\n  fromBase(lch) {\n    let [l, c, h] = [skipNone(lch[0]), skipNone(lch[1]), skipNone(lch[2])];\n    let s;\n    if (l > 99.9999999) {\n      s = 0;\n      l = 100;\n    } else if (l < 0.00000001) {\n      s = 0;\n      l = 0;\n    } else {\n      let lines = calculateBoundingLines(l);\n      let max = calcMaxChromaHpluv(lines);\n      s = c / max * 100;\n    }\n    return [h, s, l];\n  },\n  // Convert HPLuv to LCHuv\n  toBase(hsl) {\n    let [h, s, l] = [skipNone(hsl[0]), skipNone(hsl[1]), skipNone(hsl[2])];\n    let c;\n    if (l > 99.9999999) {\n      l = 100;\n      c = 0;\n    } else if (l < 0.00000001) {\n      l = 0;\n      c = 0;\n    } else {\n      let lines = calculateBoundingLines(l);\n      let max = calcMaxChromaHpluv(lines, h);\n      c = max / 100 * s;\n    }\n    return [l, c, h];\n  },\n  formats: {\n    color: {\n      id: \"--hpluv\",\n      coords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"]\n    }\n  }\n});","map":{"version":3,"names":["ColorSpace","LCHuv","fromXYZ_M","skipNone","calculateBoundingLines","ε","κ","m_r0","m_r1","m_r2","m_g0","m_g1","m_g2","m_b0","m_b1","m_b2","distanceFromOrigin","slope","intercept","Math","abs","sqrt","pow","calcMaxChromaHpluv","lines","r0","r0s","r0i","r1","r1s","r1i","g0","g0s","g0i","g1","g1s","g1i","b0","b0s","b0i","b1","b1s","b1i","min","id","name","coords","h","refRange","type","s","range","l","base","gamutSpace","fromBase","lch","c","max","toBase","hsl","formats","color"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/spaces/hpluv.js"],"sourcesContent":["/*\nAdapted from: https://github.com/hsluv/hsluv-javascript/blob/14b49e6cf9a9137916096b8487a5372626b57ba4/src/hsluv.ts\n\nCopyright (c) 2012-2022 Alexei Boronine\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport ColorSpace from \"../space.js\";\nimport LCHuv from \"./lchuv.js\";\nimport {fromXYZ_M} from \"./srgb-linear.js\";\nimport {skipNone} from \"../util.js\";\nimport {calculateBoundingLines} from \"./hsluv.js\";\n\nconst ε = 216 / 24389;  // 6^3/29^3 == (24/116)^3\nconst κ = 24389 / 27;   // 29^3/3^3\n\nconst m_r0 = fromXYZ_M[0][0];\nconst m_r1 = fromXYZ_M[0][1];\nconst m_r2 = fromXYZ_M[0][2];\nconst m_g0 = fromXYZ_M[1][0];\nconst m_g1 = fromXYZ_M[1][1];\nconst m_g2 = fromXYZ_M[1][2];\nconst m_b0 = fromXYZ_M[2][0];\nconst m_b1 = fromXYZ_M[2][1];\nconst m_b2 = fromXYZ_M[2][2];\n\nfunction distanceFromOrigin (slope, intercept) {\n\treturn Math.abs(intercept) / Math.sqrt(Math.pow(slope, 2) + 1);\n}\n\nfunction calcMaxChromaHpluv (lines) {\n\tlet r0 = distanceFromOrigin(lines.r0s, lines.r0i);\n\tlet r1 = distanceFromOrigin(lines.r1s, lines.r1i);\n\tlet g0 = distanceFromOrigin(lines.g0s, lines.g0i);\n\tlet g1 = distanceFromOrigin(lines.g1s, lines.g1i);\n\tlet b0 = distanceFromOrigin(lines.b0s, lines.b0i);\n\tlet b1 = distanceFromOrigin(lines.b1s, lines.b1i);\n\n\treturn Math.min(r0, r1, g0, g1, b0, b1);\n}\n\nexport default new ColorSpace({\n\tid: \"hpluv\",\n\tname: \"HPLuv\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t},\n\n\tbase: LCHuv,\n\tgamutSpace: \"self\",\n\n\t// Convert LCHuv to HPLuv\n\tfromBase (lch) {\n\t\tlet [l, c, h] = [skipNone(lch[0]), skipNone(lch[1]), skipNone(lch[2])];\n\t\tlet s;\n\n\t\tif (l > 99.9999999) {\n\t\t\ts = 0;\n\t\t\tl = 100;\n\t\t}\n\t\telse if (l < 0.00000001) {\n\t\t\ts = 0;\n\t\t\tl = 0;\n\t\t}\n\t\telse {\n\t\t\tlet lines = calculateBoundingLines(l);\n\t\t\tlet max = calcMaxChromaHpluv(lines);\n\t\t\ts = c / max * 100;\n\t\t}\n\t\treturn [h, s, l];\n\t},\n\n\t// Convert HPLuv to LCHuv\n\ttoBase (hsl) {\n\t\tlet [h, s, l] = [skipNone(hsl[0]), skipNone(hsl[1]), skipNone(hsl[2])];\n\t\tlet c;\n\n\t\tif (l > 99.9999999) {\n\t\t\tl = 100;\n\t\t\tc = 0;\n\t\t}\n\t\telse if (l < 0.00000001) {\n\t\t\tl = 0;\n\t\t\tc = 0;\n\t\t}\n\t\telse {\n\t\t\tlet lines = calculateBoundingLines(l);\n\t\t\tlet max = calcMaxChromaHpluv(lines, h);\n\t\t\tc = max / 100 * s;\n\t\t}\n\n\t\treturn [l, c, h];\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--hpluv\",\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}