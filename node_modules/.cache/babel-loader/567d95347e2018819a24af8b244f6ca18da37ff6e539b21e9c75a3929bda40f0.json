{"ast":null,"code":"// CIE Lightness difference, as used by Google Material Design\n// Google HCT Tone is the same as CIE Lightness\n// https://material.io/blog/science-of-color-design\n\nimport getColor from \"../getColor.js\";\nimport get from \"../get.js\";\nimport lab from \"../spaces/lab.js\";\nexport default function contrastLstar(color1, color2) {\n  color1 = getColor(color1);\n  color2 = getColor(color2);\n  let L1 = get(color1, [lab, \"l\"]);\n  let L2 = get(color2, [lab, \"l\"]);\n  return Math.abs(L1 - L2);\n}","map":{"version":3,"names":["getColor","get","lab","contrastLstar","color1","color2","L1","L2","Math","abs"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/contrast/Lstar.js"],"sourcesContent":["// CIE Lightness difference, as used by Google Material Design\n// Google HCT Tone is the same as CIE Lightness\n// https://material.io/blog/science-of-color-design\n\nimport getColor from \"../getColor.js\";\nimport get from \"../get.js\";\nimport lab from \"../spaces/lab.js\";\n\nexport default function contrastLstar (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet L1 = get(color1, [lab, \"l\"]);\n\tlet L2 = get(color2, [lab, \"l\"]);\n\n\treturn Math.abs(L1 - L2);\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,GAAG,MAAM,kBAAkB;AAElC,eAAe,SAASC,aAAaA,CAAEC,MAAM,EAAEC,MAAM,EAAE;EACtDD,MAAM,GAAGJ,QAAQ,CAACI,MAAM,CAAC;EACzBC,MAAM,GAAGL,QAAQ,CAACK,MAAM,CAAC;EAEzB,IAAIC,EAAE,GAAGL,GAAG,CAACG,MAAM,EAAE,CAACF,GAAG,EAAE,GAAG,CAAC,CAAC;EAChC,IAAIK,EAAE,GAAGN,GAAG,CAACI,MAAM,EAAE,CAACH,GAAG,EAAE,GAAG,CAAC,CAAC;EAEhC,OAAOM,IAAI,CAACC,GAAG,CAACH,EAAE,GAAGC,EAAE,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}