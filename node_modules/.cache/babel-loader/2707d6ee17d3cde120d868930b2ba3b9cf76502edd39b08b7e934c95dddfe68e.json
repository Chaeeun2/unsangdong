{"ast":null,"code":"import hooks from \"./hooks.js\";\nimport { multiplyMatrices } from \"./util.js\";\nimport { WHITES } from \"./adapt.js\";\nexport const CATs = {};\nhooks.add(\"chromatic-adaptation-start\", env => {\n  if (env.options.method) {\n    env.M = adapt(env.W1, env.W2, env.options.method);\n  }\n});\nhooks.add(\"chromatic-adaptation-end\", env => {\n  if (!env.M) {\n    env.M = adapt(env.W1, env.W2, env.options.method);\n  }\n});\nexport function defineCAT({\n  id,\n  toCone_M,\n  fromCone_M\n}) {\n  // Use id, toCone_M, fromCone_M like variables\n  CATs[id] = arguments[0];\n}\nexport function adapt(W1, W2, id = \"Bradford\") {\n  // adapt from a source whitepoint or illuminant W1\n  // to a destination whitepoint or illuminant W2,\n  // using the given chromatic adaptation transform (CAT)\n  // debugger;\n  let method = CATs[id];\n  let [ρs, γs, βs] = multiplyMatrices(method.toCone_M, W1);\n  let [ρd, γd, βd] = multiplyMatrices(method.toCone_M, W2);\n\n  // all practical illuminants have non-zero XYZ so no division by zero can occur below\n  let scale = [[ρd / ρs, 0, 0], [0, γd / γs, 0], [0, 0, βd / βs]];\n  // console.log({scale});\n\n  let scaled_cone_M = multiplyMatrices(scale, method.toCone_M);\n  let adapt_M = multiplyMatrices(method.fromCone_M, scaled_cone_M);\n  // console.log({scaled_cone_M, adapt_M});\n  return adapt_M;\n}\ndefineCAT({\n  id: \"von Kries\",\n  toCone_M: [[0.4002400, 0.7076000, -0.0808100], [-0.2263000, 1.1653200, 0.0457000], [0.0000000, 0.0000000, 0.9182200]],\n  fromCone_M: [[1.8599363874558397, -1.1293816185800916, 0.21989740959619328], [0.3611914362417676, 0.6388124632850422, -0.000006370596838649899], [0, 0, 1.0890636230968613]]\n});\ndefineCAT({\n  id: \"Bradford\",\n  // Convert an array of XYZ values in the range 0.0 - 1.0\n  // to cone fundamentals\n  toCone_M: [[0.8951000, 0.2664000, -0.1614000], [-0.7502000, 1.7135000, 0.0367000], [0.0389000, -0.0685000, 1.0296000]],\n  // and back\n  fromCone_M: [[0.9869929054667121, -0.14705425642099013, 0.15996265166373122], [0.4323052697233945, 0.5183602715367774, 0.049291228212855594], [-0.00852866457517732, 0.04004282165408486, 0.96848669578755]]\n});\ndefineCAT({\n  id: \"CAT02\",\n  // with complete chromatic adaptation to W2, so D = 1.0\n  toCone_M: [[0.7328000, 0.4296000, -0.1624000], [-0.7036000, 1.6975000, 0.0061000], [0.0030000, 0.0136000, 0.9834000]],\n  fromCone_M: [[1.0961238208355142, -0.27886900021828726, 0.18274517938277307], [0.4543690419753592, 0.4735331543074117, 0.07209780371722911], [-0.009627608738429355, -0.00569803121611342, 1.0153256399545427]]\n});\ndefineCAT({\n  id: \"CAT16\",\n  toCone_M: [[0.401288, 0.650173, -0.051461], [-0.250268, 1.204414, 0.045854], [-0.002079, 0.048952, 0.953127]],\n  // the extra precision is needed to avoid roundtripping errors\n  fromCone_M: [[1.862067855087233, -1.0112546305316845, 0.14918677544445172], [0.3875265432361372, 0.6214474419314753, -0.008973985167612521], [-0.01584149884933386, -0.03412293802851557, 1.0499644368778496]]\n});\nObject.assign(WHITES, {\n  // whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n  // all normalized to Y (luminance) = 1.00000\n  // Illuminant A is a tungsten electric light, giving a very warm, orange light.\n  A: [1.09850, 1.00000, 0.35585],\n  // Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n  C: [0.98074, 1.000000, 1.18232],\n  // The daylight series of illuminants simulate natural daylight.\n  // The color temperature (in degrees Kelvin/100) ranges from\n  // cool, overcast daylight (D50) to bright, direct sunlight (D65).\n  D55: [0.95682, 1.00000, 0.92149],\n  D75: [0.94972, 1.00000, 1.22638],\n  // Equal-energy illuminant, used in two-stage CAT16\n  E: [1.00000, 1.00000, 1.00000],\n  // The F series of illuminants represent fluorescent lights\n  F2: [0.99186, 1.00000, 0.67393],\n  F7: [0.95041, 1.00000, 1.08747],\n  F11: [1.00962, 1.00000, 0.64350]\n});","map":{"version":3,"names":["hooks","multiplyMatrices","WHITES","CATs","add","env","options","method","M","adapt","W1","W2","defineCAT","id","toCone_M","fromCone_M","arguments","ρs","γs","βs","ρd","γd","βd","scale","scaled_cone_M","adapt_M","Object","assign","A","C","D55","D75","E","F2","F7","F11"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/CATs.js"],"sourcesContent":["import hooks from \"./hooks.js\";\nimport {multiplyMatrices} from \"./util.js\";\nimport {WHITES} from \"./adapt.js\";\n\nexport const CATs = {};\n\nhooks.add(\"chromatic-adaptation-start\", env => {\n\tif (env.options.method) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nhooks.add(\"chromatic-adaptation-end\", env => {\n\tif (!env.M) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nexport function defineCAT ({id, toCone_M, fromCone_M}) {\n\t// Use id, toCone_M, fromCone_M like variables\n\tCATs[id] = arguments[0];\n}\n\nexport function adapt (W1, W2, id = \"Bradford\") {\n\t// adapt from a source whitepoint or illuminant W1\n\t// to a destination whitepoint or illuminant W2,\n\t// using the given chromatic adaptation transform (CAT)\n\t// debugger;\n\tlet method = CATs[id];\n\n\tlet [ρs, γs, βs] = multiplyMatrices(method.toCone_M, W1);\n\tlet [ρd, γd, βd] = multiplyMatrices(method.toCone_M, W2);\n\n\t// all practical illuminants have non-zero XYZ so no division by zero can occur below\n\tlet scale = [\n\t\t[ρd / ρs,  0,        0      ],\n\t\t[0,        γd / γs,  0      ],\n\t\t[0,        0,        βd / βs],\n\t];\n\t// console.log({scale});\n\n\tlet scaled_cone_M = multiplyMatrices(scale, method.toCone_M);\n\tlet adapt_M\t= multiplyMatrices(method.fromCone_M, scaled_cone_M);\n\t// console.log({scaled_cone_M, adapt_M});\n\treturn adapt_M;\n}\n\ndefineCAT({\n\tid: \"von Kries\",\n\ttoCone_M: [\n\t\t[  0.4002400,  0.7076000, -0.0808100 ],\n\t\t[ -0.2263000,  1.1653200,  0.0457000 ],\n\t\t[  0.0000000,  0.0000000,  0.9182200 ],\n\t],\n\tfromCone_M: [\n\t\t[ 1.8599363874558397, -1.1293816185800916,   0.21989740959619328     ],\n\t\t[ 0.3611914362417676,  0.6388124632850422,  -0.000006370596838649899 ],\n\t\t[ 0,                   0,                    1.0890636230968613      ],\n\t],\n});\n\ndefineCAT({\n\tid: \"Bradford\",\n\t// Convert an array of XYZ values in the range 0.0 - 1.0\n\t// to cone fundamentals\n\ttoCone_M: [\n\t\t[  0.8951000,  0.2664000, -0.1614000 ],\n\t\t[ -0.7502000,  1.7135000,  0.0367000 ],\n\t\t[  0.0389000, -0.0685000,  1.0296000 ],\n\t],\n\t// and back\n\tfromCone_M: [\n\t\t[  0.9869929054667121, -0.14705425642099013, 0.15996265166373122  ],\n\t\t[  0.4323052697233945,  0.5183602715367774,  0.049291228212855594 ],\n\t\t[ -0.00852866457517732, 0.04004282165408486, 0.96848669578755     ],\n\t],\n});\n\ndefineCAT({\n\tid: \"CAT02\",\n\t// with complete chromatic adaptation to W2, so D = 1.0\n\ttoCone_M: [\n\t\t[  0.7328000,  0.4296000, -0.1624000 ],\n\t\t[ -0.7036000,  1.6975000,  0.0061000 ],\n\t\t[  0.0030000,  0.0136000,  0.9834000 ],\n\t],\n\tfromCone_M: [\n\t\t[  1.0961238208355142,   -0.27886900021828726, 0.18274517938277307 ],\n\t\t[  0.4543690419753592,    0.4735331543074117,  0.07209780371722911 ],\n\t\t[ -0.009627608738429355, -0.00569803121611342, 1.0153256399545427  ],\n\t],\n});\n\ndefineCAT({\n\tid: \"CAT16\",\n\ttoCone_M: [\n\t\t[  0.401288,  0.650173, -0.051461 ],\n\t\t[ -0.250268,  1.204414,  0.045854 ],\n\t\t[ -0.002079,  0.048952,  0.953127 ],\n\t],\n\t// the extra precision is needed to avoid roundtripping errors\n\tfromCone_M: [\n\t\t[  1.862067855087233,   -1.0112546305316845,  0.14918677544445172  ],\n\t\t[  0.3875265432361372,   0.6214474419314753, -0.008973985167612521 ],\n\t\t[ -0.01584149884933386, -0.03412293802851557, 1.0499644368778496   ],\n\t],\n});\n\nObject.assign(WHITES, {\n\t// whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n\t// all normalized to Y (luminance) = 1.00000\n\t// Illuminant A is a tungsten electric light, giving a very warm, orange light.\n\tA:   [1.09850, 1.00000, 0.35585],\n\n\t// Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n\tC:   [0.98074, 1.000000, 1.18232],\n\n\t// The daylight series of illuminants simulate natural daylight.\n\t// The color temperature (in degrees Kelvin/100) ranges from\n\t// cool, overcast daylight (D50) to bright, direct sunlight (D65).\n\tD55: [0.95682, 1.00000, 0.92149],\n\tD75: [0.94972, 1.00000, 1.22638],\n\n\t// Equal-energy illuminant, used in two-stage CAT16\n\tE:   [1.00000, 1.00000, 1.00000],\n\n\t// The F series of illuminants represent fluorescent lights\n\tF2:  [0.99186, 1.00000, 0.67393],\n\tF7:  [0.95041, 1.00000, 1.08747],\n\tF11: [1.00962, 1.00000, 0.64350],\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,YAAY;AAC9B,SAAQC,gBAAgB,QAAO,WAAW;AAC1C,SAAQC,MAAM,QAAO,YAAY;AAEjC,OAAO,MAAMC,IAAI,GAAG,CAAC,CAAC;AAEtBH,KAAK,CAACI,GAAG,CAAC,4BAA4B,EAAEC,GAAG,IAAI;EAC9C,IAAIA,GAAG,CAACC,OAAO,CAACC,MAAM,EAAE;IACvBF,GAAG,CAACG,CAAC,GAAGC,KAAK,CAACJ,GAAG,CAACK,EAAE,EAAEL,GAAG,CAACM,EAAE,EAAEN,GAAG,CAACC,OAAO,CAACC,MAAM,CAAC;EAClD;AACD,CAAC,CAAC;AAEFP,KAAK,CAACI,GAAG,CAAC,0BAA0B,EAAEC,GAAG,IAAI;EAC5C,IAAI,CAACA,GAAG,CAACG,CAAC,EAAE;IACXH,GAAG,CAACG,CAAC,GAAGC,KAAK,CAACJ,GAAG,CAACK,EAAE,EAAEL,GAAG,CAACM,EAAE,EAAEN,GAAG,CAACC,OAAO,CAACC,MAAM,CAAC;EAClD;AACD,CAAC,CAAC;AAEF,OAAO,SAASK,SAASA,CAAE;EAACC,EAAE;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EACtD;EACAZ,IAAI,CAACU,EAAE,CAAC,GAAGG,SAAS,CAAC,CAAC,CAAC;AACxB;AAEA,OAAO,SAASP,KAAKA,CAAEC,EAAE,EAAEC,EAAE,EAAEE,EAAE,GAAG,UAAU,EAAE;EAC/C;EACA;EACA;EACA;EACA,IAAIN,MAAM,GAAGJ,IAAI,CAACU,EAAE,CAAC;EAErB,IAAI,CAACI,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGlB,gBAAgB,CAACM,MAAM,CAACO,QAAQ,EAAEJ,EAAE,CAAC;EACxD,IAAI,CAACU,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGrB,gBAAgB,CAACM,MAAM,CAACO,QAAQ,EAAEH,EAAE,CAAC;;EAExD;EACA,IAAIY,KAAK,GAAG,CACX,CAACH,EAAE,GAAGH,EAAE,EAAG,CAAC,EAAS,CAAC,CAAO,EAC7B,CAAC,CAAC,EAASI,EAAE,GAAGH,EAAE,EAAG,CAAC,CAAO,EAC7B,CAAC,CAAC,EAAS,CAAC,EAASI,EAAE,GAAGH,EAAE,CAAC,CAC7B;EACD;;EAEA,IAAIK,aAAa,GAAGvB,gBAAgB,CAACsB,KAAK,EAAEhB,MAAM,CAACO,QAAQ,CAAC;EAC5D,IAAIW,OAAO,GAAGxB,gBAAgB,CAACM,MAAM,CAACQ,UAAU,EAAES,aAAa,CAAC;EAChE;EACA,OAAOC,OAAO;AACf;AAEAb,SAAS,CAAC;EACTC,EAAE,EAAE,WAAW;EACfC,QAAQ,EAAE,CACT,CAAG,SAAS,EAAG,SAAS,EAAE,CAAC,SAAS,CAAE,EACtC,CAAE,CAAC,SAAS,EAAG,SAAS,EAAG,SAAS,CAAE,EACtC,CAAG,SAAS,EAAG,SAAS,EAAG,SAAS,CAAE,CACtC;EACDC,UAAU,EAAE,CACX,CAAE,kBAAkB,EAAE,CAAC,kBAAkB,EAAI,mBAAmB,CAAM,EACtE,CAAE,kBAAkB,EAAG,kBAAkB,EAAG,CAAC,uBAAuB,CAAE,EACtE,CAAE,CAAC,EAAoB,CAAC,EAAqB,kBAAkB,CAAO;AAExE,CAAC,CAAC;AAEFH,SAAS,CAAC;EACTC,EAAE,EAAE,UAAU;EACd;EACA;EACAC,QAAQ,EAAE,CACT,CAAG,SAAS,EAAG,SAAS,EAAE,CAAC,SAAS,CAAE,EACtC,CAAE,CAAC,SAAS,EAAG,SAAS,EAAG,SAAS,CAAE,EACtC,CAAG,SAAS,EAAE,CAAC,SAAS,EAAG,SAAS,CAAE,CACtC;EACD;EACAC,UAAU,EAAE,CACX,CAAG,kBAAkB,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,CAAG,EACnE,CAAG,kBAAkB,EAAG,kBAAkB,EAAG,oBAAoB,CAAE,EACnE,CAAE,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,gBAAgB,CAAM;AAErE,CAAC,CAAC;AAEFH,SAAS,CAAC;EACTC,EAAE,EAAE,OAAO;EACX;EACAC,QAAQ,EAAE,CACT,CAAG,SAAS,EAAG,SAAS,EAAE,CAAC,SAAS,CAAE,EACtC,CAAE,CAAC,SAAS,EAAG,SAAS,EAAG,SAAS,CAAE,EACtC,CAAG,SAAS,EAAG,SAAS,EAAG,SAAS,CAAE,CACtC;EACDC,UAAU,EAAE,CACX,CAAG,kBAAkB,EAAI,CAAC,mBAAmB,EAAE,mBAAmB,CAAE,EACpE,CAAG,kBAAkB,EAAK,kBAAkB,EAAG,mBAAmB,CAAE,EACpE,CAAE,CAAC,oBAAoB,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAG;AAEtE,CAAC,CAAC;AAEFH,SAAS,CAAC;EACTC,EAAE,EAAE,OAAO;EACXC,QAAQ,EAAE,CACT,CAAG,QAAQ,EAAG,QAAQ,EAAE,CAAC,QAAQ,CAAE,EACnC,CAAE,CAAC,QAAQ,EAAG,QAAQ,EAAG,QAAQ,CAAE,EACnC,CAAE,CAAC,QAAQ,EAAG,QAAQ,EAAG,QAAQ,CAAE,CACnC;EACD;EACAC,UAAU,EAAE,CACX,CAAG,iBAAiB,EAAI,CAAC,kBAAkB,EAAG,mBAAmB,CAAG,EACpE,CAAG,kBAAkB,EAAI,kBAAkB,EAAE,CAAC,oBAAoB,CAAE,EACpE,CAAE,CAAC,mBAAmB,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAI;AAEtE,CAAC,CAAC;AAEFW,MAAM,CAACC,MAAM,CAACzB,MAAM,EAAE;EACrB;EACA;EACA;EACA0B,CAAC,EAAI,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAEhC;EACAC,CAAC,EAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;EAEjC;EACA;EACA;EACAC,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAChCC,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAEhC;EACAC,CAAC,EAAI,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAEhC;EACAC,EAAE,EAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAChCC,EAAE,EAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAChCC,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;AAChC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}