{"ast":null,"code":"class GeometryBufferCache {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.cache = {};\n  }\n  numCached() {\n    return Object.keys(this.cache).length;\n  }\n  isCached(gid) {\n    return this.cache[gid] !== undefined;\n  }\n  getGeometryByID(gid) {\n    return this.cache[gid]?.geometry;\n  }\n  getCached(model) {\n    return this.getCachedID(model.gid);\n  }\n  getCachedID(gid) {\n    return this.cache[gid];\n  }\n  ensureCached(geometry) {\n    const gid = geometry.gid;\n    if (!gid) {\n      throw new Error('The p5.Geometry you passed in has no gid property!');\n    }\n    if (this.isCached(geometry.gid)) return this.getCached(geometry);\n    const gl = this.renderer.GL;\n\n    //initialize the gl buffers for our geom groups\n    this.freeBuffers(gid);\n    if (Object.keys(this.cache).length > 1000) {\n      const key = Object.keys(this.cache)[0];\n      this.freeBuffers(key);\n    }\n\n    //create a new entry in our cache\n    const buffers = {};\n    this.cache[gid] = buffers;\n    buffers.geometry = geometry;\n    let indexBuffer = buffers.indexBuffer;\n    if (geometry.faces.length) {\n      // allocate space for faces\n      if (!indexBuffer) indexBuffer = buffers.indexBuffer = gl.createBuffer();\n      const vals = geometry.faces.flat();\n\n      // If any face references a vertex with an index greater than the maximum\n      // un-singed 16 bit integer, then we need to use a Uint32Array instead of a\n      // Uint16Array\n      const hasVertexIndicesOverMaxUInt16 = vals.some(v => v > 65535);\n      let type = hasVertexIndicesOverMaxUInt16 ? Uint32Array : Uint16Array;\n      this.renderer._bindBuffer(indexBuffer, gl.ELEMENT_ARRAY_BUFFER, vals, type);\n\n      // If we're using a Uint32Array for our indexBuffer we will need to pass a\n      // different enum value to WebGL draw triangles. This happens in\n      // the _drawElements function.\n      buffers.indexBufferType = hasVertexIndicesOverMaxUInt16 ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n    } else {\n      // the index buffer is unused, remove it\n      if (indexBuffer) {\n        gl.deleteBuffer(indexBuffer);\n        buffers.indexBuffer = null;\n      }\n    }\n    return buffers;\n  }\n  freeBuffers(gid) {\n    const buffers = this.cache[gid];\n    if (!buffers) {\n      return;\n    }\n    delete this.cache[gid];\n    const gl = this.renderer.GL;\n    if (buffers.indexBuffer) {\n      gl.deleteBuffer(buffers.indexBuffer);\n    }\n    function freeBuffers(defs) {\n      for (const def of defs) {\n        if (buffers[def.dst]) {\n          gl.deleteBuffer(buffers[def.dst]);\n          buffers[def.dst] = null;\n        }\n      }\n    }\n\n    // free all the buffers\n    freeBuffers(this.renderer.buffers.stroke);\n    freeBuffers(this.renderer.buffers.fill);\n    freeBuffers(this.renderer.buffers.user);\n  }\n}\nexport { GeometryBufferCache };","map":{"version":3,"names":["GeometryBufferCache","constructor","renderer","cache","numCached","Object","keys","length","isCached","gid","undefined","getGeometryByID","geometry","getCached","model","getCachedID","ensureCached","Error","gl","GL","freeBuffers","key","buffers","indexBuffer","faces","createBuffer","vals","flat","hasVertexIndicesOverMaxUInt16","some","v","type","Uint32Array","Uint16Array","_bindBuffer","ELEMENT_ARRAY_BUFFER","indexBufferType","UNSIGNED_INT","UNSIGNED_SHORT","deleteBuffer","defs","def","dst","stroke","fill","user"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/p5/dist/webgl/GeometryBufferCache.js"],"sourcesContent":["class GeometryBufferCache {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.cache = {};\n  }\n\n  numCached() {\n    return Object.keys(this.cache).length;\n  }\n\n  isCached(gid) {\n    return this.cache[gid] !== undefined;\n  }\n\n  getGeometryByID(gid) {\n    return this.cache[gid]?.geometry;\n  }\n\n  getCached(model) {\n    return this.getCachedID(model.gid);\n  }\n\n  getCachedID(gid) {\n    return this.cache[gid];\n  }\n\n  ensureCached(geometry) {\n    const gid = geometry.gid;\n    if (!gid) {\n      throw new Error('The p5.Geometry you passed in has no gid property!');\n    }\n\n    if (this.isCached(geometry.gid)) return this.getCached(geometry);\n\n    const gl = this.renderer.GL;\n\n    //initialize the gl buffers for our geom groups\n    this.freeBuffers(gid);\n\n    if (Object.keys(this.cache).length > 1000) {\n      const key = Object.keys(this.cache)[0];\n      this.freeBuffers(key);\n    }\n\n    //create a new entry in our cache\n    const buffers = {};\n    this.cache[gid] = buffers;\n\n    buffers.geometry = geometry;\n\n    let indexBuffer = buffers.indexBuffer;\n\n    if (geometry.faces.length) {\n      // allocate space for faces\n      if (!indexBuffer) indexBuffer = buffers.indexBuffer = gl.createBuffer();\n      const vals = geometry.faces.flat();\n\n      // If any face references a vertex with an index greater than the maximum\n      // un-singed 16 bit integer, then we need to use a Uint32Array instead of a\n      // Uint16Array\n      const hasVertexIndicesOverMaxUInt16 = vals.some(v => v > 65535);\n      let type = hasVertexIndicesOverMaxUInt16 ? Uint32Array : Uint16Array;\n      this.renderer._bindBuffer(indexBuffer, gl.ELEMENT_ARRAY_BUFFER, vals, type);\n\n      // If we're using a Uint32Array for our indexBuffer we will need to pass a\n      // different enum value to WebGL draw triangles. This happens in\n      // the _drawElements function.\n      buffers.indexBufferType = hasVertexIndicesOverMaxUInt16\n        ? gl.UNSIGNED_INT\n        : gl.UNSIGNED_SHORT;\n    } else {\n      // the index buffer is unused, remove it\n      if (indexBuffer) {\n        gl.deleteBuffer(indexBuffer);\n        buffers.indexBuffer = null;\n      }\n    }\n\n    return buffers;\n  }\n\n  freeBuffers(gid) {\n    const buffers = this.cache[gid];\n    if (!buffers) {\n      return;\n    }\n\n    delete this.cache[gid];\n\n    const gl = this.renderer.GL;\n    if (buffers.indexBuffer) {\n      gl.deleteBuffer(buffers.indexBuffer);\n    }\n\n    function freeBuffers(defs) {\n      for (const def of defs) {\n        if (buffers[def.dst]) {\n          gl.deleteBuffer(buffers[def.dst]);\n          buffers[def.dst] = null;\n        }\n      }\n    }\n\n    // free all the buffers\n    freeBuffers(this.renderer.buffers.stroke);\n    freeBuffers(this.renderer.buffers.fill);\n    freeBuffers(this.renderer.buffers.user);\n  }\n}\n\nexport { GeometryBufferCache };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}