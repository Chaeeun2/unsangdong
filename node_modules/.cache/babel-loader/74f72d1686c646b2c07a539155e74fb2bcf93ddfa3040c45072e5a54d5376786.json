{"ast":null,"code":"import ColorSpace from \"../space.js\";\nimport OKLab from \"./oklab.js\";\nimport { constrain as constrainAngle } from \"../angles.js\";\nexport default new ColorSpace({\n  id: \"oklch\",\n  name: \"Oklch\",\n  coords: {\n    l: {\n      refRange: [0, 1],\n      name: \"Lightness\"\n    },\n    c: {\n      refRange: [0, 0.4],\n      name: \"Chroma\"\n    },\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    }\n  },\n  white: \"D65\",\n  base: OKLab,\n  fromBase(oklab) {\n    // Convert to polar form\n    let [L, a, b] = oklab;\n    let h;\n    const ε = 0.0002; // chromatic components much smaller than a,b\n\n    if (Math.abs(a) < ε && Math.abs(b) < ε) {\n      h = NaN;\n    } else {\n      h = Math.atan2(b, a) * 180 / Math.PI;\n    }\n    return [L,\n    // OKLab L is still L\n    Math.sqrt(a ** 2 + b ** 2),\n    // Chroma\n    constrainAngle(h) // Hue, in degrees [0 to 360)\n    ];\n  },\n  // Convert from polar form\n  toBase(oklch) {\n    let [L, C, h] = oklch;\n    let a, b;\n\n    // check for NaN hue\n    if (isNaN(h)) {\n      a = 0;\n      b = 0;\n    } else {\n      a = C * Math.cos(h * Math.PI / 180);\n      b = C * Math.sin(h * Math.PI / 180);\n    }\n    return [L, a, b];\n  },\n  formats: {\n    \"oklch\": {\n      coords: [\"<percentage> | <number>\", \"<number> | <percentage>[0,1]\", \"<number> | <angle>\"]\n    }\n  }\n});","map":{"version":3,"names":["ColorSpace","OKLab","constrain","constrainAngle","id","name","coords","l","refRange","c","h","type","white","base","fromBase","oklab","L","a","b","ε","Math","abs","NaN","atan2","PI","sqrt","toBase","oklch","C","isNaN","cos","sin","formats"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/spaces/oklch.js"],"sourcesContent":["import ColorSpace from \"../space.js\";\nimport OKLab from \"./oklab.js\";\nimport {constrain as constrainAngle} from \"../angles.js\";\n\nexport default new ColorSpace({\n\tid: \"oklch\",\n\tname: \"Oklch\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 0.4],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\twhite: \"D65\",\n\n\tbase: OKLab,\n\tfromBase (oklab) {\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = oklab;\n\t\tlet h;\n\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(a) < ε && Math.abs(b) < ε) {\n\t\t\th = NaN;\n\t\t}\n\t\telse {\n\t\t\th = Math.atan2(b, a) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tL, // OKLab L is still L\n\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\tconstrainAngle(h), // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\t// Convert from polar form\n\ttoBase (oklch) {\n\t\tlet [L, C, h] = oklch;\n\t\tlet a, b;\n\n\t\t// check for NaN hue\n\t\tif (isNaN(h)) {\n\t\t\ta = 0;\n\t\t\tb = 0;\n\t\t}\n\t\telse {\n\t\t\ta = C * Math.cos(h * Math.PI / 180);\n\t\t\tb = C * Math.sin(h * Math.PI / 180);\n\t\t}\n\n\t\treturn [ L, a, b ];\n\t},\n\n\tformats: {\n\t\t\"oklch\": {\n\t\t\tcoords: [\"<percentage> | <number>\", \"<number> | <percentage>[0,1]\", \"<number> | <angle>\"],\n\t\t},\n\t},\n});\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,OAAOC,KAAK,MAAM,YAAY;AAC9B,SAAQC,SAAS,IAAIC,cAAc,QAAO,cAAc;AAExD,eAAe,IAAIH,UAAU,CAAC;EAC7BI,EAAE,EAAE,OAAO;EACXC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE;IACPC,CAAC,EAAE;MACFC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAChBH,IAAI,EAAE;IACP,CAAC;IACDI,CAAC,EAAE;MACFD,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MAClBH,IAAI,EAAE;IACP,CAAC;IACDK,CAAC,EAAE;MACFF,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MAClBG,IAAI,EAAE,OAAO;MACbN,IAAI,EAAE;IACP;EACD,CAAC;EACDO,KAAK,EAAE,KAAK;EAEZC,IAAI,EAAEZ,KAAK;EACXa,QAAQA,CAAEC,KAAK,EAAE;IAChB;IACA,IAAI,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAAK;IACrB,IAAIL,CAAC;IACL,MAAMS,CAAC,GAAG,MAAM,CAAC,CAAC;;IAElB,IAAIC,IAAI,CAACC,GAAG,CAACJ,CAAC,CAAC,GAAGE,CAAC,IAAIC,IAAI,CAACC,GAAG,CAACH,CAAC,CAAC,GAAGC,CAAC,EAAE;MACvCT,CAAC,GAAGY,GAAG;IACR,CAAC,MACI;MACJZ,CAAC,GAAGU,IAAI,CAACG,KAAK,CAACL,CAAC,EAAED,CAAC,CAAC,GAAG,GAAG,GAAGG,IAAI,CAACI,EAAE;IACrC;IAEA,OAAO,CACNR,CAAC;IAAE;IACHI,IAAI,CAACK,IAAI,CAACR,CAAC,IAAI,CAAC,GAAGC,CAAC,IAAI,CAAC,CAAC;IAAE;IAC5Bf,cAAc,CAACO,CAAC,CAAC,CAAE;IAAA,CACnB;EACF,CAAC;EACD;EACAgB,MAAMA,CAAEC,KAAK,EAAE;IACd,IAAI,CAACX,CAAC,EAAEY,CAAC,EAAElB,CAAC,CAAC,GAAGiB,KAAK;IACrB,IAAIV,CAAC,EAAEC,CAAC;;IAER;IACA,IAAIW,KAAK,CAACnB,CAAC,CAAC,EAAE;MACbO,CAAC,GAAG,CAAC;MACLC,CAAC,GAAG,CAAC;IACN,CAAC,MACI;MACJD,CAAC,GAAGW,CAAC,GAAGR,IAAI,CAACU,GAAG,CAACpB,CAAC,GAAGU,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC;MACnCN,CAAC,GAAGU,CAAC,GAAGR,IAAI,CAACW,GAAG,CAACrB,CAAC,GAAGU,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC;IACpC;IAEA,OAAO,CAAER,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE;EACnB,CAAC;EAEDc,OAAO,EAAE;IACR,OAAO,EAAE;MACR1B,MAAM,EAAE,CAAC,yBAAyB,EAAE,8BAA8B,EAAE,oBAAoB;IACzF;EACD;AACD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}