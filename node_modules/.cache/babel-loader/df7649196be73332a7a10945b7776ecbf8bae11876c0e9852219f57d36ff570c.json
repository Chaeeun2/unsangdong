{"ast":null,"code":"import ColorSpace from \"../space.js\";\nimport Jzazbz from \"./jzazbz.js\";\nimport { constrain as constrainAngle } from \"../angles.js\";\nexport default new ColorSpace({\n  id: \"jzczhz\",\n  name: \"JzCzHz\",\n  coords: {\n    jz: {\n      refRange: [0, 1],\n      name: \"Jz\"\n    },\n    cz: {\n      refRange: [0, 1],\n      name: \"Chroma\"\n    },\n    hz: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    }\n  },\n  base: Jzazbz,\n  fromBase(jzazbz) {\n    // Convert to polar form\n    let [Jz, az, bz] = jzazbz;\n    let hue;\n    const ε = 0.0002; // chromatic components much smaller than a,b\n\n    if (Math.abs(az) < ε && Math.abs(bz) < ε) {\n      hue = NaN;\n    } else {\n      hue = Math.atan2(bz, az) * 180 / Math.PI;\n    }\n    return [Jz,\n    // Jz is still Jz\n    Math.sqrt(az ** 2 + bz ** 2),\n    // Chroma\n    constrainAngle(hue) // Hue, in degrees [0 to 360)\n    ];\n  },\n  toBase(jzczhz) {\n    // Convert from polar form\n    // debugger;\n    return [jzczhz[0],\n    // Jz is still Jz\n    jzczhz[1] * Math.cos(jzczhz[2] * Math.PI / 180),\n    // az\n    jzczhz[1] * Math.sin(jzczhz[2] * Math.PI / 180) // bz\n    ];\n  }\n});","map":{"version":3,"names":["ColorSpace","Jzazbz","constrain","constrainAngle","id","name","coords","jz","refRange","cz","hz","type","base","fromBase","jzazbz","Jz","az","bz","hue","ε","Math","abs","NaN","atan2","PI","sqrt","toBase","jzczhz","cos","sin"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/spaces/jzczhz.js"],"sourcesContent":["import ColorSpace from \"../space.js\";\nimport Jzazbz from \"./jzazbz.js\";\nimport {constrain as constrainAngle} from \"../angles.js\";\n\nexport default new ColorSpace({\n\tid: \"jzczhz\",\n\tname: \"JzCzHz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\tcz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\thz: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\n\tbase: Jzazbz,\n\tfromBase (jzazbz) {\n\t\t// Convert to polar form\n\t\tlet [Jz, az, bz] = jzazbz;\n\t\tlet hue;\n\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(az) < ε && Math.abs(bz) < ε) {\n\t\t\thue = NaN;\n\t\t}\n\t\telse {\n\t\t\thue = Math.atan2(bz, az) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tJz, // Jz is still Jz\n\t\t\tMath.sqrt(az ** 2 + bz ** 2), // Chroma\n\t\t\tconstrainAngle(hue), // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\ttoBase (jzczhz) {\n\t\t// Convert from polar form\n\t\t// debugger;\n\t\treturn [\n\t\t\tjzczhz[0], // Jz is still Jz\n\t\t\tjzczhz[1] * Math.cos(jzczhz[2] * Math.PI / 180), // az\n\t\t\tjzczhz[1] * Math.sin(jzczhz[2] * Math.PI / 180),  // bz\n\t\t];\n\t},\n});\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,OAAOC,MAAM,MAAM,aAAa;AAChC,SAAQC,SAAS,IAAIC,cAAc,QAAO,cAAc;AAExD,eAAe,IAAIH,UAAU,CAAC;EAC7BI,EAAE,EAAE,QAAQ;EACZC,IAAI,EAAE,QAAQ;EACdC,MAAM,EAAE;IACPC,EAAE,EAAE;MACHC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAChBH,IAAI,EAAE;IACP,CAAC;IACDI,EAAE,EAAE;MACHD,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAChBH,IAAI,EAAE;IACP,CAAC;IACDK,EAAE,EAAE;MACHF,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MAClBG,IAAI,EAAE,OAAO;MACbN,IAAI,EAAE;IACP;EACD,CAAC;EAEDO,IAAI,EAAEX,MAAM;EACZY,QAAQA,CAAEC,MAAM,EAAE;IACjB;IACA,IAAI,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGH,MAAM;IACzB,IAAII,GAAG;IACP,MAAMC,CAAC,GAAG,MAAM,CAAC,CAAC;;IAElB,IAAIC,IAAI,CAACC,GAAG,CAACL,EAAE,CAAC,GAAGG,CAAC,IAAIC,IAAI,CAACC,GAAG,CAACJ,EAAE,CAAC,GAAGE,CAAC,EAAE;MACzCD,GAAG,GAAGI,GAAG;IACV,CAAC,MACI;MACJJ,GAAG,GAAGE,IAAI,CAACG,KAAK,CAACN,EAAE,EAAED,EAAE,CAAC,GAAG,GAAG,GAAGI,IAAI,CAACI,EAAE;IACzC;IAEA,OAAO,CACNT,EAAE;IAAE;IACJK,IAAI,CAACK,IAAI,CAACT,EAAE,IAAI,CAAC,GAAGC,EAAE,IAAI,CAAC,CAAC;IAAE;IAC9Bd,cAAc,CAACe,GAAG,CAAC,CAAE;IAAA,CACrB;EACF,CAAC;EACDQ,MAAMA,CAAEC,MAAM,EAAE;IACf;IACA;IACA,OAAO,CACNA,MAAM,CAAC,CAAC,CAAC;IAAE;IACXA,MAAM,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACQ,GAAG,CAACD,MAAM,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC;IAAE;IACjDG,MAAM,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACS,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC,CAAG;IAAA,CAClD;EACF;AACD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}