{"ast":null,"code":"var _jsxFileName = \"/Users/lyuchaeeun/Desktop/unsaengdong/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  // 랜덤 선택 함수\n  const getRandomImages = (imageList, count) => {\n    const shuffled = [...imageList].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n\n  // 세로 이미지 리스트 (실제 파일명으로 수정 필요)\n  const verticalImages = ['main1.jpg', 'main2.jpg', 'main3.jpg', 'main4.jpg'\n  // 필요에 따라 더 추가\n  ];\n\n  // 가로 이미지 리스트 (실제 파일명으로 수정 필요)\n  const horizonImages = ['main1.jpg', 'main2.jpg', 'main3.jpg', 'main4.jpg', 'main5.jpg', 'main6.jpg'\n  // 필요에 따라 더 추가\n  ];\n\n  // 상태로 선택된 이미지들 관리\n  const [selectedVerticalImages, setSelectedVerticalImages] = useState(() => getRandomImages(verticalImages, 2));\n  const [selectedHorizonImages, setSelectedHorizonImages] = useState(() => getRandomImages(horizonImages, 5));\n\n  // 로고 클릭 핸들러 - 이미지 재선택\n  const handleLogoClick = () => {\n    setSelectedVerticalImages(getRandomImages(verticalImages, 2));\n    setSelectedHorizonImages(getRandomImages(horizonImages, 5));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-logo\",\n      onClick: handleLogoClick,\n      style: {\n        cursor: 'pointer'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://pub-1331f8c46b8d4b71aa752849b530c45e.r2.dev/main-logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-image-wrap\",\n      children: [selectedVerticalImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-image-ver main-image${index + 1}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/images/main/vertical/${image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, `vertical-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), selectedHorizonImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-image-hor main-image${index + 3}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/images/main/horizon/${image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, `horizon-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"n7M6lK5qORdcTzE836iUbz+Fhh0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","_s","getRandomImages","imageList","count","shuffled","sort","Math","random","slice","verticalImages","horizonImages","selectedVerticalImages","setSelectedVerticalImages","selectedHorizonImages","setSelectedHorizonImages","handleLogoClick","className","children","onClick","style","cursor","src","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","_c","$RefreshReg$"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Main.css';\n\nfunction Main() {\n  // 랜덤 선택 함수\n  const getRandomImages = (imageList, count) => {\n    const shuffled = [...imageList].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n\n  // 세로 이미지 리스트 (실제 파일명으로 수정 필요)\n  const verticalImages = [\n    'main1.jpg',\n    'main2.jpg', \n    'main3.jpg',\n    'main4.jpg'\n    // 필요에 따라 더 추가\n  ];\n\n  // 가로 이미지 리스트 (실제 파일명으로 수정 필요)\n  const horizonImages = [\n    'main1.jpg',\n    'main2.jpg',\n    'main3.jpg',\n    'main4.jpg',\n    'main5.jpg',\n    'main6.jpg'\n    // 필요에 따라 더 추가\n  ];\n\n  // 상태로 선택된 이미지들 관리\n  const [selectedVerticalImages, setSelectedVerticalImages] = useState(\n    () => getRandomImages(verticalImages, 2)\n  );\n  const [selectedHorizonImages, setSelectedHorizonImages] = useState(\n    () => getRandomImages(horizonImages, 5)\n  );\n\n  // 로고 클릭 핸들러 - 이미지 재선택\n  const handleLogoClick = () => {\n    setSelectedVerticalImages(getRandomImages(verticalImages, 2));\n    setSelectedHorizonImages(getRandomImages(horizonImages, 5));\n  };\n\n  return (\n    <main className=\"main-container\">\n      <div className=\"main-logo\" onClick={handleLogoClick} style={{cursor: 'pointer'}}>\n        <img src=\"https://pub-1331f8c46b8d4b71aa752849b530c45e.r2.dev/main-logo.png\"/>\n      </div>\n      <div className=\"main-image-wrap\">\n        {selectedVerticalImages.map((image, index) => (\n          <div key={`vertical-${index}`} className={`main-image-ver main-image${index + 1}`}>\n            <img src={`/images/main/vertical/${image}`}/>\n          </div>\n        ))}\n        {selectedHorizonImages.map((image, index) => (\n          <div key={`horizon-${index}`} className={`main-image-hor main-image${index + 3}`}>\n            <img src={`/images/main/horizon/${image}`}/>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n}\n\nexport default Main; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}