{"ast":null,"code":"import jzczhz from \"../spaces/jzczhz.js\";\nimport getColor from \"../getColor.js\";\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// Uses JzCzHz, which has improved perceptual uniformity\n// and thus a simple Euclidean root-sum of ΔL² ΔC² ΔH²\n// gives good results.\n\nexport default function (color, sample) {\n  [color, sample] = getColor([color, sample]);\n\n  // Given this color as the reference\n  // and a sample,\n  // calculate deltaE in JzCzHz.\n  let [Jz1, Cz1, Hz1] = jzczhz.from(color);\n  let [Jz2, Cz2, Hz2] = jzczhz.from(sample);\n\n  // Lightness and Chroma differences\n  // sign does not matter as they are squared.\n  let ΔJ = Jz1 - Jz2;\n  let ΔC = Cz1 - Cz2;\n\n  // length of chord for ΔH\n  if (Number.isNaN(Hz1) && Number.isNaN(Hz2)) {\n    // both undefined hues\n    Hz1 = 0;\n    Hz2 = 0;\n  } else if (Number.isNaN(Hz1)) {\n    // one undefined, set to the defined hue\n    Hz1 = Hz2;\n  } else if (Number.isNaN(Hz2)) {\n    Hz2 = Hz1;\n  }\n  let Δh = Hz1 - Hz2;\n  let ΔH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin(Δh / 2 * (Math.PI / 180));\n  return Math.sqrt(ΔJ ** 2 + ΔC ** 2 + ΔH ** 2);\n}","map":{"version":3,"names":["jzczhz","getColor","color","sample","Jz1","Cz1","Hz1","from","Jz2","Cz2","Hz2","ΔJ","ΔC","Number","isNaN","Δh","ΔH","Math","sqrt","sin","PI"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/deltaE/deltaEJz.js"],"sourcesContent":["import jzczhz from \"../spaces/jzczhz.js\";\nimport getColor from \"../getColor.js\";\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// Uses JzCzHz, which has improved perceptual uniformity\n// and thus a simple Euclidean root-sum of ΔL² ΔC² ΔH²\n// gives good results.\n\nexport default function (color, sample) {\n\t[color, sample] = getColor([color, sample]);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in JzCzHz.\n\tlet [Jz1, Cz1, Hz1] = jzczhz.from(color);\n\tlet [Jz2, Cz2, Hz2] = jzczhz.from(sample);\n\n\t// Lightness and Chroma differences\n\t// sign does not matter as they are squared.\n\tlet ΔJ = Jz1 - Jz2;\n\tlet ΔC = Cz1 - Cz2;\n\n\t// length of chord for ΔH\n\tif ((Number.isNaN(Hz1)) && (Number.isNaN(Hz2))) {\n\t\t// both undefined hues\n\t\tHz1 = 0;\n\t\tHz2 = 0;\n\t}\n\telse if (Number.isNaN(Hz1)) {\n\t\t// one undefined, set to the defined hue\n\t\tHz1 = Hz2;\n\t}\n\telse if (Number.isNaN(Hz2)) {\n\t\tHz2 = Hz1;\n\t}\n\n\tlet Δh = Hz1 - Hz2;\n\tlet ΔH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin((Δh / 2) * (Math.PI / 180));\n\n\treturn Math.sqrt(ΔJ ** 2 + ΔC ** 2 + ΔH ** 2);\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,gBAAgB;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,UAAUC,KAAK,EAAEC,MAAM,EAAE;EACvC,CAACD,KAAK,EAAEC,MAAM,CAAC,GAAGF,QAAQ,CAAC,CAACC,KAAK,EAAEC,MAAM,CAAC,CAAC;;EAE3C;EACA;EACA;EACA,IAAI,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC,GAAGN,MAAM,CAACO,IAAI,CAACL,KAAK,CAAC;EACxC,IAAI,CAACM,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC,GAAGV,MAAM,CAACO,IAAI,CAACJ,MAAM,CAAC;;EAEzC;EACA;EACA,IAAIQ,EAAE,GAAGP,GAAG,GAAGI,GAAG;EAClB,IAAII,EAAE,GAAGP,GAAG,GAAGI,GAAG;;EAElB;EACA,IAAKI,MAAM,CAACC,KAAK,CAACR,GAAG,CAAC,IAAMO,MAAM,CAACC,KAAK,CAACJ,GAAG,CAAE,EAAE;IAC/C;IACAJ,GAAG,GAAG,CAAC;IACPI,GAAG,GAAG,CAAC;EACR,CAAC,MACI,IAAIG,MAAM,CAACC,KAAK,CAACR,GAAG,CAAC,EAAE;IAC3B;IACAA,GAAG,GAAGI,GAAG;EACV,CAAC,MACI,IAAIG,MAAM,CAACC,KAAK,CAACJ,GAAG,CAAC,EAAE;IAC3BA,GAAG,GAAGJ,GAAG;EACV;EAEA,IAAIS,EAAE,GAAGT,GAAG,GAAGI,GAAG;EAClB,IAAIM,EAAE,GAAG,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACb,GAAG,GAAGI,GAAG,CAAC,GAAGQ,IAAI,CAACE,GAAG,CAAEJ,EAAE,GAAG,CAAC,IAAKE,IAAI,CAACG,EAAE,GAAG,GAAG,CAAC,CAAC;EAExE,OAAOH,IAAI,CAACC,IAAI,CAACP,EAAE,IAAI,CAAC,GAAGC,EAAE,IAAI,CAAC,GAAGI,EAAE,IAAI,CAAC,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}