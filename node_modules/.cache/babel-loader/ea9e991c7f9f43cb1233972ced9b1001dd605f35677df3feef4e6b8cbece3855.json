{"ast":null,"code":"// APCA 0.0.98G\n// https://github.com/Myndex/apca-w3\n// see also https://github.com/w3c/silver/issues/643\n\nimport getColor from \"../getColor.js\";\nimport to from \"../to.js\";\n\n// exponents\nconst normBG = 0.56;\nconst normTXT = 0.57;\nconst revTXT = 0.62;\nconst revBG = 0.65;\n\n// clamps\nconst blkThrs = 0.022;\nconst blkClmp = 1.414;\nconst loClip = 0.1;\nconst deltaYmin = 0.0005;\n\n// scalers\n// see https://github.com/w3c/silver/issues/645\nconst scaleBoW = 1.14;\nconst loBoWoffset = 0.027;\nconst scaleWoB = 1.14;\nconst loWoBoffset = 0.027;\nfunction fclamp(Y) {\n  if (Y >= blkThrs) {\n    return Y;\n  }\n  return Y + (blkThrs - Y) ** blkClmp;\n}\nfunction linearize(val) {\n  let sign = val < 0 ? -1 : 1;\n  let abs = Math.abs(val);\n  return sign * Math.pow(abs, 2.4);\n}\n\n// Not symmetric, requires a foreground (text) color, and a background color\nexport default function contrastAPCA(background, foreground) {\n  foreground = getColor(foreground);\n  background = getColor(background);\n  let S;\n  let C;\n  let Sapc;\n\n  // Myndex as-published, assumes sRGB inputs\n  let R, G, B;\n  foreground = to(foreground, \"srgb\");\n  // Should these be clamped to in-gamut values?\n\n  // Calculates \"screen luminance\" with non-standard simple gamma EOTF\n  // weights should be from CSS Color 4, not the ones here which are via Myndex and copied from Lindbloom\n  [R, G, B] = foreground.coords;\n  let lumTxt = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n  background = to(background, \"srgb\");\n  [R, G, B] = background.coords;\n  let lumBg = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n\n  // toe clamping of very dark values to account for flare\n  let Ytxt = fclamp(lumTxt);\n  let Ybg = fclamp(lumBg);\n\n  // are we \"Black on White\" (dark on light), or light on dark?\n  let BoW = Ybg > Ytxt;\n\n  // why is this a delta, when Y is not perceptually uniform?\n  // Answer: it is a noise gate, see\n  // https://github.com/LeaVerou/color.js/issues/208\n  if (Math.abs(Ybg - Ytxt) < deltaYmin) {\n    C = 0;\n  } else {\n    if (BoW) {\n      // dark text on light background\n      S = Ybg ** normBG - Ytxt ** normTXT;\n      C = S * scaleBoW;\n    } else {\n      // light text on dark background\n      S = Ybg ** revBG - Ytxt ** revTXT;\n      C = S * scaleWoB;\n    }\n  }\n  if (Math.abs(C) < loClip) {\n    Sapc = 0;\n  } else if (C > 0) {\n    // not clear whether Woffset is loBoWoffset or loWoBoffset\n    // but they have the same value\n    Sapc = C - loBoWoffset;\n  } else {\n    Sapc = C + loBoWoffset;\n  }\n  return Sapc * 100;\n}","map":{"version":3,"names":["getColor","to","normBG","normTXT","revTXT","revBG","blkThrs","blkClmp","loClip","deltaYmin","scaleBoW","loBoWoffset","scaleWoB","loWoBoffset","fclamp","Y","linearize","val","sign","abs","Math","pow","contrastAPCA","background","foreground","S","C","Sapc","R","G","B","coords","lumTxt","lumBg","Ytxt","Ybg","BoW"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/contrast/APCA.js"],"sourcesContent":["// APCA 0.0.98G\n// https://github.com/Myndex/apca-w3\n// see also https://github.com/w3c/silver/issues/643\n\nimport getColor from \"../getColor.js\";\nimport to from \"../to.js\";\n\n// exponents\nconst normBG = 0.56;\nconst normTXT = 0.57;\nconst revTXT = 0.62;\nconst revBG = 0.65;\n\n// clamps\nconst blkThrs = 0.022;\nconst blkClmp = 1.414;\nconst loClip = 0.1;\nconst deltaYmin = 0.0005;\n\n// scalers\n// see https://github.com/w3c/silver/issues/645\nconst scaleBoW = 1.14;\nconst loBoWoffset = 0.027;\nconst scaleWoB = 1.14;\nconst loWoBoffset = 0.027;\n\nfunction fclamp (Y) {\n\tif (Y >= blkThrs) {\n\t\treturn Y;\n\t}\n\treturn Y + (blkThrs - Y) ** blkClmp;\n}\n\nfunction linearize (val) {\n\tlet sign = val < 0 ? -1 : 1;\n\tlet abs = Math.abs(val);\n\treturn sign * Math.pow(abs, 2.4);\n}\n\n// Not symmetric, requires a foreground (text) color, and a background color\nexport default function contrastAPCA (background, foreground) {\n\tforeground = getColor(foreground);\n\tbackground = getColor(background);\n\n\tlet S;\n\tlet C;\n\tlet Sapc;\n\n\t// Myndex as-published, assumes sRGB inputs\n\tlet R, G, B;\n\n\tforeground = to(foreground, \"srgb\");\n\t// Should these be clamped to in-gamut values?\n\n\t// Calculates \"screen luminance\" with non-standard simple gamma EOTF\n\t// weights should be from CSS Color 4, not the ones here which are via Myndex and copied from Lindbloom\n\t[R, G, B] = foreground.coords;\n\tlet lumTxt = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n\n\tbackground = to(background, \"srgb\");\n\t[R, G, B] = background.coords;\n\tlet lumBg = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n\n\t// toe clamping of very dark values to account for flare\n\tlet Ytxt = fclamp(lumTxt);\n\tlet Ybg = fclamp(lumBg);\n\n\t// are we \"Black on White\" (dark on light), or light on dark?\n\tlet BoW = Ybg > Ytxt;\n\n\t// why is this a delta, when Y is not perceptually uniform?\n\t// Answer: it is a noise gate, see\n\t// https://github.com/LeaVerou/color.js/issues/208\n\tif (Math.abs(Ybg - Ytxt) < deltaYmin) {\n\t\tC = 0;\n\t}\n\telse {\n\t\tif (BoW) {\n\t\t\t// dark text on light background\n\t\t\tS = Ybg ** normBG - Ytxt ** normTXT;\n\t\t\tC = S * scaleBoW;\n\t\t}\n\t\telse {\n\t\t\t// light text on dark background\n\t\t\tS = Ybg ** revBG - Ytxt ** revTXT;\n\t\t\tC = S * scaleWoB;\n\t\t}\n\t}\n\tif (Math.abs(C) < loClip) {\n\t\tSapc = 0;\n\t}\n\telse if (C > 0) {\n\t\t// not clear whether Woffset is loBoWoffset or loWoBoffset\n\t\t// but they have the same value\n\t\tSapc = C - loBoWoffset;\n\t}\n\telse {\n\t\tSapc = C + loBoWoffset;\n\t}\n\n\treturn Sapc * 100;\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,EAAE,MAAM,UAAU;;AAEzB;AACA,MAAMC,MAAM,GAAG,IAAI;AACnB,MAAMC,OAAO,GAAG,IAAI;AACpB,MAAMC,MAAM,GAAG,IAAI;AACnB,MAAMC,KAAK,GAAG,IAAI;;AAElB;AACA,MAAMC,OAAO,GAAG,KAAK;AACrB,MAAMC,OAAO,GAAG,KAAK;AACrB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,SAAS,GAAG,MAAM;;AAExB;AACA;AACA,MAAMC,QAAQ,GAAG,IAAI;AACrB,MAAMC,WAAW,GAAG,KAAK;AACzB,MAAMC,QAAQ,GAAG,IAAI;AACrB,MAAMC,WAAW,GAAG,KAAK;AAEzB,SAASC,MAAMA,CAAEC,CAAC,EAAE;EACnB,IAAIA,CAAC,IAAIT,OAAO,EAAE;IACjB,OAAOS,CAAC;EACT;EACA,OAAOA,CAAC,GAAG,CAACT,OAAO,GAAGS,CAAC,KAAKR,OAAO;AACpC;AAEA,SAASS,SAASA,CAAEC,GAAG,EAAE;EACxB,IAAIC,IAAI,GAAGD,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAC3B,IAAIE,GAAG,GAAGC,IAAI,CAACD,GAAG,CAACF,GAAG,CAAC;EACvB,OAAOC,IAAI,GAAGE,IAAI,CAACC,GAAG,CAACF,GAAG,EAAE,GAAG,CAAC;AACjC;;AAEA;AACA,eAAe,SAASG,YAAYA,CAAEC,UAAU,EAAEC,UAAU,EAAE;EAC7DA,UAAU,GAAGxB,QAAQ,CAACwB,UAAU,CAAC;EACjCD,UAAU,GAAGvB,QAAQ,CAACuB,UAAU,CAAC;EAEjC,IAAIE,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,IAAI;;EAER;EACA,IAAIC,CAAC,EAAEC,CAAC,EAAEC,CAAC;EAEXN,UAAU,GAAGvB,EAAE,CAACuB,UAAU,EAAE,MAAM,CAAC;EACnC;;EAEA;EACA;EACA,CAACI,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGN,UAAU,CAACO,MAAM;EAC7B,IAAIC,MAAM,GAAGhB,SAAS,CAACY,CAAC,CAAC,GAAG,SAAS,GAAGZ,SAAS,CAACa,CAAC,CAAC,GAAG,SAAS,GAAGb,SAAS,CAACc,CAAC,CAAC,GAAG,SAAS;EAE3FP,UAAU,GAAGtB,EAAE,CAACsB,UAAU,EAAE,MAAM,CAAC;EACnC,CAACK,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGP,UAAU,CAACQ,MAAM;EAC7B,IAAIE,KAAK,GAAGjB,SAAS,CAACY,CAAC,CAAC,GAAG,SAAS,GAAGZ,SAAS,CAACa,CAAC,CAAC,GAAG,SAAS,GAAGb,SAAS,CAACc,CAAC,CAAC,GAAG,SAAS;;EAE1F;EACA,IAAII,IAAI,GAAGpB,MAAM,CAACkB,MAAM,CAAC;EACzB,IAAIG,GAAG,GAAGrB,MAAM,CAACmB,KAAK,CAAC;;EAEvB;EACA,IAAIG,GAAG,GAAGD,GAAG,GAAGD,IAAI;;EAEpB;EACA;EACA;EACA,IAAId,IAAI,CAACD,GAAG,CAACgB,GAAG,GAAGD,IAAI,CAAC,GAAGzB,SAAS,EAAE;IACrCiB,CAAC,GAAG,CAAC;EACN,CAAC,MACI;IACJ,IAAIU,GAAG,EAAE;MACR;MACAX,CAAC,GAAGU,GAAG,IAAIjC,MAAM,GAAGgC,IAAI,IAAI/B,OAAO;MACnCuB,CAAC,GAAGD,CAAC,GAAGf,QAAQ;IACjB,CAAC,MACI;MACJ;MACAe,CAAC,GAAGU,GAAG,IAAI9B,KAAK,GAAG6B,IAAI,IAAI9B,MAAM;MACjCsB,CAAC,GAAGD,CAAC,GAAGb,QAAQ;IACjB;EACD;EACA,IAAIQ,IAAI,CAACD,GAAG,CAACO,CAAC,CAAC,GAAGlB,MAAM,EAAE;IACzBmB,IAAI,GAAG,CAAC;EACT,CAAC,MACI,IAAID,CAAC,GAAG,CAAC,EAAE;IACf;IACA;IACAC,IAAI,GAAGD,CAAC,GAAGf,WAAW;EACvB,CAAC,MACI;IACJgB,IAAI,GAAGD,CAAC,GAAGf,WAAW;EACvB;EAEA,OAAOgB,IAAI,GAAG,GAAG;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}