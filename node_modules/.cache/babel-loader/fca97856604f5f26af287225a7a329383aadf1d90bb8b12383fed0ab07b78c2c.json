{"ast":null,"code":"import { v as constants } from '../../constants-BRcElHU3.js';\nimport * as z from 'zod';\nvar p5$1 = {\n  describe: {\n    overloads: [[\"String\", \"FALLBACK|LABEL?\"]]\n  },\n  describeElement: {\n    overloads: [[\"String\", \"String\", \"FALLBACK|LABEL?\"]]\n  },\n  textOutput: {\n    overloads: [[\"FALLBACK|LABEL?\"]]\n  },\n  gridOutput: {\n    overloads: [[\"FALLBACK|LABEL?\"]]\n  },\n  p5: {\n    overloads: [[\"Object\", \"String|HTMLElement\"]]\n  },\n  color: {\n    overloads: [[\"Number\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number?\"], [\"String\"], [\"Number[]\"], [\"p5.Color\"]]\n  },\n  red: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  green: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  blue: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  alpha: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  hue: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  saturation: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  brightness: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  lightness: {\n    overloads: [[\"p5.Color|Number[]|String\"]]\n  },\n  lerpColor: {\n    overloads: [[\"p5.Color\", \"p5.Color\", \"Number\"]]\n  },\n  paletteLerp: {\n    overloads: [[\"[p5.Color|String|Number|Number[], Number][]\", \"Number\"]]\n  },\n  beginClip: {\n    overloads: [[\"Object?\"]]\n  },\n  endClip: {\n    overloads: [[]]\n  },\n  clip: {\n    overloads: [[\"Function\", \"Object?\"]]\n  },\n  background: {\n    overloads: [[\"p5.Color\"], [\"String\", \"Number?\"], [\"Number\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number?\"], [\"Number[]\"], [\"p5.Image\", \"Number?\"]]\n  },\n  clear: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\"], []]\n  },\n  colorMode: {\n    overloads: [[\"RGB|HSB|HSL|RGBHDR|HWB|LAB|LCH|OKLAB|OKLCH\", \"Number?\"], [\"RGB|HSB|HSL|RGBHDR|HWB|LAB|LCH|OKLAB|OKLCH\", \"Number\", \"Number\", \"Number\", \"Number?\"]]\n  },\n  fill: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\"], [\"String\"], [\"Number\", \"Number?\"], [\"Number[]\"], [\"p5.Color\"]]\n  },\n  noFill: {\n    overloads: [[]]\n  },\n  noStroke: {\n    overloads: [[]]\n  },\n  stroke: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\"], [\"String\"], [\"Number\", \"Number?\"], [\"Number[]\"], [\"p5.Color\"]]\n  },\n  erase: {\n    overloads: [[\"Number?\", \"Number?\"]]\n  },\n  noErase: {\n    overloads: [[]]\n  },\n  blendMode: {\n    overloads: [[\"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|REMOVE|SUBTRACT\"]]\n  },\n  print: {\n    overloads: [[\"Any\"], [\"String|Number|Array\"]]\n  },\n  cursor: {\n    overloads: [[\"ARROW|CROSS|HAND|MOVE|TEXT|WAIT|String\", \"Number?\", \"Number?\"]]\n  },\n  frameRate: {\n    overloads: [[\"Number\"], []]\n  },\n  getTargetFrameRate: {\n    overloads: [[]]\n  },\n  noCursor: {\n    overloads: [[]]\n  },\n  windowResized: {\n    overloads: [[\"UIEvent?\"]]\n  },\n  fullscreen: {\n    overloads: [[\"Boolean?\"]]\n  },\n  pixelDensity: {\n    overloads: [[\"Number?\"], []]\n  },\n  displayDensity: {\n    overloads: [[]]\n  },\n  getURL: {\n    overloads: [[]]\n  },\n  getURLPath: {\n    overloads: [[]]\n  },\n  getURLParams: {\n    overloads: [[]]\n  },\n  worldToScreen: {\n    overloads: [[\"Number|p5.Vector\", \"Number\", \"Number?\"]]\n  },\n  screenToWorld: {\n    overloads: [[\"Number|p5.Vector\", \"Number\", \"Number?\"]]\n  },\n  setup: {\n    overloads: [[]]\n  },\n  draw: {\n    overloads: [[]]\n  },\n  createCanvas: {\n    overloads: [[\"Number?\", \"Number?\", \"P2D|WEBGL|P2DHDR?\", \"HTMLCanvasElement?\"], [\"Number?\", \"Number?\", \"HTMLCanvasElement?\"]]\n  },\n  resizeCanvas: {\n    overloads: [[\"Number\", \"Number\", \"Boolean?\"]]\n  },\n  noCanvas: {\n    overloads: [[]]\n  },\n  createGraphics: {\n    overloads: [[\"Number\", \"Number\", \"P2D|WEBGL?\", \"HTMLCanvasElement?\"], [\"Number\", \"Number\", \"HTMLCanvasElement?\"]]\n  },\n  createFramebuffer: {\n    overloads: [[\"Object?\"]]\n  },\n  clearDepth: {\n    overloads: [[\"Number?\"]]\n  },\n  noLoop: {\n    overloads: [[]]\n  },\n  loop: {\n    overloads: [[]]\n  },\n  isLooping: {\n    overloads: [[]]\n  },\n  redraw: {\n    overloads: [[\"Integer?\"]]\n  },\n  applyMatrix: {\n    overloads: [[\"Array\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  resetMatrix: {\n    overloads: [[]]\n  },\n  rotate: {\n    overloads: [[\"Number\", \"p5.Vector|Number[]?\"]]\n  },\n  rotateX: {\n    overloads: [[\"Number\"]]\n  },\n  rotateY: {\n    overloads: [[\"Number\"]]\n  },\n  rotateZ: {\n    overloads: [[\"Number\"]]\n  },\n  scale: {\n    overloads: [[\"Number|p5.Vector|Number[]\", \"Number?\", \"Number?\"], [\"p5.Vector|Number[]\"]]\n  },\n  shearX: {\n    overloads: [[\"Number\"]]\n  },\n  shearY: {\n    overloads: [[\"Number\"]]\n  },\n  translate: {\n    overloads: [[\"Number\", \"Number\", \"Number?\"], [\"p5.Vector\"]]\n  },\n  push: {\n    overloads: [[]]\n  },\n  pop: {\n    overloads: [[]]\n  },\n  storeItem: {\n    overloads: [[\"String\", \"String|Number|Boolean|Object|Array\"]]\n  },\n  getItem: {\n    overloads: [[\"String\"]]\n  },\n  clearStorage: {\n    overloads: [[]]\n  },\n  removeItem: {\n    overloads: [[\"String\"]]\n  },\n  select: {\n    overloads: [[\"String\", \"String|p5.Element|HTMLElement?\"]]\n  },\n  selectAll: {\n    overloads: [[\"String\", \"String|p5.Element|HTMLElement?\"]]\n  },\n  createElement: {\n    overloads: [[\"String\", \"String?\"]]\n  },\n  removeElements: {\n    overloads: [[]]\n  },\n  addElement: {\n    overloads: [[]]\n  },\n  createDiv: {\n    overloads: [[\"String?\"]]\n  },\n  createP: {\n    overloads: [[\"String?\"]]\n  },\n  createSpan: {\n    overloads: [[\"String?\"]]\n  },\n  createImg: {\n    overloads: [[\"String\", \"String\"], [\"String\", \"String\", \"String?\", \"Function?\"]]\n  },\n  createA: {\n    overloads: [[\"String\", \"String\", \"String?\"]]\n  },\n  createSlider: {\n    overloads: [[\"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  createButton: {\n    overloads: [[\"String\", \"String?\"]]\n  },\n  createCheckbox: {\n    overloads: [[\"String?\", \"Boolean?\"]]\n  },\n  createSelect: {\n    overloads: [[\"Boolean?\"], [\"Object\"]]\n  },\n  createRadio: {\n    overloads: [[\"Object?\"], [\"String?\"], []]\n  },\n  createColorPicker: {\n    overloads: [[\"String|p5.Color?\"]]\n  },\n  createInput: {\n    overloads: [[\"String?\", \"String?\"], [\"String?\"]]\n  },\n  createFileInput: {\n    overloads: [[\"Function\", \"Boolean?\"]]\n  },\n  setMoveThreshold: {\n    overloads: [[\"Number\"]]\n  },\n  setShakeThreshold: {\n    overloads: [[\"Number\"]]\n  },\n  deviceMoved: {\n    overloads: [[]]\n  },\n  deviceTurned: {\n    overloads: [[]]\n  },\n  deviceShaken: {\n    overloads: [[]]\n  },\n  keyPressed: {\n    overloads: [[\"KeyboardEvent?\"]]\n  },\n  keyReleased: {\n    overloads: [[\"KeyboardEvent?\"]]\n  },\n  keyTyped: {\n    overloads: [[\"KeyboardEvent?\"]]\n  },\n  keyIsDown: {\n    overloads: [[\"Number|String\"]]\n  },\n  mouseMoved: {\n    overloads: [[\"MouseEvent?\"]]\n  },\n  mouseDragged: {\n    overloads: [[\"MouseEvent?\"]]\n  },\n  mousePressed: {\n    overloads: [[\"MouseEvent?\"]]\n  },\n  mouseReleased: {\n    overloads: [[\"MouseEvent?\"]]\n  },\n  mouseClicked: {\n    overloads: [[\"MouseEvent?\"]]\n  },\n  doubleClicked: {\n    overloads: [[\"MouseEvent?\"]]\n  },\n  mouseWheel: {\n    overloads: [[\"WheelEvent?\"]]\n  },\n  requestPointerLock: {\n    overloads: [[]]\n  },\n  exitPointerLock: {\n    overloads: [[]]\n  },\n  createImage: {\n    overloads: [[\"Integer\", \"Integer\"]]\n  },\n  saveCanvas: {\n    overloads: [[\"p5.Framebuffer|p5.Element|HTMLCanvasElement\", \"String?\", \"String?\"], [\"String?\", \"String?\"]]\n  },\n  saveFrames: {\n    overloads: [[\"String\", \"String\", \"Number\", \"Number\", \"function(Array)?\"]]\n  },\n  loadImage: {\n    overloads: [[\"String|Request\", \"function(p5.Image)?\", \"function(Event)?\"]]\n  },\n  saveGif: {\n    overloads: [[\"String\", \"Number\", \"Object?\"]]\n  },\n  image: {\n    overloads: [[\"p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture|p5.Renderer|p5.Graphics\", \"Number\", \"Number\", \"Number?\", \"Number?\"], [\"p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\", \"CONTAIN|COVER?\", \"LEFT|RIGHT|CENTER?\", \"TOP|BOTTOM|CENTER?\"]]\n  },\n  tint: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\"], [\"String\"], [\"Number\", \"Number?\"], [\"Number[]\"], [\"p5.Color\"]]\n  },\n  noTint: {\n    overloads: [[]]\n  },\n  imageMode: {\n    overloads: [[\"CORNER|CORNERS|CENTER\"]]\n  },\n  blend: {\n    overloads: [[\"p5.Image\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"], [\"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"]]\n  },\n  copy: {\n    overloads: [[\"p5.Image|p5.Element\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\"], [\"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\"]]\n  },\n  filter: {\n    overloads: [[\"THRESHOLD|GRAY|OPAQUE|INVERT|POSTERIZE|BLUR|ERODE|DILATE|BLUR\", \"Number?\", \"Boolean?\"], [\"p5.Shader\"]]\n  },\n  get: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\"], [], [\"Number\", \"Number\"]]\n  },\n  loadPixels: {\n    overloads: [[]]\n  },\n  set: {\n    overloads: [[\"Number\", \"Number\", \"Number|Number[]|Object\"]]\n  },\n  updatePixels: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\"], []]\n  },\n  loadJSON: {\n    overloads: [[\"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  loadStrings: {\n    overloads: [[\"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  loadTable: {\n    overloads: [[\"String|Request\", \"String?\", \"String?\", \"Function?\", \"Function?\"]]\n  },\n  loadXML: {\n    overloads: [[\"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  loadBytes: {\n    overloads: [[\"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  loadBlob: {\n    overloads: [[\"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  httpGet: {\n    overloads: [[\"String|Request\", \"String?\", \"Function?\", \"Function?\"], [\"String|Request\", \"Function\", \"Function?\"]]\n  },\n  httpPost: {\n    overloads: [[\"String|Request\", \"Object|Boolean?\", \"String?\", \"Function?\", \"Function?\"], [\"String|Request\", \"Object|Boolean\", \"Function?\", \"Function?\"], [\"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  httpDo: {\n    overloads: [[\"String|Request\", \"String?\", \"String?\", \"Object?\", \"Function?\", \"Function?\"], [\"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  createWriter: {\n    overloads: [[\"String\", \"String?\"]]\n  },\n  write: {\n    overloads: [[\"String|Number|Array\"]]\n  },\n  close: {\n    overloads: [[]]\n  },\n  save: {\n    overloads: [[\"Object|String?\", \"String?\", \"Boolean|String?\"]]\n  },\n  saveJSON: {\n    overloads: [[\"Array|Object\", \"String\", \"Boolean?\"]]\n  },\n  saveStrings: {\n    overloads: [[\"String[]\", \"String\", \"String?\", \"Boolean?\"]]\n  },\n  saveTable: {\n    overloads: [[\"p5.Table\", \"String\", \"String?\"]]\n  },\n  abs: {\n    overloads: [[\"Number\"]]\n  },\n  ceil: {\n    overloads: [[\"Number\"]]\n  },\n  constrain: {\n    overloads: [[\"Number\", \"Number\", \"Number\"]]\n  },\n  dist: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"], [\"p5.Vector\"]]\n  },\n  exp: {\n    overloads: [[\"Number\"]]\n  },\n  floor: {\n    overloads: [[\"Number\"]]\n  },\n  lerp: {\n    overloads: [[\"Number\", \"Number\", \"Number\"]]\n  },\n  log: {\n    overloads: [[\"Number\"]]\n  },\n  mag: {\n    overloads: [[\"Number\", \"Number\"]]\n  },\n  map: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Boolean?\"]]\n  },\n  max: {\n    overloads: [[\"Number\", \"Number\"], [\"Number[]\"]]\n  },\n  min: {\n    overloads: [[\"Number\", \"Number\"], [\"Number[]\"]]\n  },\n  norm: {\n    overloads: [[\"Number\", \"Number\", \"Number\"]]\n  },\n  pow: {\n    overloads: [[\"Number\", \"Number\"]]\n  },\n  round: {\n    overloads: [[\"Number\", \"Number?\"]]\n  },\n  sq: {\n    overloads: [[\"Number\"]]\n  },\n  sqrt: {\n    overloads: [[\"Number\"]]\n  },\n  fract: {\n    overloads: [[\"Number\"]]\n  },\n  createVector: {\n    overloads: [[\"...Number[]\"]]\n  },\n  noise: {\n    overloads: [[\"Number\", \"Number?\", \"Number?\"]]\n  },\n  noiseDetail: {\n    overloads: [[\"Number\", \"Number\"]]\n  },\n  noiseSeed: {\n    overloads: [[\"Number\"]]\n  },\n  randomSeed: {\n    overloads: [[\"Number\"]]\n  },\n  random: {\n    overloads: [[\"Number?\", \"Number?\"], [\"Array\"]]\n  },\n  randomGaussian: {\n    overloads: [[\"Number?\", \"Number?\"]]\n  },\n  acos: {\n    overloads: [[\"Number\"]]\n  },\n  asin: {\n    overloads: [[\"Number\"]]\n  },\n  atan: {\n    overloads: [[\"Number\"]]\n  },\n  atan2: {\n    overloads: [[\"Number\", \"Number\"]]\n  },\n  cos: {\n    overloads: [[\"Number\"]]\n  },\n  sin: {\n    overloads: [[\"Number\"]]\n  },\n  tan: {\n    overloads: [[\"Number\"]]\n  },\n  degrees: {\n    overloads: [[\"Number\"]]\n  },\n  radians: {\n    overloads: [[\"Number\"]]\n  },\n  angleMode: {\n    overloads: [[\"RADIANS|DEGREES\"], []]\n  },\n  arc: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"CHORD|PIE|OPEN?\", \"Integer?\"]]\n  },\n  ellipse: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Integer?\"]]\n  },\n  circle: {\n    overloads: [[\"Number\", \"Number\", \"Number\"]]\n  },\n  line: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  point: {\n    overloads: [[\"Number\", \"Number\", \"Number?\"], [\"p5.Vector\"]]\n  },\n  quad: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Integer?\", \"Integer?\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Integer?\", \"Integer?\"]]\n  },\n  rect: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Integer?\", \"Integer?\"]]\n  },\n  square: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n  },\n  triangle: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  ellipseMode: {\n    overloads: [[\"CENTER|RADIUS|CORNER|CORNERS\"]]\n  },\n  noSmooth: {\n    overloads: [[]]\n  },\n  rectMode: {\n    overloads: [[\"CENTER|RADIUS|CORNER|CORNERS\"]]\n  },\n  smooth: {\n    overloads: [[]]\n  },\n  strokeCap: {\n    overloads: [[\"ROUND|SQUARE|PROJECT\"]]\n  },\n  strokeJoin: {\n    overloads: [[\"MITER|BEVEL|ROUND\"]]\n  },\n  strokeWeight: {\n    overloads: [[\"Number\"]]\n  },\n  bezier: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  bezierPoint: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  bezierTangent: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  spline: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  splinePoint: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  splineTangent: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\"]]\n  },\n  bezierOrder: {\n    overloads: [[\"Number\"], []]\n  },\n  splineVertex: {\n    overloads: [[\"Number\", \"Number\"], [\"Number\", \"Number\", \"Number?\"], [\"Number\", \"Number\", \"Number?\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  splineProperty: {\n    overloads: [[\"String\", null], [\"String\"]]\n  },\n  splineProperties: {\n    overloads: [[\"Object\"], []]\n  },\n  vertex: {\n    overloads: [[\"Number\", \"Number\"], [\"Number\", \"Number\", \"Number?\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  beginContour: {\n    overloads: [[]]\n  },\n  endContour: {\n    overloads: [[\"OPEN|CLOSE?\"]]\n  },\n  beginShape: {\n    overloads: [[\"POINTS|LINES|TRIANGLES|TRIANGLE_FAN|TRIANGLE_STRIP|QUADS|QUAD_STRIP|PATH?\"]]\n  },\n  bezierVertex: {\n    overloads: [[\"Number\", \"Number\", \"Number?\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  endShape: {\n    overloads: [[\"CLOSE?\", \"Integer?\"]]\n  },\n  normal: {\n    overloads: [[\"p5.Vector\"], [\"Number\", \"Number\", \"Number\"]]\n  },\n  vertexProperty: {\n    overloads: [[\"String\", \"Number|Number[]\"]]\n  },\n  loadFont: {\n    overloads: [[\"String\", \"String?\", \"Object?\", \"Function?\", \"Function?\"], [\"String\", \"Function?\", \"Function?\"]]\n  },\n  text: {\n    overloads: [[\"String|Object|Array|Number|Boolean\", \"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  textAlign: {\n    overloads: [[\"LEFT|CENTER|RIGHT\", \"TOP|BOTTOM|CENTER|BASELINE?\"]]\n  },\n  textAscent: {\n    overloads: [[\"String?\"]]\n  },\n  textDescent: {\n    overloads: [[\"String?\"]]\n  },\n  textLeading: {\n    overloads: [[\"Number\"]]\n  },\n  textFont: {\n    overloads: [[\"p5.Font|String|Object\", \"Number?\"]]\n  },\n  textSize: {\n    overloads: [[\"Number\"], []]\n  },\n  textStyle: {\n    overloads: [[\"NORMAL|ITALIC|BOLD|BOLDITALIC\"], []]\n  },\n  textWidth: {\n    overloads: [[\"String\"]]\n  },\n  textWrap: {\n    overloads: [[\"WORD|CHAR\"], []]\n  },\n  textBounds: {\n    overloads: [[\"String\", \"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  textDirection: {\n    overloads: [[\"String\"], []]\n  },\n  textProperty: {\n    overloads: [[\"String\", null], [\"String\"]]\n  },\n  textProperties: {\n    overloads: [[\"Object\"], []]\n  },\n  fontBounds: {\n    overloads: [[\"String\", \"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  fontWidth: {\n    overloads: [[\"String\"]]\n  },\n  fontAscent: {\n    overloads: [[]]\n  },\n  fontDescent: {\n    overloads: [[]]\n  },\n  textWeight: {\n    overloads: [[\"Number\"], []]\n  },\n  float: {\n    overloads: [[\"String\"], [\"String[]\"]]\n  },\n  int: {\n    overloads: [[\"String|Boolean|Number\"], [\"Array\"]]\n  },\n  str: {\n    overloads: [[\"String|Boolean|Number\"]]\n  },\n  boolean: {\n    overloads: [[\"String|Boolean|Number\"], [\"Array\"]]\n  },\n  byte: {\n    overloads: [[\"String|Boolean|Number\"], [\"Array\"]]\n  },\n  char: {\n    overloads: [[\"String|Number\"], [\"Array\"]]\n  },\n  unchar: {\n    overloads: [[\"String\"], [\"String[]\"]]\n  },\n  hex: {\n    overloads: [[\"Number\", \"Number?\"], [\"Number[]\", \"Number?\"]]\n  },\n  unhex: {\n    overloads: [[\"String\"], [\"String[]\"]]\n  },\n  day: {\n    overloads: [[]]\n  },\n  hour: {\n    overloads: [[]]\n  },\n  minute: {\n    overloads: [[]]\n  },\n  millis: {\n    overloads: [[]]\n  },\n  month: {\n    overloads: [[]]\n  },\n  second: {\n    overloads: [[]]\n  },\n  year: {\n    overloads: [[]]\n  },\n  nf: {\n    overloads: [[\"Number|String\", \"Integer|String?\", \"Integer|String?\"], [\"Number[]\", \"Integer|String?\", \"Integer|String?\"]]\n  },\n  nfc: {\n    overloads: [[\"Number|String\", \"Integer|String?\"], [\"Number[]\", \"Integer|String?\"]]\n  },\n  nfp: {\n    overloads: [[\"Number\", \"Integer?\", \"Integer?\"], [\"Number[]\", \"Integer?\", \"Integer?\"]]\n  },\n  nfs: {\n    overloads: [[\"Number\", \"Integer?\", \"Integer?\"], [\"Array\", \"Integer?\", \"Integer?\"]]\n  },\n  splitTokens: {\n    overloads: [[\"String\", \"String?\"]]\n  },\n  shuffle: {\n    overloads: [[\"Array\", \"Boolean?\"]]\n  },\n  strokeMode: {\n    overloads: [[\"String\"]]\n  },\n  buildGeometry: {\n    overloads: [[\"Function\"]]\n  },\n  freeGeometry: {\n    overloads: [[\"p5.Geometry\"]]\n  },\n  plane: {\n    overloads: [[\"Number?\", \"Number?\", \"Integer?\", \"Integer?\"]]\n  },\n  box: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Integer?\", \"Integer?\"]]\n  },\n  sphere: {\n    overloads: [[\"Number?\", \"Integer?\", \"Integer?\"]]\n  },\n  cylinder: {\n    overloads: [[\"Number?\", \"Number?\", \"Integer?\", \"Integer?\", \"Boolean?\", \"Boolean?\"]]\n  },\n  cone: {\n    overloads: [[\"Number?\", \"Number?\", \"Integer?\", \"Integer?\", \"Boolean?\"]]\n  },\n  ellipsoid: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Integer?\", \"Integer?\"]]\n  },\n  torus: {\n    overloads: [[\"Number?\", \"Number?\", \"Integer?\", \"Integer?\"]]\n  },\n  curveDetail: {\n    overloads: [[\"Number\"]]\n  },\n  orbitControl: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Object?\"]]\n  },\n  debugMode: {\n    overloads: [[], [\"GRID|AXES\"], [\"GRID|AXES\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"], [\"GRID|AXES\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"], [\"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n  },\n  noDebugMode: {\n    overloads: [[]]\n  },\n  ambientLight: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\"], [\"Number\", \"Number?\"], [\"String\"], [\"Number[]\"], [\"p5.Color\"]]\n  },\n  specularColor: {\n    overloads: [[\"Number\", \"Number\", \"Number\"], [\"Number\"], [\"String\"], [\"Number[]\"], [\"p5.Color\"]]\n  },\n  directionalLight: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"], [\"Number\", \"Number\", \"Number\", \"p5.Vector\"], [\"p5.Color|Number[]|String\", \"Number\", \"Number\", \"Number\"], [\"p5.Color|Number[]|String\", \"p5.Vector\"]]\n  },\n  pointLight: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"], [\"Number\", \"Number\", \"Number\", \"p5.Vector\"], [\"p5.Color|Number[]|String\", \"Number\", \"Number\", \"Number\"], [\"p5.Color|Number[]|String\", \"p5.Vector\"]]\n  },\n  imageLight: {\n    overloads: [[\"p5.image\"]]\n  },\n  panorama: {\n    overloads: [[\"p5.Image\"]]\n  },\n  lights: {\n    overloads: [[]]\n  },\n  lightFalloff: {\n    overloads: [[\"Number\", \"Number\", \"Number\"]]\n  },\n  spotLight: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\"], [\"p5.Color|Number[]|String\", \"p5.Vector\", \"p5.Vector\", \"Number?\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"p5.Vector\", \"p5.Vector\", \"Number?\", \"Number?\"], [\"p5.Color|Number[]|String\", \"Number\", \"Number\", \"Number\", \"p5.Vector\", \"Number?\", \"Number?\"], [\"p5.Color|Number[]|String\", \"p5.Vector\", \"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"p5.Vector\", \"Number?\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"p5.Vector\", \"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\"], [\"p5.Color|Number[]|String\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number?\", \"Number?\"]]\n  },\n  noLights: {\n    overloads: [[]]\n  },\n  loadModel: {\n    overloads: [[\"String|Request\", \"String?\", \"Boolean\", \"function(p5.Geometry)?\", \"function(Event)?\"], [\"String|Request\", \"String?\", \"function(p5.Geometry)?\", \"function(Event)?\"], [\"String|Request\", \"Object?\"]]\n  },\n  model: {\n    overloads: [[\"p5.Geometry\", \"Number?\"]]\n  },\n  createModel: {\n    overloads: [[\"String\", \"String?\", \"Boolean\", \"function(p5.Geometry)?\", \"function(Event)?\"], [\"String\", \"String?\", \"function(p5.Geometry)?\", \"function(Event)?\"], [\"String\", \"String?\", \"Object?\"]]\n  },\n  loadShader: {\n    overloads: [[\"String|Request\", \"String|Request\", \"Function?\", \"Function?\"]]\n  },\n  createShader: {\n    overloads: [[\"String\", \"String\", \"Object?\"]]\n  },\n  loadFilterShader: {\n    overloads: [[\"String\", \"Function?\", \"Function?\"]]\n  },\n  createFilterShader: {\n    overloads: [[\"String\"]]\n  },\n  shader: {\n    overloads: [[\"p5.Shader\"]]\n  },\n  strokeShader: {\n    overloads: [[\"p5.Shader\"]]\n  },\n  imageShader: {\n    overloads: [[\"p5.Shader\"]]\n  },\n  baseMaterialShader: {\n    overloads: [[]]\n  },\n  baseFilterShader: {\n    overloads: [[]]\n  },\n  baseNormalShader: {\n    overloads: [[]]\n  },\n  baseColorShader: {\n    overloads: [[]]\n  },\n  baseStrokeShader: {\n    overloads: [[]]\n  },\n  resetShader: {\n    overloads: [[]]\n  },\n  texture: {\n    overloads: [[\"p5.Image|p5.MediaElement|p5.Graphics|p5.Texture|p5.Framebuffer|p5.FramebufferTexture\"]]\n  },\n  textureMode: {\n    overloads: [[\"IMAGE|NORMAL\"]]\n  },\n  textureWrap: {\n    overloads: [[\"CLAMP|REPEAT|MIRROR\", \"CLAMP|REPEAT|MIRROR?\"]]\n  },\n  normalMaterial: {\n    overloads: [[]]\n  },\n  ambientMaterial: {\n    overloads: [[\"Number\", \"Number\", \"Number\"], [\"Number\"], [\"p5.Color|Number[]|String\"]]\n  },\n  emissiveMaterial: {\n    overloads: [[\"Number\", \"Number\", \"Number\", \"Number?\"], [\"Number\"], [\"p5.Color|Number[]|String\"]]\n  },\n  specularMaterial: {\n    overloads: [[\"Number\", \"Number?\"], [\"Number\", \"Number\", \"Number\", \"Number?\"], [\"p5.Color|Number[]|String\"]]\n  },\n  shininess: {\n    overloads: [[\"Number\"]]\n  },\n  metalness: {\n    overloads: [[\"Number\"]]\n  },\n  camera: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n  },\n  perspective: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n  },\n  linePerspective: {\n    overloads: [[\"Boolean\"], []]\n  },\n  ortho: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n  },\n  frustum: {\n    overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n  },\n  createCamera: {\n    overloads: [[]]\n  },\n  setCamera: {\n    overloads: [[\"p5.Camera\"]]\n  },\n  saveObj: {\n    overloads: [[\"String?\"]]\n  },\n  saveStl: {\n    overloads: [[\"String?\", \"Object?\"]]\n  },\n  setAttributes: {\n    overloads: [[\"String\", \"Boolean\"], [\"Object\"]]\n  },\n  remove: {\n    overloads: [[]]\n  },\n  createVideo: {\n    overloads: [[\"String|String[]\", \"Function?\"]]\n  },\n  createAudio: {\n    overloads: [[], [\"String|String[]?\", \"Function?\"]]\n  },\n  createCapture: {\n    overloads: [[\"AUDIO|VIDEO|Object?\", \"Object?\", \"Function?\"]]\n  }\n};\nvar dataDoc = {\n  p5: p5$1,\n  \"p5.Geometry\": {\n    flipV: {\n      overloads: [[]]\n    },\n    calculateBoundingBox: {\n      overloads: [[]]\n    },\n    clearColors: {\n      overloads: [[]]\n    },\n    flipU: {\n      overloads: [[]]\n    },\n    computeFaces: {\n      overloads: [[]]\n    },\n    computeNormals: {\n      overloads: [[\"FLAT|SMOOTH?\", \"Object?\"]]\n    },\n    makeEdgesFromFaces: {\n      overloads: [[]]\n    },\n    normalize: {\n      overloads: [[]]\n    },\n    vertexProperty: {\n      overloads: [[\"String\", \"Number|Number[]\", \"Number?\"]]\n    }\n  },\n  \"p5.Color\": {\n    toString: {\n      overloads: [[\"String?\"]]\n    },\n    setRed: {\n      overloads: [[\"Number\"]]\n    },\n    setGreen: {\n      overloads: [[\"Number\"]]\n    },\n    setBlue: {\n      overloads: [[\"Number\"]]\n    },\n    setAlpha: {\n      overloads: [[\"Number\"]]\n    }\n  },\n  \"p5.Graphics\": {\n    reset: {\n      overloads: [[]]\n    },\n    remove: {\n      overloads: [[]]\n    },\n    createFramebuffer: {\n      overloads: [[\"Object?\"]]\n    }\n  },\n  \"p5.Element\": {\n    remove: {\n      overloads: [[]]\n    },\n    parent: {\n      overloads: [[\"String|p5.Element|Object\"], []]\n    },\n    child: {\n      overloads: [[], [\"String|p5.Element?\"]]\n    },\n    html: {\n      overloads: [[], [\"String?\", \"Boolean?\"]]\n    },\n    id: {\n      overloads: [[\"String\"], []]\n    },\n    \"class\": {\n      overloads: [[\"String\"], []]\n    },\n    addClass: {\n      overloads: [[\"String\"]]\n    },\n    removeClass: {\n      overloads: [[\"String\"]]\n    },\n    hasClass: {\n      overloads: [[null]]\n    },\n    toggleClass: {\n      overloads: [[null]]\n    },\n    center: {\n      overloads: [[\"String?\"]]\n    },\n    position: {\n      overloads: [[], [\"Number?\", \"Number?\", \"String?\"]]\n    },\n    show: {\n      overloads: [[]]\n    },\n    hide: {\n      overloads: [[]]\n    },\n    size: {\n      overloads: [[], [\"Number|AUTO?\", \"Number|AUTO?\"]]\n    },\n    style: {\n      overloads: [[\"String\"], [\"String\", \"String|p5.Color\"]]\n    },\n    attribute: {\n      overloads: [[], [\"String\", \"String\"]]\n    },\n    removeAttribute: {\n      overloads: [[\"String\"]]\n    },\n    value: {\n      overloads: [[], [\"String|Number\"]]\n    },\n    mousePressed: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    doubleClicked: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    mouseWheel: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    mouseReleased: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    mouseClicked: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    mouseMoved: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    mouseOver: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    mouseOut: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    dragOver: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    dragLeave: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    changed: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    input: {\n      overloads: [[\"Function|Boolean\"]]\n    },\n    drop: {\n      overloads: [[\"Function\", \"Function?\"]]\n    },\n    draggable: {\n      overloads: [[\"p5.Element?\"]]\n    }\n  },\n  \"p5.MediaElement\": {\n    play: {\n      overloads: [[]]\n    },\n    stop: {\n      overloads: [[]]\n    },\n    pause: {\n      overloads: [[]]\n    },\n    loop: {\n      overloads: [[]]\n    },\n    noLoop: {\n      overloads: [[]]\n    },\n    autoplay: {\n      overloads: [[\"Boolean?\"]]\n    },\n    volume: {\n      overloads: [[], [\"Number\"]]\n    },\n    speed: {\n      overloads: [[], [\"Number\"]]\n    },\n    time: {\n      overloads: [[], [\"Number\"]]\n    },\n    duration: {\n      overloads: [[]]\n    },\n    onended: {\n      overloads: [[\"Function\"]]\n    },\n    connect: {\n      overloads: [[\"AudioNode|Object\"]]\n    },\n    disconnect: {\n      overloads: [[]]\n    },\n    showControls: {\n      overloads: [[]]\n    },\n    hideControls: {\n      overloads: [[]]\n    },\n    addCue: {\n      overloads: [[\"Number\", \"Function\", \"Object?\"]]\n    },\n    removeCue: {\n      overloads: [[\"Number\"]]\n    },\n    clearCues: {\n      overloads: [[]]\n    }\n  },\n  \"p5.Image\": {\n    pixelDensity: {\n      overloads: [[\"Number?\"]]\n    },\n    loadPixels: {\n      overloads: [[]]\n    },\n    updatePixels: {\n      overloads: [[\"Integer\", \"Integer\", \"Integer\", \"Integer\"]]\n    },\n    get: {\n      overloads: [[\"Number\", \"Number\", \"Number\", \"Number\"], [], [\"Number\", \"Number\"]]\n    },\n    set: {\n      overloads: [[\"Number\", \"Number\", \"Number|Number[]|Object\"]]\n    },\n    resize: {\n      overloads: [[\"Number\", \"Number\"]]\n    },\n    copy: {\n      overloads: [[\"p5.Image|p5.Element\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\"], [\"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\"]]\n    },\n    mask: {\n      overloads: [[\"p5.Image\"]]\n    },\n    filter: {\n      overloads: [[\"THRESHOLD|GRAY|OPAQUE|INVERT|POSTERIZE|ERODE|DILATE|BLUR\", \"Number?\"]]\n    },\n    blend: {\n      overloads: [[\"p5.Image\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"], [\"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"Integer\", \"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"]]\n    },\n    save: {\n      overloads: [[\"String\", \"String?\"]]\n    },\n    reset: {\n      overloads: [[]]\n    },\n    getCurrentFrame: {\n      overloads: [[]]\n    },\n    setFrame: {\n      overloads: [[\"Number\"]]\n    },\n    numFrames: {\n      overloads: [[]]\n    },\n    play: {\n      overloads: [[]]\n    },\n    pause: {\n      overloads: [[]]\n    },\n    delay: {\n      overloads: [[\"Number\", \"Number?\"]]\n    }\n  },\n  \"p5.Table\": {\n    addRow: {\n      overloads: [[\"p5.TableRow?\"]]\n    },\n    removeRow: {\n      overloads: [[\"Integer\"]]\n    },\n    getRow: {\n      overloads: [[\"Integer\"]]\n    },\n    getRows: {\n      overloads: [[]]\n    },\n    findRow: {\n      overloads: [[\"String\", \"Integer|String\"]]\n    },\n    findRows: {\n      overloads: [[\"String\", \"Integer|String\"]]\n    },\n    matchRow: {\n      overloads: [[\"String|RegExp\", \"String|Integer\"]]\n    },\n    matchRows: {\n      overloads: [[\"String\", \"String|Integer?\"]]\n    },\n    getColumn: {\n      overloads: [[\"String|Number\"]]\n    },\n    clearRows: {\n      overloads: [[]]\n    },\n    addColumn: {\n      overloads: [[\"String?\"]]\n    },\n    getColumnCount: {\n      overloads: [[]]\n    },\n    getRowCount: {\n      overloads: [[]]\n    },\n    removeTokens: {\n      overloads: [[\"String\", \"String|Integer?\"]]\n    },\n    trim: {\n      overloads: [[\"String|Integer?\"]]\n    },\n    removeColumn: {\n      overloads: [[\"String|Integer\"]]\n    },\n    set: {\n      overloads: [[\"Integer\", \"String|Integer\", \"String|Number\"]]\n    },\n    setNum: {\n      overloads: [[\"Integer\", \"String|Integer\", \"Number\"]]\n    },\n    setString: {\n      overloads: [[\"Integer\", \"String|Integer\", \"String\"]]\n    },\n    get: {\n      overloads: [[\"Integer\", \"String|Integer\"]]\n    },\n    getNum: {\n      overloads: [[\"Integer\", \"String|Integer\"]]\n    },\n    getString: {\n      overloads: [[\"Integer\", \"String|Integer\"]]\n    },\n    getObject: {\n      overloads: [[\"String?\"]]\n    },\n    getArray: {\n      overloads: [[]]\n    }\n  },\n  \"p5.TableRow\": {\n    set: {\n      overloads: [[\"String|Integer\", \"String|Number\"]]\n    },\n    setNum: {\n      overloads: [[\"String|Integer\", \"Number|String\"]]\n    },\n    setString: {\n      overloads: [[\"String|Integer\", \"String|Number|Boolean|Object\"]]\n    },\n    get: {\n      overloads: [[\"String|Integer\"]]\n    },\n    getNum: {\n      overloads: [[\"String|Integer\"]]\n    },\n    getString: {\n      overloads: [[\"String|Integer\"]]\n    }\n  },\n  \"p5.XML\": {\n    getParent: {\n      overloads: [[]]\n    },\n    getName: {\n      overloads: [[]]\n    },\n    setName: {\n      overloads: [[\"String\"]]\n    },\n    hasChildren: {\n      overloads: [[]]\n    },\n    listChildren: {\n      overloads: [[]]\n    },\n    getChildren: {\n      overloads: [[\"String?\"]]\n    },\n    getChild: {\n      overloads: [[\"String|Integer\"]]\n    },\n    addChild: {\n      overloads: [[\"p5.XML\"]]\n    },\n    removeChild: {\n      overloads: [[\"String|Integer\"]]\n    },\n    getAttributeCount: {\n      overloads: [[]]\n    },\n    listAttributes: {\n      overloads: [[]]\n    },\n    hasAttribute: {\n      overloads: [[\"String\"]]\n    },\n    getNum: {\n      overloads: [[\"String\", \"Number?\"]]\n    },\n    getString: {\n      overloads: [[\"String\", \"Number?\"]]\n    },\n    setAttribute: {\n      overloads: [[\"String\", \"Number|String|Boolean\"]]\n    },\n    getContent: {\n      overloads: [[\"String?\"]]\n    },\n    serialize: {\n      overloads: [[]]\n    }\n  },\n  \"p5.Vector\": {\n    getValue: {\n      overloads: [[\"Number\"]]\n    },\n    setValue: {\n      overloads: [[\"Number\", \"Number\"]]\n    },\n    set: {\n      overloads: [[\"Number?\", \"Number?\", \"Number?\"], [\"p5.Vector|Number[]\"]]\n    },\n    copy: {\n      overloads: [[], [\"p5.Vector\"]]\n    },\n    add: {\n      overloads: [[\"Number|Array\", \"Number?\", \"Number?\"], [\"p5.Vector|Number[]\"], [\"p5.Vector\", \"p5.Vector\", \"p5.Vector?\"]]\n    },\n    rem: {\n      overloads: [[\"Number\", \"Number\", \"Number\"], [\"p5.Vector|Number[]\"], [\"p5.Vector\", \"p5.Vector\"]]\n    },\n    sub: {\n      overloads: [[\"Number\", \"Number?\", \"Number?\"], [\"p5.Vector|Number[]\"], [\"p5.Vector\", \"p5.Vector\", \"p5.Vector?\"]]\n    },\n    mult: {\n      overloads: [[\"Number\", \"Number\", \"Number?\"], [\"Number[]\"], [\"p5.Vector\"], [], [\"p5.Vector\", \"Number\", \"p5.Vector?\"], [\"p5.Vector\", \"p5.Vector\", \"p5.Vector?\"], [\"p5.Vector\", \"Number[]\", \"p5.Vector?\"]]\n    },\n    div: {\n      overloads: [[\"Number\"], [\"Number\", \"Number\", \"Number?\"], [\"Number[]\"], [\"p5.Vector\"], [], [\"p5.Vector\", \"Number\", \"p5.Vector?\"], [\"p5.Vector\", \"p5.Vector\", \"p5.Vector?\"], [\"p5.Vector\", \"Number[]\", \"p5.Vector?\"]]\n    },\n    mag: {\n      overloads: [[], [\"p5.Vector\"]]\n    },\n    magSq: {\n      overloads: [[], [\"p5.Vector\"]]\n    },\n    dot: {\n      overloads: [[\"Number\", \"Number?\", \"Number?\"], [\"p5.Vector\"], [], [\"p5.Vector\", \"p5.Vector\"]]\n    },\n    cross: {\n      overloads: [[\"p5.Vector\"], [], [\"p5.Vector\", \"p5.Vector\"]]\n    },\n    normalize: {\n      overloads: [[], [\"p5.Vector\", \"p5.Vector?\"]]\n    },\n    limit: {\n      overloads: [[\"Number\"], [], [\"p5.Vector\", \"Number\", \"p5.Vector?\"]]\n    },\n    setMag: {\n      overloads: [[\"Number\"], [], [\"p5.Vector\", \"Number\", \"p5.Vector?\"]]\n    },\n    heading: {\n      overloads: [[], [\"p5.Vector\"]]\n    },\n    setHeading: {\n      overloads: [[\"Number\"]]\n    },\n    rotate: {\n      overloads: [[\"Number\"], [], [\"p5.Vector\", \"Number\", \"p5.Vector?\"]]\n    },\n    angleBetween: {\n      overloads: [[\"p5.Vector\"], [], [\"p5.Vector\", \"p5.Vector\"]]\n    },\n    lerp: {\n      overloads: [[\"Number\", \"Number\", \"Number\", \"Number\"], [\"p5.Vector\", \"Number\"], [], [\"p5.Vector\", \"p5.Vector\", \"Number\", \"p5.Vector?\"]]\n    },\n    slerp: {\n      overloads: [[\"p5.Vector\", \"Number\"], [], [\"p5.Vector\", \"p5.Vector\", \"Number\", \"p5.Vector?\"]]\n    },\n    reflect: {\n      overloads: [[\"p5.Vector\"], [], [\"p5.Vector\", \"p5.Vector\", \"p5.Vector?\"]]\n    },\n    array: {\n      overloads: [[], [\"p5.Vector\"]]\n    },\n    equals: {\n      overloads: [[\"Number?\", \"Number?\", \"Number?\"], [\"p5.Vector|Array\"], [], [\"p5.Vector|Array\", \"p5.Vector|Array\"]]\n    },\n    fromAngle: {\n      overloads: [[\"Number\", \"Number?\"]]\n    },\n    fromAngles: {\n      overloads: [[\"Number\", \"Number\", \"Number?\"]]\n    },\n    random2D: {\n      overloads: [[]]\n    },\n    random3D: {\n      overloads: [[]]\n    },\n    dist: {\n      overloads: [[], [\"p5.Vector\", \"p5.Vector\"]]\n    }\n  },\n  \"p5.Font\": {\n    textToPaths: {\n      overloads: [[\"String\", \"Number\", \"Number\", \"Number?\", \"Number?\", \"Object?\"]]\n    },\n    textToPoints: {\n      overloads: [[\"String\", \"Number\", \"Number\", \"Object?\"]]\n    },\n    textToContours: {\n      overloads: [[\"String\", \"Number\", \"Number\", \"Object?\"]]\n    },\n    textToModel: {\n      overloads: [[\"String\", \"Number\", \"Number\", \"Number\", \"Number\", \"Object?\"]]\n    }\n  },\n  \"p5.Camera\": {\n    perspective: {\n      overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n    },\n    ortho: {\n      overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n    },\n    frustum: {\n      overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n    },\n    pan: {\n      overloads: [[\"Number\"]]\n    },\n    tilt: {\n      overloads: [[\"Number\"]]\n    },\n    lookAt: {\n      overloads: [[\"Number\", \"Number\", \"Number\"]]\n    },\n    camera: {\n      overloads: [[\"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\", \"Number?\"]]\n    },\n    move: {\n      overloads: [[\"Number\", \"Number\", \"Number\"]]\n    },\n    setPosition: {\n      overloads: [[\"Number\", \"Number\", \"Number\"]]\n    },\n    set: {\n      overloads: [[\"p5.Camera\"]]\n    },\n    slerp: {\n      overloads: [[\"p5.Camera\", \"p5.Camera\", \"Number\"]]\n    }\n  },\n  \"p5.Framebuffer\": {\n    resize: {\n      overloads: [[\"Number\", \"Number\"]]\n    },\n    pixelDensity: {\n      overloads: [[\"Number?\"]]\n    },\n    autoSized: {\n      overloads: [[\"Boolean?\"]]\n    },\n    createCamera: {\n      overloads: [[]]\n    },\n    remove: {\n      overloads: [[]]\n    },\n    begin: {\n      overloads: [[]]\n    },\n    end: {\n      overloads: [[]]\n    },\n    draw: {\n      overloads: [[\"Function\"]]\n    },\n    get: {\n      overloads: [[\"Number\", \"Number\", \"Number\", \"Number\"], [], [\"Number\", \"Number\"]]\n    }\n  },\n  \"p5.Shader\": {\n    version: {\n      overloads: [[]]\n    },\n    inspectHooks: {\n      overloads: [[]]\n    },\n    modify: {\n      overloads: [[\"Object?\"]]\n    },\n    copyToContext: {\n      overloads: [[\"p5|p5.Graphics\"]]\n    },\n    setUniform: {\n      overloads: [[\"String\", \"Boolean|Number|Number[]|p5.Image|p5.Graphics|p5.MediaElement|p5.Texture\"]]\n    }\n  }\n};\n\n/**\n * @for p5\n * @requires core\n */\n\nfunction validateParams(p5, fn, lifecycles) {\n  // Cache for Zod schemas\n  let schemaRegistry = new Map();\n\n  // Mapping names of p5 types to their constructor functions.\n  // p5Constructors:\n  //   - Color: f()\n  //   - Graphics: f()\n  //   - Vector: f()\n  // and so on.\n  // const p5Constructors = {};\n  // NOTE: This is a tempt fix for unit test but is not correct\n  // Attaced constructors are `undefined`\n  const p5Constructors = Object.keys(p5).reduce((acc, val) => {\n    if (val.match(/^[A-Z]/) &&\n    // Starts with a capital\n    !val.match(/^[A-Z][A-Z0-9]*$/) &&\n    // Is not an all caps constant\n    p5[val] instanceof Function // Is a function\n    ) {\n      acc[val] = p5[val];\n    }\n    return acc;\n  }, {});\n  function loadP5Constructors() {\n    // Make a list of all p5 classes to be used for argument validation\n    // This must be done only when everything has loaded otherwise we get\n    // an empty array\n    for (let key of Object.keys(p5)) {\n      // Get a list of all constructors in p5. They are functions whose names\n      // start with a capital letter\n      if (typeof p5[key] === 'function' && key[0] !== key[0].toLowerCase()) {\n        p5Constructors[key] = p5[key];\n      }\n    }\n  }\n\n  // `constantsMap` maps constants to their values, e.g.\n  // {\n  //   ADD: 'lighter',\n  //   ALT: 18,\n  //   ARROW: 'default',\n  //   AUTO: 'auto',\n  //   ...\n  // }\n  const constantsMap = {};\n  for (const [key, value] of Object.entries(constants)) {\n    constantsMap[key] = value;\n  }\n\n  // Start initializing `schemaMap` with primitive types. `schemaMap` will\n  // eventually contain both primitive types and web API objects.\n  const schemaMap = {\n    'Any': z.any(),\n    'Array': z.array(z.any()),\n    'Boolean': z.boolean(),\n    'Function': z.function(),\n    'Integer': z.number().int(),\n    'Number': z.number(),\n    'Object': z.object({}),\n    'String': z.string()\n  };\n  const webAPIObjects = ['AudioNode', 'HTMLCanvasElement', 'HTMLElement', 'KeyboardEvent', 'MouseEvent', 'RegExp', 'TouchEvent', 'UIEvent', 'WheelEvent'];\n  function generateWebAPISchemas(apiObjects) {\n    return apiObjects.reduce((acc, obj) => {\n      acc[obj] = z.custom(data => data instanceof globalThis[obj], {\n        message: `Expected a ${obj}`\n      });\n      return acc;\n    }, {});\n  }\n  const webAPISchemas = generateWebAPISchemas(webAPIObjects);\n  // Add web API schemas to the schema map.\n  Object.assign(schemaMap, webAPISchemas);\n\n  // For mapping 0-indexed parameters to their ordinal representation, e.g.\n  // \"first\" for 0, \"second\" for 1, \"third\" for 2, etc.\n  const ordinals = [\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\", \"tenth\"];\n  function extractFuncNameAndClass(func) {\n    const ichDot = func.lastIndexOf('.');\n    const funcName = func.slice(ichDot + 1);\n    const funcClass = func.slice(0, ichDot !== -1 ? ichDot : 0) || 'p5';\n    return {\n      funcName,\n      funcClass\n    };\n  }\n  function validBracketNesting(type) {\n    let level = 0;\n    for (let i = 0; i < type.length; i++) {\n      if (type[i] === '[') {\n        level++;\n      } else if (type[i] === ']') {\n        level--;\n        if (level < 0) return false;\n      }\n    }\n    return level === 0;\n  }\n\n  /**\n   * This is a helper function that generates Zod schemas for a function based on\n   * the parameter data from `docs/parameterData.json`.\n   *\n   * Example parameter data for function `background`:\n   * \"background\": {\n        \"overloads\": [\n          [\"p5.Color\"],\n          [\"String\", \"Number?\"],\n          [\"Number\", \"Number?\"],\n          [\"Number\", \"Number\", \"Number\", \"Number?\"],\n          [\"Number[]\"],\n          [\"p5.Image\", \"Number?\"]\n        ]\n      }\n   * Where each array in `overloads` represents a set of valid overloaded\n   * parameters, and `?` is a shorthand for `Optional`.\n   *\n   * @method generateZodSchemasForFunc\n   * @param {String} func - Name of the function. Expect global functions like `sin` and class methods like `p5.Vector.add`\n   * @returns {z.ZodSchema} Zod schema\n   */\n  fn.generateZodSchemasForFunc = function (func) {\n    const {\n      funcName,\n      funcClass\n    } = extractFuncNameAndClass(func);\n    let funcInfo = dataDoc[funcClass][funcName];\n    if (!funcInfo) return;\n    let overloads = [];\n    if (funcInfo.hasOwnProperty('overloads')) {\n      overloads = funcInfo.overloads;\n    }\n\n    // Returns a schema for a single type, i.e. z.boolean() for `boolean`.\n    const generateTypeSchema = baseType => {\n      if (!baseType) return z.any();\n      let typeSchema;\n\n      // Check for constants. Note that because we're ultimately interested in the value of\n      // the constant, mapping constants to their values via `constantsMap` is\n      // necessary.\n      if (baseType in constantsMap) {\n        typeSchema = z.literal(constantsMap[baseType]);\n      }\n      // Some more constants are attached directly to p5.prototype, e.g. by addons:\n      else if (baseType.match(/^[A-Z][A-Z0-9]*$/) && baseType in fn) {\n        typeSchema = z.literal(fn[baseType]);\n      }\n      // Function types\n      else if (baseType.startsWith('function')) {\n        typeSchema = z.function();\n      }\n      // All p5 objects start with `p5` in the documentation, i.e. `p5.Camera`.\n      else if (/^p5\\.[a-zA-Z0-9]+$/.exec(baseType) || baseType === 'p5') {\n        const className = baseType.substring(baseType.indexOf('.') + 1);\n        typeSchema = z.instanceof(p5Constructors[className]);\n      }\n      // For primitive types and web API objects.\n      else if (schemaMap[baseType]) {\n        typeSchema = schemaMap[baseType];\n      }\n      // Tuple types\n      else if (baseType.startsWith('[') && baseType.endsWith(']') && validBracketNesting(baseType.slice(1, -1))) {\n        typeSchema = z.tuple(baseType.slice(1, -1).split(/, */g).map(entry => generateTypeSchema(entry)));\n      }\n      // JavaScript classes, e.g. Request\n      else if (baseType.match(/^[A-Z]/) && baseType in window) {\n        typeSchema = z.instanceof(window[baseType]);\n      }\n      // Generate a schema for a single parameter that can be of multiple\n      // types / constants, i.e. `String|Number|Array`.\n      //\n      // Here, z.union() is used over z.enum() (which seems more intuitive) for\n      // constants for the following reasons:\n      // 1) z.enum() only allows a fixed set of allowable string values. However,\n      // our constants sometimes have numeric or non-primitive values.\n      // 2) In some cases, the type can be constants or strings, making z.enum()\n      // insufficient for the use case.\n      else if (baseType.includes('|') && baseType.split('|').every(t => validBracketNesting(t))) {\n        const types = baseType.split('|');\n        typeSchema = z.union(types.map(t => generateTypeSchema(t)).filter(s => s !== undefined));\n      } else if (baseType.endsWith('[]')) {\n        typeSchema = z.array(generateTypeSchema(baseType.slice(0, -2)));\n      } else {\n        throw new Error(`Unsupported type '${baseType}' in parameter validation. Please report this issue.`);\n      }\n      return typeSchema;\n    };\n\n    // Generate a schema for a single parameter. In the case where a parameter can\n    // be of multiple types, `generateTypeSchema` is called for each type.\n    const generateParamSchema = param => {\n      const isOptional = param?.endsWith('?');\n      param = param?.replace(/\\?$/, '');\n      const isRest = param?.startsWith('...') && param?.endsWith('[]');\n      param = param?.replace(/^\\.\\.\\.(.+)\\[\\]$/, '$1');\n      let schema = generateTypeSchema(param);\n      if (isOptional) {\n        schema = schema.optional();\n      }\n      return {\n        schema,\n        rest: isRest\n      };\n    };\n\n    // Note that in Zod, `optional()` only checks for undefined, not the absence\n    // of value.\n    //\n    // Let's say we have a function with 3 parameters, and the last one is\n    // optional, i.e. func(a, b, c?). If we only have a z.tuple() for the\n    // parameters, where the third schema is optional, then we will only be able\n    // to validate func(10, 10, undefined), but not func(10, 10), which is\n    // a completely valid call.\n    //\n    // Therefore, on top of using `optional()`, we also have to generate parameter\n    // combinations that are valid for all numbers of parameters.\n    const generateOverloadCombinations = params => {\n      // No optional parameters, return the original parameter list right away.\n      if (!params.some(p => p?.endsWith('?'))) {\n        return [params];\n      }\n      const requiredParamsCount = params.filter(p => p === null || !p.endsWith('?')).length;\n      const result = [];\n      for (let i = requiredParamsCount; i <= params.length; i++) {\n        result.push(params.slice(0, i));\n      }\n      return result;\n    };\n\n    // Generate schemas for each function overload and merge them\n    const overloadSchemas = overloads.flatMap(overload => {\n      const combinations = generateOverloadCombinations(overload);\n      return combinations.map(combo => {\n        const params = combo.map(p => generateParamSchema(p)).filter(s => s.schema !== undefined);\n        let rest;\n        if (params.at(-1)?.rest) {\n          rest = params.pop();\n        }\n        let combined = z.tuple(params.map(s => s.schema));\n        if (rest) {\n          combined = combined.rest(rest.schema);\n        }\n        return combined;\n      });\n    });\n    return overloadSchemas.length === 1 ? overloadSchemas[0] : z.union(overloadSchemas);\n  };\n\n  /**\n   * Finds the closest schema to the input arguments.\n   *\n   * This is a helper function that identifies the closest schema to the input\n   * arguments, in the case of an initial validation error. We will then use the\n   * closest schema to generate a friendly error message.\n   *\n   * @private\n   * @param {z.ZodSchema} schema - Zod schema.\n   * @param {Array} args - User input arguments.\n   * @returns {z.ZodSchema} Closest schema matching the input arguments.\n   */\n  fn.findClosestSchema = function (schema, args) {\n    if (!(schema instanceof z.ZodUnion)) {\n      return schema;\n    }\n\n    // Helper function that scores how close the input arguments are to a schema.\n    // Lower score means closer match.\n    const scoreSchema = schema => {\n      let score = Infinity;\n      if (!(schema instanceof z.ZodTuple)) {\n        console.warn('Schema below is not a tuple: ');\n        printZodSchema(schema);\n        return score;\n      }\n      const numArgs = args.length;\n      const schemaItems = schema.items;\n      const numSchemaItems = schemaItems.length;\n      const numRequiredSchemaItems = schemaItems.filter(item => !item.isOptional()).length;\n      if (numArgs >= numRequiredSchemaItems && numArgs <= numSchemaItems) {\n        score = 0;\n      }\n      // Here, give more weight to mismatch in number of arguments.\n      //\n      // For example, color() can either take [Number, Number?] or\n      // [Number, Number, Number, Number?] as list of parameters.\n      // If the user passed in 3 arguments, [10, undefined, undefined], it's\n      // more than likely that they intended to pass in 3 arguments, but the\n      // last two arguments are invalid.\n      //\n      // If there's no bias towards matching the number of arguments, the error\n      // message will show that we're expecting at most 2 arguments, but more\n      // are received.\n      else {\n        score = Math.abs(numArgs < numRequiredSchemaItems ? numRequiredSchemaItems - numArgs : numArgs - numSchemaItems) * 4;\n      }\n      for (let i = 0; i < Math.min(schemaItems.length, args.length); i++) {\n        const paramSchema = schemaItems[i];\n        const arg = args[i];\n        if (!paramSchema.safeParse(arg).success) score++;\n      }\n      return score;\n    };\n\n    // Default to the first schema, so that we are guaranteed to return a result.\n    let closestSchema = schema._def.options[0];\n    // We want to return the schema with the lowest score.\n    let bestScore = Infinity;\n    const schemaUnion = schema._def.options;\n    schemaUnion.forEach(schema => {\n      const score = scoreSchema(schema);\n      if (score < bestScore) {\n        closestSchema = schema;\n        bestScore = score;\n      }\n    });\n    return closestSchema;\n  };\n\n  /**\n   * Prints a friendly error message after parameter validation, if validation\n   * has failed.\n   *\n   * @method _friendlyParamError\n   * @private\n   * @param {z.ZodError} zodErrorObj - The Zod error object containing validation errors.\n   * @param {String} func - Name of the function. Expect global functions like `sin` and class methods like `p5.Vector.add`\n   * @returns {String} The friendly error message.\n   */\n  fn.friendlyParamError = function (zodErrorObj, func, args) {\n    let message = '🌸 p5.js says: ';\n    let isVersionError = false;\n    // The `zodErrorObj` might contain multiple errors of equal importance\n    // (after scoring the schema closeness in `findClosestSchema`). Here, we\n    // always print the first error so that user can work through the errors\n    // one by one.\n    let currentError = zodErrorObj.errors[0];\n\n    // Helper function to build a type mismatch message.\n    const buildTypeMismatchMessage = (actualType, expectedTypeStr, position) => {\n      const positionStr = position ? `at the ${ordinals[position]} parameter` : '';\n      const actualTypeStr = actualType ? `, but received ${actualType}` : '';\n      return `Expected ${expectedTypeStr} ${positionStr}${actualTypeStr}`;\n    };\n\n    // Union errors occur when a parameter can be of multiple types but is not\n    // of any of them. In this case, aggregate all possible types and print\n    // a friendly error message that indicates what the expected types are at\n    // which position (position is not 0-indexed, for accessibility reasons).\n    const processUnionError = error => {\n      const expectedTypes = new Set();\n      let actualType;\n      error.unionErrors.forEach(err => {\n        const issue = err.issues[0];\n        if (issue) {\n          if (!actualType) {\n            actualType = issue.received;\n          }\n          if (issue.code === 'invalid_type') {\n            expectedTypes.add(issue.expected);\n          }\n          // The case for constants. Since we don't want to print out the actual\n          // constant values in the error message, the error message will\n          // direct users to the documentation.\n          else if (issue.code === 'invalid_literal') {\n            expectedTypes.add(\"constant (please refer to documentation for allowed values)\");\n          } else if (issue.code === 'custom') {\n            const match = issue.message.match(/Input not instance of (\\w+)/);\n            if (match) expectedTypes.add(match[1]);\n          }\n        }\n      });\n      if (expectedTypes.size > 0) {\n        if (error.path?.length > 0 && args[error.path[0]] instanceof Promise) {\n          message += 'Did you mean to put `await` before a loading function? ' + 'An unexpected Promise was found. ';\n          isVersionError = true;\n        }\n        const expectedTypesStr = Array.from(expectedTypes).join(' or ');\n        const position = error.path.join('.');\n        message += buildTypeMismatchMessage(actualType, expectedTypesStr, position);\n      }\n      return message;\n    };\n    switch (currentError.code) {\n      case 'invalid_union':\n        {\n          processUnionError(currentError);\n          break;\n        }\n      case 'too_small':\n        {\n          const minArgs = currentError.minimum;\n          message += `Expected at least ${minArgs} argument${minArgs > 1 ? 's' : ''}, but received fewer`;\n          break;\n        }\n      case 'invalid_type':\n        {\n          message += buildTypeMismatchMessage(currentError.received, currentError.expected, currentError.path.join('.'));\n          break;\n        }\n      case 'too_big':\n        {\n          const maxArgs = currentError.maximum;\n          message += `Expected at most ${maxArgs} argument${maxArgs > 1 ? 's' : ''}, but received more`;\n          break;\n        }\n      default:\n        {\n          console.log('Zod error object', currentError);\n        }\n    }\n\n    // Let the user know which function is generating the error.\n    message += ` in ${func}().`;\n\n    // Generates a link to the documentation based on the given function name.\n    // TODO: Check if the link is reachable before appending it to the error\n    // message.\n    const generateDocumentationLink = func => {\n      const {\n        funcName,\n        funcClass\n      } = extractFuncNameAndClass(func);\n      const p5BaseUrl = 'https://p5js.org/reference';\n      const url = `${p5BaseUrl}/${funcClass}/${funcName}`;\n      return url;\n    };\n    if (currentError.code === 'too_big' || currentError.code === 'too_small') {\n      const documentationLink = generateDocumentationLink(func);\n      message += ` For more information, see ${documentationLink}.`;\n    }\n    if (isVersionError) {\n      p5._error(this, message);\n    } else {\n      console.log(message);\n    }\n    return message;\n  };\n\n  /**\n   * Runs parameter validation by matching the input parameters to Zod schemas\n   * generated from the parameter data from `docs/parameterData.json`.\n   *\n   * @private\n   * @param {String} func - Name of the function.\n   * @param {Array} args - User input arguments.\n   * @returns {Object} The validation result.\n   * @returns {Boolean} result.success - Whether the validation was successful.\n   * @returns {any} [result.data] - The parsed data if validation was successful.\n   * @returns {String} [result.error] - The validation error message if validation has failed.\n   */\n  fn.validate = function (func, args) {\n    if (p5.disableFriendlyErrors) {\n      return; // skip FES\n    }\n    if (!Array.isArray(args)) {\n      args = Array.from(args);\n    }\n\n    // An edge case: even when all arguments are optional and therefore,\n    // theoretically allowed to stay undefined and valid, it is likely that the\n    // user intended to call the function with non-undefined arguments. Skip\n    // regular workflow and return a friendly error message right away.\n    if (Array.isArray(args) && args.length > 0 && args.every(arg => arg === undefined)) {\n      const undefinedErrorMessage = `🌸 p5.js says: All arguments for ${func}() are undefined. There is likely an error in the code.`;\n      return {\n        success: false,\n        error: undefinedErrorMessage\n      };\n    }\n    let funcSchemas = schemaRegistry.get(func);\n    if (!funcSchemas) {\n      funcSchemas = fn.generateZodSchemasForFunc(func);\n      if (!funcSchemas) return;\n      schemaRegistry.set(func, funcSchemas);\n    }\n    try {\n      return {\n        success: true,\n        data: funcSchemas.parse(args)\n      };\n    } catch (error) {\n      const closestSchema = fn.findClosestSchema(funcSchemas, args);\n      const zodError = closestSchema.safeParse(args).error;\n      const errorMessage = fn.friendlyParamError(zodError, func, args);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  lifecycles.presetup = function () {\n    loadP5Constructors();\n    const excludes = ['validate'];\n    for (const f in this) {\n      if (!excludes.includes(f) && !f.startsWith('_') && typeof this[f] === 'function') {\n        const copy = this[f];\n        this[f] = function (...args) {\n          this.validate(f, args);\n          return copy.call(this, ...args);\n        };\n      }\n    }\n  };\n}\nif (typeof p5 !== 'undefined') {\n  validateParams(p5, p5.prototype);\n}\nexport { validateParams as default };","map":{"version":3,"names":["v","constants","z","p5$1","describe","overloads","describeElement","textOutput","gridOutput","p5","color","red","green","blue","alpha","hue","saturation","brightness","lightness","lerpColor","paletteLerp","beginClip","endClip","clip","background","clear","colorMode","fill","noFill","noStroke","stroke","erase","noErase","blendMode","print","cursor","frameRate","getTargetFrameRate","noCursor","windowResized","fullscreen","pixelDensity","displayDensity","getURL","getURLPath","getURLParams","worldToScreen","screenToWorld","setup","draw","createCanvas","resizeCanvas","noCanvas","createGraphics","createFramebuffer","clearDepth","noLoop","loop","isLooping","redraw","applyMatrix","resetMatrix","rotate","rotateX","rotateY","rotateZ","scale","shearX","shearY","translate","push","pop","storeItem","getItem","clearStorage","removeItem","select","selectAll","createElement","removeElements","addElement","createDiv","createP","createSpan","createImg","createA","createSlider","createButton","createCheckbox","createSelect","createRadio","createColorPicker","createInput","createFileInput","setMoveThreshold","setShakeThreshold","deviceMoved","deviceTurned","deviceShaken","keyPressed","keyReleased","keyTyped","keyIsDown","mouseMoved","mouseDragged","mousePressed","mouseReleased","mouseClicked","doubleClicked","mouseWheel","requestPointerLock","exitPointerLock","createImage","saveCanvas","saveFrames","loadImage","saveGif","image","tint","noTint","imageMode","blend","copy","filter","get","loadPixels","set","updatePixels","loadJSON","loadStrings","loadTable","loadXML","loadBytes","loadBlob","httpGet","httpPost","httpDo","createWriter","write","close","save","saveJSON","saveStrings","saveTable","abs","ceil","constrain","dist","exp","floor","lerp","log","mag","map","max","min","norm","pow","round","sq","sqrt","fract","createVector","noise","noiseDetail","noiseSeed","randomSeed","random","randomGaussian","acos","asin","atan","atan2","cos","sin","tan","degrees","radians","angleMode","arc","ellipse","circle","line","point","quad","rect","square","triangle","ellipseMode","noSmooth","rectMode","smooth","strokeCap","strokeJoin","strokeWeight","bezier","bezierPoint","bezierTangent","spline","splinePoint","splineTangent","bezierOrder","splineVertex","splineProperty","splineProperties","vertex","beginContour","endContour","beginShape","bezierVertex","endShape","normal","vertexProperty","loadFont","text","textAlign","textAscent","textDescent","textLeading","textFont","textSize","textStyle","textWidth","textWrap","textBounds","textDirection","textProperty","textProperties","fontBounds","fontWidth","fontAscent","fontDescent","textWeight","float","int","str","boolean","byte","char","unchar","hex","unhex","day","hour","minute","millis","month","second","year","nf","nfc","nfp","nfs","splitTokens","shuffle","strokeMode","buildGeometry","freeGeometry","plane","box","sphere","cylinder","cone","ellipsoid","torus","curveDetail","orbitControl","debugMode","noDebugMode","ambientLight","specularColor","directionalLight","pointLight","imageLight","panorama","lights","lightFalloff","spotLight","noLights","loadModel","model","createModel","loadShader","createShader","loadFilterShader","createFilterShader","shader","strokeShader","imageShader","baseMaterialShader","baseFilterShader","baseNormalShader","baseColorShader","baseStrokeShader","resetShader","texture","textureMode","textureWrap","normalMaterial","ambientMaterial","emissiveMaterial","specularMaterial","shininess","metalness","camera","perspective","linePerspective","ortho","frustum","createCamera","setCamera","saveObj","saveStl","setAttributes","remove","createVideo","createAudio","createCapture","dataDoc","flipV","calculateBoundingBox","clearColors","flipU","computeFaces","computeNormals","makeEdgesFromFaces","normalize","toString","setRed","setGreen","setBlue","setAlpha","reset","parent","child","html","id","addClass","removeClass","hasClass","toggleClass","center","position","show","hide","size","style","attribute","removeAttribute","value","mouseOver","mouseOut","dragOver","dragLeave","changed","input","drop","draggable","play","stop","pause","autoplay","volume","speed","time","duration","onended","connect","disconnect","showControls","hideControls","addCue","removeCue","clearCues","resize","mask","getCurrentFrame","setFrame","numFrames","delay","addRow","removeRow","getRow","getRows","findRow","findRows","matchRow","matchRows","getColumn","clearRows","addColumn","getColumnCount","getRowCount","removeTokens","trim","removeColumn","setNum","setString","getNum","getString","getObject","getArray","getParent","getName","setName","hasChildren","listChildren","getChildren","getChild","addChild","removeChild","getAttributeCount","listAttributes","hasAttribute","setAttribute","getContent","serialize","getValue","setValue","add","rem","sub","mult","div","magSq","dot","cross","limit","setMag","heading","setHeading","angleBetween","slerp","reflect","array","equals","fromAngle","fromAngles","random2D","random3D","textToPaths","textToPoints","textToContours","textToModel","pan","tilt","lookAt","move","setPosition","autoSized","begin","end","version","inspectHooks","modify","copyToContext","setUniform","validateParams","fn","lifecycles","schemaRegistry","Map","p5Constructors","Object","keys","reduce","acc","val","match","Function","loadP5Constructors","key","toLowerCase","constantsMap","entries","schemaMap","any","function","number","object","string","webAPIObjects","generateWebAPISchemas","apiObjects","obj","custom","data","globalThis","message","webAPISchemas","assign","ordinals","extractFuncNameAndClass","func","ichDot","lastIndexOf","funcName","slice","funcClass","validBracketNesting","type","level","i","length","generateZodSchemasForFunc","funcInfo","hasOwnProperty","generateTypeSchema","baseType","typeSchema","literal","startsWith","exec","className","substring","indexOf","instanceof","endsWith","tuple","split","entry","window","includes","every","t","types","union","s","undefined","Error","generateParamSchema","param","isOptional","replace","isRest","schema","optional","rest","generateOverloadCombinations","params","some","p","requiredParamsCount","result","overloadSchemas","flatMap","overload","combinations","combo","at","combined","findClosestSchema","args","ZodUnion","scoreSchema","score","Infinity","ZodTuple","console","warn","printZodSchema","numArgs","schemaItems","items","numSchemaItems","numRequiredSchemaItems","item","Math","paramSchema","arg","safeParse","success","closestSchema","_def","options","bestScore","schemaUnion","forEach","friendlyParamError","zodErrorObj","isVersionError","currentError","errors","buildTypeMismatchMessage","actualType","expectedTypeStr","positionStr","actualTypeStr","processUnionError","error","expectedTypes","Set","unionErrors","err","issue","issues","received","code","expected","path","Promise","expectedTypesStr","Array","from","join","minArgs","minimum","maxArgs","maximum","generateDocumentationLink","p5BaseUrl","url","documentationLink","_error","validate","disableFriendlyErrors","isArray","undefinedErrorMessage","funcSchemas","parse","zodError","errorMessage","presetup","excludes","f","call","prototype","default"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/p5/dist/core/friendly_errors/param_validator.js"],"sourcesContent":["import { v as constants } from '../../constants-BRcElHU3.js';\nimport * as z from 'zod';\n\nvar p5$1 = {\n\tdescribe: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"FALLBACK|LABEL?\"\n\t\t\t]\n\t\t]\n\t},\n\tdescribeElement: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String\",\n\t\t\t\t\"FALLBACK|LABEL?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextOutput: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"FALLBACK|LABEL?\"\n\t\t\t]\n\t\t]\n\t},\n\tgridOutput: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"FALLBACK|LABEL?\"\n\t\t\t]\n\t\t]\n\t},\n\tp5: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object\",\n\t\t\t\t\"String|HTMLElement\"\n\t\t\t]\n\t\t]\n\t},\n\tcolor: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color\"\n\t\t\t]\n\t\t]\n\t},\n\tred: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tgreen: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tblue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\talpha: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\thue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tsaturation: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tbrightness: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tlightness: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tlerpColor: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color\",\n\t\t\t\t\"p5.Color\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tpaletteLerp: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"[p5.Color|String|Number|Number[], Number][]\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tbeginClip: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tendClip: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tclip: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tbackground: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Color\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Image\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tclear: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcolorMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"RGB|HSB|HSL|RGBHDR|HWB|LAB|LCH|OKLAB|OKLCH\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"RGB|HSB|HSL|RGBHDR|HWB|LAB|LCH|OKLAB|OKLCH\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tfill: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color\"\n\t\t\t]\n\t\t]\n\t},\n\tnoFill: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tnoStroke: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tstroke: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color\"\n\t\t\t]\n\t\t]\n\t},\n\terase: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tnoErase: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tblendMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|REMOVE|SUBTRACT\"\n\t\t\t]\n\t\t]\n\t},\n\tprint: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Any\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Number|Array\"\n\t\t\t]\n\t\t]\n\t},\n\tcursor: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"ARROW|CROSS|HAND|MOVE|TEXT|WAIT|String\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tframeRate: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetTargetFrameRate: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tnoCursor: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\twindowResized: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"UIEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tfullscreen: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tpixelDensity: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tdisplayDensity: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetURL: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetURLPath: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetURLParams: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tworldToScreen: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number|p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tscreenToWorld: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number|p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tsetup: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tdraw: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcreateCanvas: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"P2D|WEBGL|P2DHDR?\",\n\t\t\t\t\"HTMLCanvasElement?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"HTMLCanvasElement?\"\n\t\t\t]\n\t\t]\n\t},\n\tresizeCanvas: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tnoCanvas: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcreateGraphics: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"P2D|WEBGL?\",\n\t\t\t\t\"HTMLCanvasElement?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"HTMLCanvasElement?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateFramebuffer: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tclearDepth: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tnoLoop: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tloop: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tisLooping: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tredraw: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tapplyMatrix: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Array\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tresetMatrix: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\trotate: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector|Number[]?\"\n\t\t\t]\n\t\t]\n\t},\n\trotateX: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\trotateY: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\trotateZ: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tscale: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number|p5.Vector|Number[]\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector|Number[]\"\n\t\t\t]\n\t\t]\n\t},\n\tshearX: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tshearY: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\ttranslate: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tpush: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tpop: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tstoreItem: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String|Number|Boolean|Object|Array\"\n\t\t\t]\n\t\t]\n\t},\n\tgetItem: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tclearStorage: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tremoveItem: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tselect: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String|p5.Element|HTMLElement?\"\n\t\t\t]\n\t\t]\n\t},\n\tselectAll: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String|p5.Element|HTMLElement?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateElement: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tremoveElements: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\taddElement: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcreateDiv: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateP: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateSpan: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateImg: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateA: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateSlider: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateButton: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateCheckbox: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateSelect: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Boolean?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Object\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateRadio: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcreateColorPicker: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|p5.Color?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateInput: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\",\n\t\t\t\t\"String?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateFileInput: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tsetMoveThreshold: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetShakeThreshold: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tdeviceMoved: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tdeviceTurned: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tdeviceShaken: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tkeyPressed: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"KeyboardEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tkeyReleased: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"KeyboardEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tkeyTyped: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"KeyboardEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tkeyIsDown: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number|String\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseMoved: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"MouseEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseDragged: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"MouseEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tmousePressed: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"MouseEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseReleased: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"MouseEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseClicked: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"MouseEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tdoubleClicked: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"MouseEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseWheel: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"WheelEvent?\"\n\t\t\t]\n\t\t]\n\t},\n\trequestPointerLock: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\texitPointerLock: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcreateImage: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveCanvas: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Framebuffer|p5.Element|HTMLCanvasElement\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"String?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String?\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveFrames: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"function(Array)?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadImage: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"function(p5.Image)?\",\n\t\t\t\t\"function(Event)?\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveGif: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\timage: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture|p5.Renderer|p5.Graphics\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"CONTAIN|COVER?\",\n\t\t\t\t\"LEFT|RIGHT|CENTER?\",\n\t\t\t\t\"TOP|BOTTOM|CENTER?\"\n\t\t\t]\n\t\t]\n\t},\n\ttint: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color\"\n\t\t\t]\n\t\t]\n\t},\n\tnoTint: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\timageMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"CORNER|CORNERS|CENTER\"\n\t\t\t]\n\t\t]\n\t},\n\tblend: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"\n\t\t\t]\n\t\t]\n\t},\n\tcopy: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image|p5.Element\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tfilter: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"THRESHOLD|GRAY|OPAQUE|INVERT|POSTERIZE|BLUR|ERODE|DILATE|BLUR\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Boolean?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Shader\"\n\t\t\t]\n\t\t]\n\t},\n\tget: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tloadPixels: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number|Number[]|Object\"\n\t\t\t]\n\t\t]\n\t},\n\tupdatePixels: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tloadJSON: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadStrings: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadTable: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadXML: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadBytes: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadBlob: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\thttpGet: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\thttpPost: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Object|Boolean?\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Object|Boolean\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\thttpDo: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Object?\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateWriter: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\twrite: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Number|Array\"\n\t\t\t]\n\t\t]\n\t},\n\tclose: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tsave: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object|String?\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Boolean|String?\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveJSON: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Array|Object\",\n\t\t\t\t\"String\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveStrings: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String[]\",\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveTable: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Table\",\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tabs: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tceil: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tconstrain: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tdist: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\texp: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tfloor: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tlerp: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tlog: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tmag: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tmap: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tmax: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t]\n\t\t]\n\t},\n\tmin: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t]\n\t\t]\n\t},\n\tnorm: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tpow: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tround: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tsq: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsqrt: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tfract: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateVector: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"...Number[]\"\n\t\t\t]\n\t\t]\n\t},\n\tnoise: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tnoiseDetail: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tnoiseSeed: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\trandomSeed: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\trandom: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Array\"\n\t\t\t]\n\t\t]\n\t},\n\trandomGaussian: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tacos: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tasin: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tatan: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tatan2: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tcos: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsin: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\ttan: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tdegrees: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tradians: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tangleMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"RADIANS|DEGREES\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tarc: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"CHORD|PIE|OPEN?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tellipse: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tcircle: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tline: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tpoint: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tquad: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\trect: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tsquare: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\ttriangle: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tellipseMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"CENTER|RADIUS|CORNER|CORNERS\"\n\t\t\t]\n\t\t]\n\t},\n\tnoSmooth: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\trectMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"CENTER|RADIUS|CORNER|CORNERS\"\n\t\t\t]\n\t\t]\n\t},\n\tsmooth: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tstrokeCap: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"ROUND|SQUARE|PROJECT\"\n\t\t\t]\n\t\t]\n\t},\n\tstrokeJoin: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"MITER|BEVEL|ROUND\"\n\t\t\t]\n\t\t]\n\t},\n\tstrokeWeight: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tbezier: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tbezierPoint: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tbezierTangent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tspline: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsplinePoint: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsplineTangent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tbezierOrder: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tsplineVertex: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tsplineProperty: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\tnull\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tsplineProperties: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tvertex: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tbeginContour: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tendContour: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"OPEN|CLOSE?\"\n\t\t\t]\n\t\t]\n\t},\n\tbeginShape: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"POINTS|LINES|TRIANGLES|TRIANGLE_FAN|TRIANGLE_STRIP|QUADS|QUAD_STRIP|PATH?\"\n\t\t\t]\n\t\t]\n\t},\n\tbezierVertex: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tendShape: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"CLOSE?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tnormal: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tvertexProperty: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number|Number[]\"\n\t\t\t]\n\t\t]\n\t},\n\tloadFont: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Object?\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\ttext: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Object|Array|Number|Boolean\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextAlign: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"LEFT|CENTER|RIGHT\",\n\t\t\t\t\"TOP|BOTTOM|CENTER|BASELINE?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextAscent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextDescent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextLeading: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\ttextFont: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Font|String|Object\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextSize: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\ttextStyle: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"NORMAL|ITALIC|BOLD|BOLDITALIC\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\ttextWidth: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\ttextWrap: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"WORD|CHAR\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\ttextBounds: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextDirection: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\ttextProperty: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\tnull\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\ttextProperties: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tfontBounds: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tfontWidth: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tfontAscent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tfontDescent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\ttextWeight: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tfloat: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String[]\"\n\t\t\t]\n\t\t]\n\t},\n\tint: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Boolean|Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Array\"\n\t\t\t]\n\t\t]\n\t},\n\tstr: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Boolean|Number\"\n\t\t\t]\n\t\t]\n\t},\n\tboolean: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Boolean|Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Array\"\n\t\t\t]\n\t\t]\n\t},\n\tbyte: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Boolean|Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Array\"\n\t\t\t]\n\t\t]\n\t},\n\tchar: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Array\"\n\t\t\t]\n\t\t]\n\t},\n\tunchar: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String[]\"\n\t\t\t]\n\t\t]\n\t},\n\thex: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tunhex: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String[]\"\n\t\t\t]\n\t\t]\n\t},\n\tday: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\thour: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tminute: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tmillis: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tmonth: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tsecond: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tyear: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tnf: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number|String\",\n\t\t\t\t\"Integer|String?\",\n\t\t\t\t\"Integer|String?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\",\n\t\t\t\t\"Integer|String?\",\n\t\t\t\t\"Integer|String?\"\n\t\t\t]\n\t\t]\n\t},\n\tnfc: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number|String\",\n\t\t\t\t\"Integer|String?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\",\n\t\t\t\t\"Integer|String?\"\n\t\t\t]\n\t\t]\n\t},\n\tnfp: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tnfs: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Array\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tsplitTokens: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tshuffle: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Array\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tstrokeMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tbuildGeometry: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function\"\n\t\t\t]\n\t\t]\n\t},\n\tfreeGeometry: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Geometry\"\n\t\t\t]\n\t\t]\n\t},\n\tplane: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tbox: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tsphere: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tcylinder: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Boolean?\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tcone: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tellipsoid: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\ttorus: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Integer?\",\n\t\t\t\t\"Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tcurveDetail: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\torbitControl: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tdebugMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"GRID|AXES\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"GRID|AXES\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"GRID|AXES\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tnoDebugMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tambientLight: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color\"\n\t\t\t]\n\t\t]\n\t},\n\tspecularColor: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color\"\n\t\t\t]\n\t\t]\n\t},\n\tdirectionalLight: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tpointLight: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\timageLight: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.image\"\n\t\t\t]\n\t\t]\n\t},\n\tpanorama: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image\"\n\t\t\t]\n\t\t]\n\t},\n\tlights: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tlightFalloff: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tspotLight: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tnoLights: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tloadModel: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Boolean\",\n\t\t\t\t\"function(p5.Geometry)?\",\n\t\t\t\t\"function(Event)?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"function(p5.Geometry)?\",\n\t\t\t\t\"function(Event)?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tmodel: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Geometry\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateModel: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Boolean\",\n\t\t\t\t\"function(p5.Geometry)?\",\n\t\t\t\t\"function(Event)?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"function(p5.Geometry)?\",\n\t\t\t\t\"function(Event)?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"String|Request\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadFilterShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Function?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateFilterShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tshader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Shader\"\n\t\t\t]\n\t\t]\n\t},\n\tstrokeShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Shader\"\n\t\t\t]\n\t\t]\n\t},\n\timageShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Shader\"\n\t\t\t]\n\t\t]\n\t},\n\tbaseMaterialShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tbaseFilterShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tbaseNormalShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tbaseColorShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tbaseStrokeShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tresetShader: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\ttexture: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image|p5.MediaElement|p5.Graphics|p5.Texture|p5.Framebuffer|p5.FramebufferTexture\"\n\t\t\t]\n\t\t]\n\t},\n\ttextureMode: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"IMAGE|NORMAL\"\n\t\t\t]\n\t\t]\n\t},\n\ttextureWrap: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"CLAMP|REPEAT|MIRROR\",\n\t\t\t\t\"CLAMP|REPEAT|MIRROR?\"\n\t\t\t]\n\t\t]\n\t},\n\tnormalMaterial: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tambientMaterial: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\temissiveMaterial: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tspecularMaterial: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Color|Number[]|String\"\n\t\t\t]\n\t\t]\n\t},\n\tshininess: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tmetalness: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tcamera: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tperspective: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tlinePerspective: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Boolean\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tortho: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tfrustum: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateCamera: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tsetCamera: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Camera\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveObj: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tsaveStl: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tsetAttributes: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Boolean\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Object\"\n\t\t\t]\n\t\t]\n\t},\n\tremove: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcreateVideo: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|String[]\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateAudio: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|String[]?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateCapture: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"AUDIO|VIDEO|Object?\",\n\t\t\t\t\"Object?\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t}\n};\nvar dataDoc = {\n\tp5: p5$1,\n\t\"p5.Geometry\": {\n\tflipV: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcalculateBoundingBox: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tclearColors: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tflipU: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcomputeFaces: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcomputeNormals: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"FLAT|SMOOTH?\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tmakeEdgesFromFaces: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tnormalize: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tvertexProperty: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number|Number[]\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Color\": {\n\ttoString: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tsetRed: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetGreen: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetBlue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetAlpha: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Graphics\": {\n\treset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tremove: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tcreateFramebuffer: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Element\": {\n\tremove: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tparent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|p5.Element|Object\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tchild: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|p5.Element?\"\n\t\t\t]\n\t\t]\n\t},\n\thtml: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String?\",\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tid: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\t\"class\": {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\taddClass: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tremoveClass: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\thasClass: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\tnull\n\t\t\t]\n\t\t]\n\t},\n\ttoggleClass: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\tnull\n\t\t\t]\n\t\t]\n\t},\n\tcenter: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tposition: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tshow: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\thide: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tsize: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number|AUTO?\",\n\t\t\t\t\"Number|AUTO?\"\n\t\t\t]\n\t\t]\n\t},\n\tstyle: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String|p5.Color\"\n\t\t\t]\n\t\t]\n\t},\n\tattribute: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tremoveAttribute: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tvalue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"String|Number\"\n\t\t\t]\n\t\t]\n\t},\n\tmousePressed: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tdoubleClicked: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseWheel: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseReleased: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseClicked: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseMoved: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseOver: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tmouseOut: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tdragOver: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tdragLeave: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tchanged: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tinput: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tdrop: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function\",\n\t\t\t\t\"Function?\"\n\t\t\t]\n\t\t]\n\t},\n\tdraggable: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Element?\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.MediaElement\": {\n\tplay: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tstop: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tpause: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tloop: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tnoLoop: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tautoplay: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tvolume: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tspeed: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\ttime: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tduration: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tonended: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function\"\n\t\t\t]\n\t\t]\n\t},\n\tconnect: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"AudioNode|Object\"\n\t\t\t]\n\t\t]\n\t},\n\tdisconnect: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tshowControls: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\thideControls: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\taddCue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Function\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tremoveCue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tclearCues: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Image\": {\n\tpixelDensity: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tloadPixels: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tupdatePixels: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tget: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number|Number[]|Object\"\n\t\t\t]\n\t\t]\n\t},\n\tresize: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tcopy: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image|p5.Element\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tmask: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image\"\n\t\t\t]\n\t\t]\n\t},\n\tfilter: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"THRESHOLD|GRAY|OPAQUE|INVERT|POSTERIZE|ERODE|DILATE|BLUR\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tblend: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Image\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"Integer\",\n\t\t\t\t\"BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|NORMAL\"\n\t\t\t]\n\t\t]\n\t},\n\tsave: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\treset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetCurrentFrame: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tsetFrame: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tnumFrames: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tplay: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tpause: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tdelay: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Table\": {\n\taddRow: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.TableRow?\"\n\t\t\t]\n\t\t]\n\t},\n\tremoveRow: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetRow: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetRows: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tfindRow: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Integer|String\"\n\t\t\t]\n\t\t]\n\t},\n\tfindRows: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Integer|String\"\n\t\t\t]\n\t\t]\n\t},\n\tmatchRow: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|RegExp\",\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tmatchRows: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String|Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tgetColumn: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Number\"\n\t\t\t]\n\t\t]\n\t},\n\tclearRows: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\taddColumn: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tgetColumnCount: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetRowCount: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tremoveTokens: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"String|Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\ttrim: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer?\"\n\t\t\t]\n\t\t]\n\t},\n\tremoveColumn: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"String|Integer\",\n\t\t\t\t\"String|Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetNum: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"String|Integer\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetString: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"String|Integer\",\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tget: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetNum: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetString: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Integer\",\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetObject: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tgetArray: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.TableRow\": {\n\tset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\",\n\t\t\t\t\"String|Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetNum: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\",\n\t\t\t\t\"Number|String\"\n\t\t\t]\n\t\t]\n\t},\n\tsetString: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\",\n\t\t\t\t\"String|Number|Boolean|Object\"\n\t\t\t]\n\t\t]\n\t},\n\tget: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetNum: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetString: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.XML\": {\n\tgetParent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetName: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tsetName: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\thasChildren: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tlistChildren: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tgetChildren: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tgetChild: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\taddChild: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.XML\"\n\t\t\t]\n\t\t]\n\t},\n\tremoveChild: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String|Integer\"\n\t\t\t]\n\t\t]\n\t},\n\tgetAttributeCount: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tlistAttributes: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\thasAttribute: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\"\n\t\t\t]\n\t\t]\n\t},\n\tgetNum: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tgetString: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tsetAttribute: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number|String|Boolean\"\n\t\t\t]\n\t\t]\n\t},\n\tgetContent: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String?\"\n\t\t\t]\n\t\t]\n\t},\n\tserialize: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Vector\": {\n\tgetValue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetValue: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector|Number[]\"\n\t\t\t]\n\t\t]\n\t},\n\tcopy: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tadd: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number|Array\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector|Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\trem: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector|Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tsub: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector|Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tmult: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number[]\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tdiv: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number[]\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number[]\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tmag: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tmagSq: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tdot: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tcross: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tnormalize: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tlimit: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tsetMag: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\theading: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tsetHeading: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\trotate: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tangleBetween: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tlerp: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tslerp: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\treflect: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector?\"\n\t\t\t]\n\t\t]\n\t},\n\tarray: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t},\n\tequals: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector|Array\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector|Array\",\n\t\t\t\t\"p5.Vector|Array\"\n\t\t\t]\n\t\t]\n\t},\n\tfromAngle: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tfromAngles: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\trandom2D: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\trandom3D: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tdist: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"p5.Vector\",\n\t\t\t\t\"p5.Vector\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Font\": {\n\ttextToPaths: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextToPoints: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextToContours: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\ttextToModel: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Camera\": {\n\tperspective: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tortho: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tfrustum: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tpan: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\ttilt: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tlookAt: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tcamera: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\",\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tmove: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tsetPosition: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tset: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Camera\"\n\t\t\t]\n\t\t]\n\t},\n\tslerp: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5.Camera\",\n\t\t\t\t\"p5.Camera\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Framebuffer\": {\n\tresize: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t},\n\tpixelDensity: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number?\"\n\t\t\t]\n\t\t]\n\t},\n\tautoSized: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Boolean?\"\n\t\t\t]\n\t\t]\n\t},\n\tcreateCamera: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tremove: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tbegin: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tend: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tdraw: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Function\"\n\t\t\t]\n\t\t]\n\t},\n\tget: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t],\n\t\t\t[\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Number\",\n\t\t\t\t\"Number\"\n\t\t\t]\n\t\t]\n\t}\n},\n\t\"p5.Shader\": {\n\tversion: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tinspectHooks: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t]\n\t\t]\n\t},\n\tmodify: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"Object?\"\n\t\t\t]\n\t\t]\n\t},\n\tcopyToContext: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"p5|p5.Graphics\"\n\t\t\t]\n\t\t]\n\t},\n\tsetUniform: {\n\t\toverloads: [\n\t\t\t[\n\t\t\t\t\"String\",\n\t\t\t\t\"Boolean|Number|Number[]|p5.Image|p5.Graphics|p5.MediaElement|p5.Texture\"\n\t\t\t]\n\t\t]\n\t}\n}\n};\n\n/**\n * @for p5\n * @requires core\n */\n\nfunction validateParams(p5, fn, lifecycles) {\n  // Cache for Zod schemas\n  let schemaRegistry = new Map();\n\n  // Mapping names of p5 types to their constructor functions.\n  // p5Constructors:\n  //   - Color: f()\n  //   - Graphics: f()\n  //   - Vector: f()\n  // and so on.\n  // const p5Constructors = {};\n  // NOTE: This is a tempt fix for unit test but is not correct\n  // Attaced constructors are `undefined`\n  const p5Constructors = Object.keys(p5).reduce((acc, val) => {\n    if (\n      val.match(/^[A-Z]/) && // Starts with a capital\n      !val.match(/^[A-Z][A-Z0-9]*$/) && // Is not an all caps constant\n      p5[val] instanceof Function // Is a function\n    ) {\n      acc[val] = p5[val];\n    }\n    return acc;\n  }, {});\n\n  function loadP5Constructors() {\n    // Make a list of all p5 classes to be used for argument validation\n    // This must be done only when everything has loaded otherwise we get\n    // an empty array\n    for (let key of Object.keys(p5)) {\n      // Get a list of all constructors in p5. They are functions whose names\n      // start with a capital letter\n      if (typeof p5[key] === 'function' && key[0] !== key[0].toLowerCase()) {\n        p5Constructors[key] = p5[key];\n      }\n    }\n  }\n\n  // `constantsMap` maps constants to their values, e.g.\n  // {\n  //   ADD: 'lighter',\n  //   ALT: 18,\n  //   ARROW: 'default',\n  //   AUTO: 'auto',\n  //   ...\n  // }\n  const constantsMap = {};\n  for (const [key, value] of Object.entries(constants)) {\n    constantsMap[key] = value;\n  }\n\n  // Start initializing `schemaMap` with primitive types. `schemaMap` will\n  // eventually contain both primitive types and web API objects.\n  const schemaMap = {\n    'Any': z.any(),\n    'Array': z.array(z.any()),\n    'Boolean': z.boolean(),\n    'Function': z.function(),\n    'Integer': z.number().int(),\n    'Number': z.number(),\n    'Object': z.object({}),\n    'String': z.string(),\n  };\n\n  const webAPIObjects = [\n    'AudioNode',\n    'HTMLCanvasElement',\n    'HTMLElement',\n    'KeyboardEvent',\n    'MouseEvent',\n    'RegExp',\n    'TouchEvent',\n    'UIEvent',\n    'WheelEvent'\n  ];\n\n  function generateWebAPISchemas(apiObjects) {\n    return apiObjects.reduce((acc, obj) => {\n      acc[obj] = z.custom(data => data instanceof globalThis[obj], {\n        message: `Expected a ${obj}`\n      });\n      return acc;\n    }, {});\n  }\n\n  const webAPISchemas = generateWebAPISchemas(webAPIObjects);\n  // Add web API schemas to the schema map.\n  Object.assign(schemaMap, webAPISchemas);\n\n  // For mapping 0-indexed parameters to their ordinal representation, e.g.\n  // \"first\" for 0, \"second\" for 1, \"third\" for 2, etc.\n  const ordinals = [\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\", \"tenth\"];\n\n  function extractFuncNameAndClass(func) {\n    const ichDot = func.lastIndexOf('.');\n    const funcName = func.slice(ichDot + 1);\n    const funcClass = func.slice(0, ichDot !== -1 ? ichDot : 0) || 'p5';\n    return { funcName, funcClass };\n  }\n\n  function validBracketNesting(type) {\n    let level = 0;\n    for (let i = 0; i < type.length; i++) {\n      if (type[i] === '[') {\n        level++;\n      } else if (type[i] === ']') {\n        level--;\n        if (level < 0) return false;\n      }\n    }\n    return level === 0;\n  }\n\n  /**\n   * This is a helper function that generates Zod schemas for a function based on\n   * the parameter data from `docs/parameterData.json`.\n   *\n   * Example parameter data for function `background`:\n   * \"background\": {\n        \"overloads\": [\n          [\"p5.Color\"],\n          [\"String\", \"Number?\"],\n          [\"Number\", \"Number?\"],\n          [\"Number\", \"Number\", \"Number\", \"Number?\"],\n          [\"Number[]\"],\n          [\"p5.Image\", \"Number?\"]\n        ]\n      }\n   * Where each array in `overloads` represents a set of valid overloaded\n   * parameters, and `?` is a shorthand for `Optional`.\n   *\n   * @method generateZodSchemasForFunc\n   * @param {String} func - Name of the function. Expect global functions like `sin` and class methods like `p5.Vector.add`\n   * @returns {z.ZodSchema} Zod schema\n   */\n  fn.generateZodSchemasForFunc = function (func) {\n    const { funcName, funcClass } = extractFuncNameAndClass(func);\n    let funcInfo = dataDoc[funcClass][funcName];\n\n    if(!funcInfo) return;\n\n    let overloads = [];\n    if (funcInfo.hasOwnProperty('overloads')) {\n      overloads = funcInfo.overloads;\n    }\n\n    // Returns a schema for a single type, i.e. z.boolean() for `boolean`.\n    const generateTypeSchema = baseType => {\n      if (!baseType) return z.any();\n\n      let typeSchema;\n\n      // Check for constants. Note that because we're ultimately interested in the value of\n      // the constant, mapping constants to their values via `constantsMap` is\n      // necessary.\n      if (baseType in constantsMap) {\n        typeSchema = z.literal(constantsMap[baseType]);\n      }\n      // Some more constants are attached directly to p5.prototype, e.g. by addons:\n      else if (baseType.match(/^[A-Z][A-Z0-9]*$/) && baseType in fn) {\n        typeSchema = z.literal(fn[baseType]);\n      }\n      // Function types\n      else if (baseType.startsWith('function')) {\n        typeSchema = z.function();\n      }\n      // All p5 objects start with `p5` in the documentation, i.e. `p5.Camera`.\n      else if (/^p5\\.[a-zA-Z0-9]+$/.exec(baseType) || baseType === 'p5') {\n        const className = baseType.substring(baseType.indexOf('.') + 1);\n        typeSchema = z.instanceof(p5Constructors[className]);\n      }\n      // For primitive types and web API objects.\n      else if (schemaMap[baseType]) {\n        typeSchema = schemaMap[baseType];\n      }\n      // Tuple types\n      else if (\n        baseType.startsWith('[') &&\n        baseType.endsWith(']') &&\n        validBracketNesting(baseType.slice(1, -1))\n      ) {\n        typeSchema = z.tuple(\n          baseType\n            .slice(1, -1)\n            .split(/, */g)\n            .map(entry => generateTypeSchema(entry))\n        );\n      }\n      // JavaScript classes, e.g. Request\n      else if (baseType.match(/^[A-Z]/) && baseType in window) {\n        typeSchema = z.instanceof(window[baseType]);\n      }\n      // Generate a schema for a single parameter that can be of multiple\n      // types / constants, i.e. `String|Number|Array`.\n      //\n      // Here, z.union() is used over z.enum() (which seems more intuitive) for\n      // constants for the following reasons:\n      // 1) z.enum() only allows a fixed set of allowable string values. However,\n      // our constants sometimes have numeric or non-primitive values.\n      // 2) In some cases, the type can be constants or strings, making z.enum()\n      // insufficient for the use case.\n      else if (baseType.includes('|') && baseType.split('|').every(t => validBracketNesting(t))) {\n        const types = baseType.split('|');\n        typeSchema = z.union(types\n          .map(t => generateTypeSchema(t))\n          .filter(s => s !== undefined));\n      } else if (baseType.endsWith('[]')) {\n        typeSchema = z.array(generateTypeSchema(baseType.slice(0, -2)));\n      } else {\n        throw new Error(`Unsupported type '${baseType}' in parameter validation. Please report this issue.`);\n      }\n\n      return typeSchema;\n    };\n\n    // Generate a schema for a single parameter. In the case where a parameter can\n    // be of multiple types, `generateTypeSchema` is called for each type.\n    const generateParamSchema = param => {\n      const isOptional = param?.endsWith('?');\n      param = param?.replace(/\\?$/, '');\n\n      const isRest = param?.startsWith('...') && param?.endsWith('[]');\n      param = param?.replace(/^\\.\\.\\.(.+)\\[\\]$/, '$1');\n\n      let schema = generateTypeSchema(param);\n      if (isOptional) {\n        schema = schema.optional();\n      }\n      return { schema, rest: isRest };\n    };\n\n    // Note that in Zod, `optional()` only checks for undefined, not the absence\n    // of value.\n    //\n    // Let's say we have a function with 3 parameters, and the last one is\n    // optional, i.e. func(a, b, c?). If we only have a z.tuple() for the\n    // parameters, where the third schema is optional, then we will only be able\n    // to validate func(10, 10, undefined), but not func(10, 10), which is\n    // a completely valid call.\n    //\n    // Therefore, on top of using `optional()`, we also have to generate parameter\n    // combinations that are valid for all numbers of parameters.\n    const generateOverloadCombinations = params => {\n      // No optional parameters, return the original parameter list right away.\n      if (!params.some(p => p?.endsWith('?'))) {\n        return [params];\n      }\n\n      const requiredParamsCount = params.filter(p => p === null || !p.endsWith('?')).length;\n      const result = [];\n\n      for (let i = requiredParamsCount; i <= params.length; i++) {\n        result.push(params.slice(0, i));\n      }\n\n      return result;\n    };\n\n    // Generate schemas for each function overload and merge them\n    const overloadSchemas = overloads.flatMap(overload => {\n      const combinations = generateOverloadCombinations(overload);\n\n      return combinations.map(combo => {\n        const params = combo\n          .map(p => generateParamSchema(p))\n          .filter(s => s.schema !== undefined);\n\n        let rest;\n        if (params.at(-1)?.rest) {\n          rest = params.pop();\n        }\n\n        let combined = z.tuple(params.map(s => s.schema));\n        if (rest) {\n          combined = combined.rest(rest.schema);\n        }\n        return combined;\n      });\n    });\n\n    return overloadSchemas.length === 1\n      ? overloadSchemas[0]\n      : z.union(overloadSchemas);\n  };\n\n  /**\n   * Finds the closest schema to the input arguments.\n   *\n   * This is a helper function that identifies the closest schema to the input\n   * arguments, in the case of an initial validation error. We will then use the\n   * closest schema to generate a friendly error message.\n   *\n   * @private\n   * @param {z.ZodSchema} schema - Zod schema.\n   * @param {Array} args - User input arguments.\n   * @returns {z.ZodSchema} Closest schema matching the input arguments.\n   */\n  fn.findClosestSchema = function (schema, args) {\n    if (!(schema instanceof z.ZodUnion)) {\n      return schema;\n    }\n\n    // Helper function that scores how close the input arguments are to a schema.\n    // Lower score means closer match.\n    const scoreSchema = schema => {\n      let score = Infinity;\n      if (!(schema instanceof z.ZodTuple)) {\n        console.warn('Schema below is not a tuple: ');\n        printZodSchema(schema);\n        return score;\n      }\n\n      const numArgs = args.length;\n      const schemaItems = schema.items;\n      const numSchemaItems = schemaItems.length;\n      const numRequiredSchemaItems = schemaItems.filter(item => !item.isOptional()).length;\n\n      if (numArgs >= numRequiredSchemaItems && numArgs <= numSchemaItems) {\n        score = 0;\n      }\n      // Here, give more weight to mismatch in number of arguments.\n      //\n      // For example, color() can either take [Number, Number?] or\n      // [Number, Number, Number, Number?] as list of parameters.\n      // If the user passed in 3 arguments, [10, undefined, undefined], it's\n      // more than likely that they intended to pass in 3 arguments, but the\n      // last two arguments are invalid.\n      //\n      // If there's no bias towards matching the number of arguments, the error\n      // message will show that we're expecting at most 2 arguments, but more\n      // are received.\n      else {\n        score = Math.abs(\n          numArgs < numRequiredSchemaItems ? numRequiredSchemaItems - numArgs : numArgs - numSchemaItems\n        ) * 4;\n      }\n\n      for (let i = 0; i < Math.min(schemaItems.length, args.length); i++) {\n        const paramSchema = schemaItems[i];\n        const arg = args[i];\n\n        if (!paramSchema.safeParse(arg).success) score++;\n      }\n\n      return score;\n    };\n\n    // Default to the first schema, so that we are guaranteed to return a result.\n    let closestSchema = schema._def.options[0];\n    // We want to return the schema with the lowest score.\n    let bestScore = Infinity;\n\n    const schemaUnion = schema._def.options;\n    schemaUnion.forEach(schema => {\n      const score = scoreSchema(schema);\n      if (score < bestScore) {\n        closestSchema = schema;\n        bestScore = score;\n      }\n    });\n\n    return closestSchema;\n  };\n\n  /**\n   * Prints a friendly error message after parameter validation, if validation\n   * has failed.\n   *\n   * @method _friendlyParamError\n   * @private\n   * @param {z.ZodError} zodErrorObj - The Zod error object containing validation errors.\n   * @param {String} func - Name of the function. Expect global functions like `sin` and class methods like `p5.Vector.add`\n   * @returns {String} The friendly error message.\n   */\n  fn.friendlyParamError = function (zodErrorObj, func, args) {\n    let message = '🌸 p5.js says: ';\n    let isVersionError = false;\n    // The `zodErrorObj` might contain multiple errors of equal importance\n    // (after scoring the schema closeness in `findClosestSchema`). Here, we\n    // always print the first error so that user can work through the errors\n    // one by one.\n    let currentError = zodErrorObj.errors[0];\n\n    // Helper function to build a type mismatch message.\n    const buildTypeMismatchMessage = (actualType, expectedTypeStr, position) => {\n      const positionStr = position ? `at the ${ordinals[position]} parameter` : '';\n      const actualTypeStr = actualType ? `, but received ${actualType}` : '';\n      return `Expected ${expectedTypeStr} ${positionStr}${actualTypeStr}`;\n    };\n\n    // Union errors occur when a parameter can be of multiple types but is not\n    // of any of them. In this case, aggregate all possible types and print\n    // a friendly error message that indicates what the expected types are at\n    // which position (position is not 0-indexed, for accessibility reasons).\n    const processUnionError = (error) => {\n      const expectedTypes = new Set();\n      let actualType;\n\n      error.unionErrors.forEach(err => {\n        const issue = err.issues[0];\n        if (issue) {\n          if (!actualType) {\n            actualType = issue.received;\n          }\n\n          if (issue.code === 'invalid_type') {\n            expectedTypes.add(issue.expected);\n          }\n          // The case for constants. Since we don't want to print out the actual\n          // constant values in the error message, the error message will\n          // direct users to the documentation.\n          else if (issue.code === 'invalid_literal') {\n            expectedTypes.add(\"constant (please refer to documentation for allowed values)\");\n          } else if (issue.code === 'custom') {\n            const match = issue.message.match(/Input not instance of (\\w+)/);\n            if (match) expectedTypes.add(match[1]);\n          }\n        }\n      });\n\n      if (expectedTypes.size > 0) {\n        if (error.path?.length > 0 && args[error.path[0]] instanceof Promise)  {\n          message += 'Did you mean to put `await` before a loading function? ' +\n            'An unexpected Promise was found. ';\n          isVersionError = true;\n        }\n\n        const expectedTypesStr = Array.from(expectedTypes).join(' or ');\n        const position = error.path.join('.');\n\n        message += buildTypeMismatchMessage(actualType, expectedTypesStr, position);\n      }\n\n      return message;\n    };\n\n    switch (currentError.code) {\n      case 'invalid_union': {\n        processUnionError(currentError);\n        break;\n      }\n      case 'too_small': {\n        const minArgs = currentError.minimum;\n        message += `Expected at least ${minArgs} argument${minArgs > 1 ? 's' : ''}, but received fewer`;\n        break;\n      }\n      case 'invalid_type': {\n        message += buildTypeMismatchMessage(currentError.received, currentError.expected, currentError.path.join('.'));\n        break;\n      }\n      case 'too_big': {\n        const maxArgs = currentError.maximum;\n        message += `Expected at most ${maxArgs} argument${maxArgs > 1 ? 's' : ''}, but received more`;\n        break;\n      }\n      default: {\n        console.log('Zod error object', currentError);\n      }\n    }\n\n    // Let the user know which function is generating the error.\n    message += ` in ${func}().`;\n\n    // Generates a link to the documentation based on the given function name.\n    // TODO: Check if the link is reachable before appending it to the error\n    // message.\n    const generateDocumentationLink = (func) => {\n      const { funcName, funcClass } = extractFuncNameAndClass(func);\n      const p5BaseUrl = 'https://p5js.org/reference';\n      const url = `${p5BaseUrl}/${funcClass}/${funcName}`;\n\n      return url;\n    };\n\n    if (currentError.code === 'too_big' || currentError.code === 'too_small') {\n      const documentationLink = generateDocumentationLink(func);\n      message += ` For more information, see ${documentationLink}.`;\n    }\n\n    if (isVersionError) {\n      p5._error(this, message);\n    } else {\n      console.log(message);\n    }\n    return message;\n  };\n\n  /**\n   * Runs parameter validation by matching the input parameters to Zod schemas\n   * generated from the parameter data from `docs/parameterData.json`.\n   *\n   * @private\n   * @param {String} func - Name of the function.\n   * @param {Array} args - User input arguments.\n   * @returns {Object} The validation result.\n   * @returns {Boolean} result.success - Whether the validation was successful.\n   * @returns {any} [result.data] - The parsed data if validation was successful.\n   * @returns {String} [result.error] - The validation error message if validation has failed.\n   */\n  fn.validate = function (func, args) {\n    if (p5.disableFriendlyErrors) {\n      return; // skip FES\n    }\n\n    if (!Array.isArray(args)) {\n      args = Array.from(args);\n    }\n\n    // An edge case: even when all arguments are optional and therefore,\n    // theoretically allowed to stay undefined and valid, it is likely that the\n    // user intended to call the function with non-undefined arguments. Skip\n    // regular workflow and return a friendly error message right away.\n    if (Array.isArray(args) && args.length > 0 && args.every(arg => arg === undefined)) {\n      const undefinedErrorMessage = `🌸 p5.js says: All arguments for ${func}() are undefined. There is likely an error in the code.`;\n\n      return {\n        success: false,\n        error: undefinedErrorMessage\n      };\n    }\n\n    let funcSchemas = schemaRegistry.get(func);\n    if (!funcSchemas) {\n      funcSchemas = fn.generateZodSchemasForFunc(func);\n      if (!funcSchemas) return;\n      schemaRegistry.set(func, funcSchemas);\n    }\n\n    try {\n      return {\n        success: true,\n        data: funcSchemas.parse(args)\n      };\n    } catch (error) {\n      const closestSchema = fn.findClosestSchema(funcSchemas, args);\n      const zodError = closestSchema.safeParse(args).error;\n      const errorMessage = fn.friendlyParamError(zodError, func, args);\n\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  lifecycles.presetup = function(){\n    loadP5Constructors();\n\n    const excludes = ['validate'];\n    for(const f in this){\n      if(!excludes.includes(f) && !f.startsWith('_') && typeof this[f] === 'function'){\n        const copy = this[f];\n\n        this[f] = function(...args) {\n          this.validate(f, args);\n          return copy.call(this, ...args);\n        };\n      }\n    }\n  };\n}\n\nif (typeof p5 !== 'undefined') {\n  validateParams(p5, p5.prototype);\n}\n\nexport { validateParams as default };\n"],"mappings":"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ACT,EACD,CACC,oBAAoB,CACpB;IAEH,CAAC;IACDqH,IAAI,EAAE;MACLrH,SAAS,EAAE,CACV,EACC,EACD,CACC,WAAW,CACX;IAEH,CAAC;IACD8Z,GAAG,EAAE;MACJ9Z,SAAS,EAAE,CACV,CACC,cAAc,EACd,SAAS,EACT,SAAS,CACT,EACD,CACC,oBAAoB,CACpB,EACD,CACC,WAAW,EACX,WAAW,EACX,YAAY,CACZ;IAEH,CAAC;IACD+Z,GAAG,EAAE;MACJ/Z,SAAS,EAAE,CACV,CACC,QAAQ,EACR,QAAQ,EACR,QAAQ,CACR,EACD,CACC,oBAAoB,CACpB,EACD,CACC,WAAW,EACX,WAAW,CACX;IAEH,CAAC;IACDga,GAAG,EAAE;MACJha,SAAS,EAAE,CACV,CACC,QAAQ,EACR,SAAS,EACT,SAAS,CACT,EACD,CACC,oBAAoB,CACpB,EACD,CACC,WAAW,EACX,WAAW,EACX,YAAY,CACZ;IAEH,CAAC;IACDia,IAAI,EAAE;MACLja,SAAS,EAAE,CACV,CACC,QAAQ,EACR,QAAQ,EACR,SAAS,CACT,EACD,CACC,UAAU,CACV,EACD,CACC,WAAW,CACX,EACD,EACC,EACD,CACC,WAAW,EACX,QAAQ,EACR,YAAY,CACZ,EACD,CACC,WAAW,EACX,WAAW,EACX,YAAY,CACZ,EACD,CACC,WAAW,EACX,UAAU,EACV,YAAY,CACZ;IAEH,CAAC;IACDka,GAAG,EAAE;MACJla,SAAS,EAAE,CACV,CACC,QAAQ,CACR,EACD,CACC,QAAQ,EACR,QAAQ,EACR,SAAS,CACT,EACD,CACC,UAAU,CACV,EACD,CACC,WAAW,CACX,EACD,EACC,EACD,CACC,WAAW,EACX,QAAQ,EACR,YAAY,CACZ,EACD,CACC,WAAW,EACX,WAAW,EACX,YAAY,CACZ,EACD,CACC,WAAW,EACX,UAAU,EACV,YAAY,CACZ;IAEH,CAAC;IACDmJ,GAAG,EAAE;MACJnJ,SAAS,EAAE,CACV,EACC,EACD,CACC,WAAW,CACX;IAEH,CAAC;IACDma,KAAK,EAAE;MACNna,SAAS,EAAE,CACV,EACC,EACD,CACC,WA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}