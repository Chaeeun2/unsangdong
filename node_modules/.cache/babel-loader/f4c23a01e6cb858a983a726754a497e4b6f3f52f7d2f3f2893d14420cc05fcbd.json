{"ast":null,"code":"import ColorSpace from \"../space.js\";\nimport { multiplyMatrices } from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\nconst b = 1.15;\nconst g = 0.66;\nconst n = 2610 / 2 ** 14;\nconst ninv = 2 ** 14 / 2610;\nconst c1 = 3424 / 2 ** 12;\nconst c2 = 2413 / 2 ** 7;\nconst c3 = 2392 / 2 ** 7;\nconst p = 1.7 * 2523 / 2 ** 5;\nconst pinv = 2 ** 5 / (1.7 * 2523);\nconst d = -0.56;\nconst d0 = 1.6295499532821566E-11;\nconst XYZtoCone_M = [[0.41478972, 0.579999, 0.0146480], [-0.2015100, 1.120649, 0.0531008], [-0.0166008, 0.264800, 0.6684799]];\n// XYZtoCone_M inverted\nconst ConetoXYZ_M = [[1.9242264357876067, -1.0047923125953657, 0.037651404030618], [0.35031676209499907, 0.7264811939316552, -0.06538442294808501], [-0.09098281098284752, -0.3127282905230739, 1.5227665613052603]];\nconst ConetoIab_M = [[0.5, 0.5, 0], [3.524000, -4.066708, 0.542708], [0.199076, 1.096799, -1.295875]];\n// ConetoIab_M inverted\nconst IabtoCone_M = [[1, 0.1386050432715393, 0.05804731615611886], [0.9999999999999999, -0.1386050432715393, -0.05804731615611886], [0.9999999999999998, -0.09601924202631895, -0.8118918960560388]];\nexport default new ColorSpace({\n  id: \"jzazbz\",\n  name: \"Jzazbz\",\n  coords: {\n    jz: {\n      refRange: [0, 1],\n      name: \"Jz\"\n    },\n    az: {\n      refRange: [-0.5, 0.5]\n    },\n    bz: {\n      refRange: [-0.5, 0.5]\n    }\n  },\n  base: XYZ_Abs_D65,\n  fromBase(XYZ) {\n    // First make XYZ absolute, not relative to media white\n    // Maximum luminance in PQ is 10,000 cd/m²\n    // Relative XYZ has Y=1 for media white\n    // BT.2048 says media white Y=203 at PQ 58\n\n    let [Xa, Ya, Za] = XYZ;\n\n    // modify X and Y\n    let Xm = b * Xa - (b - 1) * Za;\n    let Ym = g * Ya - (g - 1) * Xa;\n\n    // move to LMS cone domain\n    let LMS = multiplyMatrices(XYZtoCone_M, [Xm, Ym, Za]);\n\n    // PQ-encode LMS\n    let PQLMS = LMS.map(function (val) {\n      let num = c1 + c2 * (val / 10000) ** n;\n      let denom = 1 + c3 * (val / 10000) ** n;\n      return (num / denom) ** p;\n    });\n\n    // almost there, calculate Iz az bz\n    let [Iz, az, bz] = multiplyMatrices(ConetoIab_M, PQLMS);\n    // console.log({Iz, az, bz});\n\n    let Jz = (1 + d) * Iz / (1 + d * Iz) - d0;\n    return [Jz, az, bz];\n  },\n  toBase(Jzazbz) {\n    let [Jz, az, bz] = Jzazbz;\n    let Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\n\n    // bring into LMS cone domain\n    let PQLMS = multiplyMatrices(IabtoCone_M, [Iz, az, bz]);\n\n    // convert from PQ-coded to linear-light\n    let LMS = PQLMS.map(function (val) {\n      let num = c1 - val ** pinv;\n      let denom = c3 * val ** pinv - c2;\n      let x = 10000 * (num / denom) ** ninv;\n      return x; // luminance relative to diffuse white, [0, 70 or so].\n    });\n\n    // modified abs XYZ\n    let [Xm, Ym, Za] = multiplyMatrices(ConetoXYZ_M, LMS);\n\n    // restore standard D50 relative XYZ, relative to media white\n    let Xa = (Xm + (b - 1) * Za) / b;\n    let Ya = (Ym + (g - 1) * Xa) / g;\n    return [Xa, Ya, Za];\n  },\n  formats: {\n    // https://drafts.csswg.org/css-color-hdr/#Jzazbz\n    \"color\": {\n      coords: [\"<number> | <percentage>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"]\n    }\n  }\n});","map":{"version":3,"names":["ColorSpace","multiplyMatrices","XYZ_Abs_D65","b","g","n","ninv","c1","c2","c3","p","pinv","d","d0","XYZtoCone_M","ConetoXYZ_M","ConetoIab_M","IabtoCone_M","id","name","coords","jz","refRange","az","bz","base","fromBase","XYZ","Xa","Ya","Za","Xm","Ym","LMS","PQLMS","map","val","num","denom","Iz","Jz","toBase","Jzazbz","x","formats"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/spaces/jzazbz.js"],"sourcesContent":["import ColorSpace from \"../space.js\";\nimport {multiplyMatrices} from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\n\nconst b = 1.15;\nconst g = 0.66;\nconst n = 2610 / (2 ** 14);\nconst ninv = (2 ** 14) / 2610;\nconst c1 = 3424 / (2 ** 12);\nconst c2 = 2413 / (2 ** 7);\nconst c3 = 2392 / (2 ** 7);\nconst p = 1.7 * 2523 / (2 ** 5);\nconst pinv = (2 ** 5) / (1.7 * 2523);\nconst d = -0.56;\nconst d0 = 1.6295499532821566E-11;\n\nconst XYZtoCone_M = [\n\t[  0.41478972, 0.579999,  0.0146480 ],\n\t[ -0.2015100,  1.120649,  0.0531008 ],\n\t[ -0.0166008,  0.264800,  0.6684799 ],\n];\n// XYZtoCone_M inverted\nconst ConetoXYZ_M = [\n\t[  1.9242264357876067,  -1.0047923125953657,  0.037651404030618   ],\n\t[  0.35031676209499907,  0.7264811939316552, -0.06538442294808501 ],\n\t[ -0.09098281098284752, -0.3127282905230739,  1.5227665613052603  ],\n];\nconst ConetoIab_M = [\n\t[  0.5,       0.5,       0        ],\n\t[  3.524000, -4.066708,  0.542708 ],\n\t[  0.199076,  1.096799, -1.295875 ],\n];\n// ConetoIab_M inverted\nconst IabtoCone_M = [\n\t[ 1,                   0.1386050432715393,   0.05804731615611886 ],\n\t[ 0.9999999999999999, -0.1386050432715393,  -0.05804731615611886 ],\n\t[ 0.9999999999999998, -0.09601924202631895, -0.8118918960560388  ],\n];\n\nexport default new ColorSpace({\n\tid: \"jzazbz\",\n\tname: \"Jzazbz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\taz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t},\n\t\tbz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t},\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// First make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\t// BT.2048 says media white Y=203 at PQ 58\n\n\t\tlet [ Xa, Ya, Za ] = XYZ;\n\n\t\t// modify X and Y\n\t\tlet Xm = (b * Xa) - ((b - 1) * Za);\n\t\tlet Ym = (g * Ya) - ((g - 1) * Xa);\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoCone_M, [ Xm, Ym, Za ]);\n\n\t\t// PQ-encode LMS\n\t\tlet PQLMS = LMS.map (function (val) {\n\t\t\tlet num = c1 + (c2 * ((val / 10000) ** n));\n\t\t\tlet denom = 1 + (c3 * ((val / 10000) ** n));\n\n\t\t\treturn (num / denom)  ** p;\n\t\t});\n\n\t\t// almost there, calculate Iz az bz\n\t\tlet [ Iz, az, bz] = multiplyMatrices(ConetoIab_M, PQLMS);\n\t\t// console.log({Iz, az, bz});\n\n\t\tlet Jz = ((1 + d) * Iz) / (1 + (d * Iz)) - d0;\n\t\treturn [Jz, az, bz];\n\t},\n\ttoBase (Jzazbz) {\n\t\tlet [Jz, az, bz] = Jzazbz;\n\t\tlet Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\n\n\t\t// bring into LMS cone domain\n\t\tlet PQLMS = multiplyMatrices(IabtoCone_M, [ Iz, az, bz ]);\n\n\t\t// convert from PQ-coded to linear-light\n\t\tlet LMS = PQLMS.map(function (val) {\n\t\t\tlet num = (c1 - (val ** pinv));\n\t\t\tlet denom = (c3 * (val ** pinv)) - c2;\n\t\t\tlet x = 10000 * ((num / denom) ** ninv);\n\n\t\t\treturn (x); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\n\t\t// modified abs XYZ\n\t\tlet [ Xm, Ym, Za ] = multiplyMatrices(ConetoXYZ_M, LMS);\n\n\t\t// restore standard D50 relative XYZ, relative to media white\n\t\tlet Xa = (Xm + ((b - 1) * Za)) / b;\n\t\tlet Ya = (Ym + ((g - 1) * Xa)) / g;\n\t\treturn [ Xa, Ya, Za ];\n\t},\n\n\tformats: {\n\t\t// https://drafts.csswg.org/css-color-hdr/#Jzazbz\n\t\t\"color\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"],\n\t\t},\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}