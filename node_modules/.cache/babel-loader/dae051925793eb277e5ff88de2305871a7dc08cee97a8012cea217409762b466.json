{"ast":null,"code":"import { P as P2D, a0 as WEBGL, u as BLEND, a2 as _DEFAULT_FILL, a3 as _DEFAULT_STROKE, j as ROUND, a4 as REMOVE, a5 as SUBTRACT, a6 as DARKEST, a7 as LIGHTEST, a8 as DIFFERENCE, a9 as MULTIPLY, aa as EXCLUSION, ab as SCREEN, ac as REPLACE, ad as OVERLAY, ae as HARD_LIGHT, af as SOFT_LIGHT, ag as DODGE, ah as BURN, ai as ADD, aj as PIE, ak as CHORD, f as TWO_PI, S as SQUARE, k as PROJECT, B as BEVEL, l as MITER, O as OPEN, v as constants, al as VERSION } from './constants-BRcElHU3.js';\nimport transform from './core/transform.js';\nimport structure from './core/structure.js';\nimport environment from './core/environment.js';\nimport { G as Graphics, y as rendering, z as graphics } from './rendering-CvUVN-Vb.js';\nimport { R as Renderer, I as Image, r as renderer } from './p5.Renderer-R23xoC7s.js';\nimport { Element } from './dom/p5.Element.js';\nimport { MediaElement } from './dom/p5.MediaElement.js';\nimport { b as RGBHDR } from './creating_reading-Cr8L2Jnm.js';\nimport FilterRenderer2D from './image/filterRenderer2D.js';\nimport './math/p5.Matrix.js';\nimport { PrimitiveToPath2DConverter } from './shape/custom_shapes.js';\nimport { Matrix } from './math/Matrices/Matrix.js';\nconst styleEmpty = 'rgba(0,0,0,0)';\n// const alphaThreshold = 0.00125; // minimum visible\n\nclass Renderer2D extends Renderer {\n  constructor(pInst, w, h, isMainCanvas, elt, attributes = {}) {\n    super(pInst, w, h, isMainCanvas);\n    this.canvas = this.elt = elt || document.createElement('canvas');\n    if (isMainCanvas) {\n      // for pixel method sharing with pimage\n      this._pInst._curElement = this;\n      this._pInst.canvas = this.canvas;\n    } else {\n      // hide if offscreen buffer by default\n      this.canvas.style.display = 'none';\n    }\n    this.elt.id = 'defaultCanvas0';\n    this.elt.classList.add('p5Canvas');\n\n    // Extend renderer with methods of p5.Element with getters\n    for (const p of Object.getOwnPropertyNames(Element.prototype)) {\n      if (p !== 'constructor' && p[0] !== '_') {\n        Object.defineProperty(this, p, {\n          get() {\n            return this.wrappedElt[p];\n          }\n        });\n      }\n    }\n\n    // Set canvas size\n    this.elt.width = w * this._pixelDensity;\n    this.elt.height = h * this._pixelDensity;\n    this.elt.style.width = `${w}px`;\n    this.elt.style.height = `${h}px`;\n\n    // Attach canvas element to DOM\n    if (this._pInst._userNode) {\n      // user input node case\n      this._pInst._userNode.appendChild(this.elt);\n    } else {\n      //create main element\n      if (document.getElementsByTagName('main').length === 0) {\n        let m = document.createElement('main');\n        document.body.appendChild(m);\n      }\n      //append canvas to main\n      document.getElementsByTagName('main')[0].appendChild(this.elt);\n    }\n\n    // Get and store drawing context\n    this.drawingContext = this.canvas.getContext('2d', attributes);\n    if (attributes.colorSpace === 'display-p3') {\n      this.states.colorMode = RGBHDR;\n    }\n    this.scale(this._pixelDensity, this._pixelDensity);\n    if (!this.filterRenderer) {\n      this.filterRenderer = new FilterRenderer2D(this);\n    }\n    // Set and return p5.Element\n    this.wrappedElt = new Element(this.elt, this._pInst);\n    this.clipPath = null;\n  }\n  remove() {\n    this.wrappedElt.remove();\n    this.wrappedElt = null;\n    this.canvas = null;\n    this.elt = null;\n  }\n  getFilterGraphicsLayer() {\n    // create hidden webgl renderer if it doesn't exist\n    if (!this.filterGraphicsLayer) {\n      const pInst = this._pInst;\n\n      // create secondary layer\n      this.filterGraphicsLayer = new Graphics(this.width, this.height, WEBGL, pInst);\n    }\n    if (this.filterGraphicsLayer.width !== this.width || this.filterGraphicsLayer.height !== this.height) {\n      // Resize the graphics layer\n      this.filterGraphicsLayer.resizeCanvas(this.width, this.height);\n    }\n    if (this.filterGraphicsLayer.pixelDensity() !== this._pInst.pixelDensity()) {\n      this.filterGraphicsLayer.pixelDensity(this._pInst.pixelDensity());\n    }\n    return this.filterGraphicsLayer;\n  }\n  _applyDefaults() {\n    this.states.setValue('_cachedFillStyle', undefined);\n    this.states.setValue('_cachedStrokeStyle', undefined);\n    this._cachedBlendMode = BLEND;\n    this._setFill(_DEFAULT_FILL);\n    this._setStroke(_DEFAULT_STROKE);\n    this.drawingContext.lineCap = ROUND;\n    this.drawingContext.font = 'normal 12px sans-serif';\n  }\n  resize(w, h) {\n    super.resize(w, h);\n\n    // save canvas properties\n    const props = {};\n    for (const key in this.drawingContext) {\n      const val = this.drawingContext[key];\n      if (typeof val !== 'object' && typeof val !== 'function') {\n        props[key] = val;\n      }\n    }\n    this.canvas.width = w * this._pixelDensity;\n    this.canvas.height = h * this._pixelDensity;\n    this.canvas.style.width = `${w}px`;\n    this.canvas.style.height = `${h}px`;\n    this.drawingContext.scale(this._pixelDensity, this._pixelDensity);\n\n    // reset canvas properties\n    for (const savedKey in props) {\n      try {\n        this.drawingContext[savedKey] = props[savedKey];\n      } catch (err) {\n        // ignore read-only property errors\n      }\n    }\n  }\n\n  //////////////////////////////////////////////\n  // COLOR | Setting\n  //////////////////////////////////////////////\n\n  background(...args) {\n    this.push();\n    this.resetMatrix();\n    if (args[0] instanceof Image) {\n      if (args[1] >= 0) {\n        // set transparency of background\n        const img = args[0];\n        this.drawingContext.globalAlpha = args[1] / 255;\n        this._pInst.image(img, 0, 0, this.width, this.height);\n      } else {\n        this._pInst.image(args[0], 0, 0, this.width, this.height);\n      }\n    } else {\n      // create background rect\n      const color = this._pInst.color(...args);\n\n      //accessible Outputs\n      if (this._pInst._addAccsOutput()) {\n        this._pInst._accsBackground(color._getRGBA([255, 255, 255, 255]));\n      }\n      const newFill = color.toString();\n      this._setFill(newFill);\n      if (this._isErasing) {\n        this.blendMode(this._cachedBlendMode);\n      }\n      this.drawingContext.fillRect(0, 0, this.width, this.height);\n      if (this._isErasing) {\n        this._pInst.erase();\n      }\n    }\n    this.pop();\n  }\n  clear() {\n    this.drawingContext.save();\n    this.resetMatrix();\n    this.drawingContext.clearRect(0, 0, this.width, this.height);\n    this.drawingContext.restore();\n  }\n  fill(...args) {\n    super.fill(...args);\n    const color = this.states.fillColor;\n    this._setFill(color.toString());\n\n    //accessible Outputs\n    if (this._pInst._addAccsOutput()) {\n      this._pInst._accsCanvasColors('fill', color._getRGBA([255, 255, 255, 255]));\n    }\n  }\n  stroke(...args) {\n    super.stroke(...args);\n    const color = this.states.strokeColor;\n    this._setStroke(color.toString());\n\n    //accessible Outputs\n    if (this._pInst._addAccsOutput()) {\n      this._pInst._accsCanvasColors('stroke', color._getRGBA([255, 255, 255, 255]));\n    }\n  }\n  erase(opacityFill, opacityStroke) {\n    if (!this._isErasing) {\n      // cache the fill style\n      this.states.setValue('_cachedFillStyle', this.drawingContext.fillStyle);\n      const newFill = this._pInst.color(255, opacityFill).toString();\n      this.drawingContext.fillStyle = newFill;\n\n      // cache the stroke style\n      this.states.setValue('_cachedStrokeStyle', this.drawingContext.strokeStyle);\n      const newStroke = this._pInst.color(255, opacityStroke).toString();\n      this.drawingContext.strokeStyle = newStroke;\n\n      // cache blendMode\n      const tempBlendMode = this._cachedBlendMode;\n      this.blendMode(REMOVE);\n      this._cachedBlendMode = tempBlendMode;\n      this._isErasing = true;\n    }\n  }\n  noErase() {\n    if (this._isErasing) {\n      this.drawingContext.fillStyle = this.states._cachedFillStyle;\n      this.drawingContext.strokeStyle = this.states._cachedStrokeStyle;\n      this.blendMode(this._cachedBlendMode);\n      this._isErasing = false;\n    }\n  }\n  drawShape(shape) {\n    const visitor = new PrimitiveToPath2DConverter({\n      strokeWeight: this.states.strokeWeight\n    });\n    shape.accept(visitor);\n    if (this._clipping) {\n      this.clipPath.addPath(visitor.path);\n      this.clipPath.closePath();\n    } else {\n      if (this.states.fillColor) {\n        this.drawingContext.fill(visitor.path);\n      }\n      if (this.states.strokeColor) {\n        this.drawingContext.stroke(visitor.path);\n      }\n    }\n  }\n  beginClip(options = {}) {\n    super.beginClip(options);\n\n    // cache the fill style\n    this.states.setValue('_cachedFillStyle', this.drawingContext.fillStyle);\n    const newFill = this._pInst.color(255, 0).toString();\n    this.drawingContext.fillStyle = newFill;\n\n    // cache the stroke style\n    this.states.setValue('_cachedStrokeStyle', this.drawingContext.strokeStyle);\n    const newStroke = this._pInst.color(255, 0).toString();\n    this.drawingContext.strokeStyle = newStroke;\n\n    // cache blendMode\n    const tempBlendMode = this._cachedBlendMode;\n    this.blendMode(BLEND);\n    this._cachedBlendMode = tempBlendMode;\n\n    // Since everything must be in one path, create a new single Path2D to chain all shapes onto.\n    // Start a new path. Everything from here on out should become part of this\n    // one path so that we can clip to the whole thing.\n    this.clipPath = new Path2D();\n    if (this._clipInvert) {\n      // Slight hack: draw a big rectangle over everything with reverse winding\n      // order. This is hopefully large enough to cover most things.\n      this.clipPath.moveTo(-2 * this.width, -2 * this.height);\n      this.clipPath.lineTo(-2 * this.width, 2 * this.height);\n      this.clipPath.lineTo(2 * this.width, 2 * this.height);\n      this.clipPath.lineTo(2 * this.width, -2 * this.height);\n      this.clipPath.closePath();\n    }\n  }\n  endClip() {\n    this.drawingContext.clip(this.clipPath);\n    this.clipPath = null;\n    super.endClip();\n    this.drawingContext.fillStyle = this.states._cachedFillStyle;\n    this.drawingContext.strokeStyle = this.states._cachedStrokeStyle;\n    this.blendMode(this._cachedBlendMode);\n  }\n\n  //////////////////////////////////////////////\n  // IMAGE | Loading & Displaying\n  //////////////////////////////////////////////\n\n  image(img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n    let cnv;\n    if (img.gifProperties) {\n      img._animateGif(this._pInst);\n    }\n    try {\n      if (img instanceof MediaElement) {\n        img._ensureCanvas();\n      }\n      if (this.states.tint && img.canvas) {\n        cnv = this._getTintedImageCanvas(img);\n      }\n      if (!cnv) {\n        cnv = img.canvas || img.elt;\n      }\n      let s = 1;\n      if (img.width && img.width > 0) {\n        s = cnv.width / img.width;\n      }\n      if (this._isErasing) {\n        this.blendMode(this._cachedBlendMode);\n      }\n      this.drawingContext.drawImage(cnv, s * sx, s * sy, s * sWidth, s * sHeight, dx, dy, dWidth, dHeight);\n      if (this._isErasing) {\n        this._pInst.erase();\n      }\n    } catch (e) {\n      if (e.name !== 'NS_ERROR_NOT_AVAILABLE') {\n        throw e;\n      }\n    }\n  }\n  _getTintedImageCanvas(img) {\n    if (!img.canvas) {\n      return img;\n    }\n    if (!img.tintCanvas) {\n      // Once an image has been tinted, keep its tint canvas\n      // around so we don't need to re-incur the cost of\n      // creating a new one for each tint\n      img.tintCanvas = document.createElement('canvas');\n    }\n\n    // Keep the size of the tint canvas up-to-date\n    if (img.tintCanvas.width !== img.canvas.width) {\n      img.tintCanvas.width = img.canvas.width;\n    }\n    if (img.tintCanvas.height !== img.canvas.height) {\n      img.tintCanvas.height = img.canvas.height;\n    }\n\n    // Goal: multiply the r,g,b,a values of the source by\n    // the r,g,b,a values of the tint color\n    const ctx = img.tintCanvas.getContext('2d');\n    ctx.save();\n    ctx.clearRect(0, 0, img.canvas.width, img.canvas.height);\n    if (this.states.tint[0] < 255 || this.states.tint[1] < 255 || this.states.tint[2] < 255) {\n      // Color tint: we need to use the multiply blend mode to change the colors.\n      // However, the canvas implementation of this destroys the alpha channel of\n      // the image. To accommodate, we first get a version of the image with full\n      // opacity everywhere, tint using multiply, and then use the destination-in\n      // blend mode to restore the alpha channel again.\n\n      // Start with the original image\n      ctx.drawImage(img.canvas, 0, 0);\n\n      // This blend mode makes everything opaque but forces the luma to match\n      // the original image again\n      ctx.globalCompositeOperation = 'luminosity';\n      ctx.drawImage(img.canvas, 0, 0);\n\n      // This blend mode forces the hue and chroma to match the original image.\n      // After this we should have the original again, but with full opacity.\n      ctx.globalCompositeOperation = 'color';\n      ctx.drawImage(img.canvas, 0, 0);\n\n      // Apply color tint\n      ctx.globalCompositeOperation = 'multiply';\n      ctx.fillStyle = `rgb(${this.states.tint.slice(0, 3).join(', ')})`;\n      ctx.fillRect(0, 0, img.canvas.width, img.canvas.height);\n\n      // Replace the alpha channel with the original alpha * the alpha tint\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.globalAlpha = this.states.tint[3] / 255;\n      ctx.drawImage(img.canvas, 0, 0);\n    } else {\n      // If we only need to change the alpha, we can skip all the extra work!\n      ctx.globalAlpha = this.states.tint[3] / 255;\n      ctx.drawImage(img.canvas, 0, 0);\n    }\n    ctx.restore();\n    return img.tintCanvas;\n  }\n\n  //////////////////////////////////////////////\n  // IMAGE | Pixels\n  //////////////////////////////////////////////\n\n  blendMode(mode) {\n    if (mode === SUBTRACT) {\n      console.warn('blendMode(SUBTRACT) only works in WEBGL mode.');\n    } else if (mode === BLEND || mode === REMOVE || mode === DARKEST || mode === LIGHTEST || mode === DIFFERENCE || mode === MULTIPLY || mode === EXCLUSION || mode === SCREEN || mode === REPLACE || mode === OVERLAY || mode === HARD_LIGHT || mode === SOFT_LIGHT || mode === DODGE || mode === BURN || mode === ADD) {\n      this._cachedBlendMode = mode;\n      this.drawingContext.globalCompositeOperation = mode;\n    } else {\n      throw new Error(`Mode ${mode} not recognized.`);\n    }\n  }\n  blend(...args) {\n    const currBlend = this.drawingContext.globalCompositeOperation;\n    const blendMode = args[args.length - 1];\n    const copyArgs = Array.prototype.slice.call(args, 0, args.length - 1);\n    this.drawingContext.globalCompositeOperation = blendMode;\n    p5.prototype.copy.apply(this, copyArgs);\n    this.drawingContext.globalCompositeOperation = currBlend;\n  }\n\n  // p5.Renderer2D.prototype.get = p5.Renderer.prototype.get;\n  // .get() is not overridden\n\n  // x,y are canvas-relative (pre-scaled by _pixelDensity)\n  _getPixel(x, y) {\n    let imageData, index;\n    imageData = this.drawingContext.getImageData(x, y, 1, 1).data;\n    index = 0;\n    return [imageData[index + 0], imageData[index + 1], imageData[index + 2], imageData[index + 3]];\n  }\n  loadPixels() {\n    const pd = this._pixelDensity;\n    const w = this.width * pd;\n    const h = this.height * pd;\n    const imageData = this.drawingContext.getImageData(0, 0, w, h);\n    // @todo this should actually set pixels per object, so diff buffers can\n    // have diff pixel arrays.\n    this.imageData = imageData;\n    this.pixels = imageData.data;\n  }\n  set(x, y, imgOrCol) {\n    // round down to get integer numbers\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (imgOrCol instanceof Image) {\n      this.drawingContext.save();\n      this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n      this.drawingContext.scale(this._pixelDensity, this._pixelDensity);\n      this.drawingContext.clearRect(x, y, imgOrCol.width, imgOrCol.height);\n      this.drawingContext.drawImage(imgOrCol.canvas, x, y);\n      this.drawingContext.restore();\n    } else {\n      let r = 0,\n        g = 0,\n        b = 0,\n        a = 0;\n      let idx = 4 * (y * this._pixelDensity * (this.width * this._pixelDensity) + x * this._pixelDensity);\n      if (!this.imageData) {\n        this.loadPixels();\n      }\n      if (typeof imgOrCol === 'number') {\n        if (idx < this.pixels.length) {\n          r = imgOrCol;\n          g = imgOrCol;\n          b = imgOrCol;\n          a = 255;\n          //this.updatePixels.call(this);\n        }\n      } else if (Array.isArray(imgOrCol)) {\n        if (imgOrCol.length < 4) {\n          throw new Error('pixel array must be of the form [R, G, B, A]');\n        }\n        if (idx < this.pixels.length) {\n          r = imgOrCol[0];\n          g = imgOrCol[1];\n          b = imgOrCol[2];\n          a = imgOrCol[3];\n          //this.updatePixels.call(this);\n        }\n      } else if (imgOrCol instanceof p5.Color) {\n        if (idx < this.pixels.length) {\n          [r, g, b, a] = imgOrCol._getRGBA([255, 255, 255, 255]);\n          //this.updatePixels.call(this);\n        }\n      }\n      // loop over pixelDensity * pixelDensity\n      for (let i = 0; i < this._pixelDensity; i++) {\n        for (let j = 0; j < this._pixelDensity; j++) {\n          // loop over\n          idx = 4 * ((y * this._pixelDensity + j) * this.width * this._pixelDensity + (x * this._pixelDensity + i));\n          this.pixels[idx] = r;\n          this.pixels[idx + 1] = g;\n          this.pixels[idx + 2] = b;\n          this.pixels[idx + 3] = a;\n        }\n      }\n    }\n  }\n  updatePixels(x, y, w, h) {\n    const pd = this._pixelDensity;\n    if (x === undefined && y === undefined && w === undefined && h === undefined) {\n      x = 0;\n      y = 0;\n      w = this.width;\n      h = this.height;\n    }\n    x *= pd;\n    y *= pd;\n    w *= pd;\n    h *= pd;\n    if (this.gifProperties) {\n      this.gifProperties.frames[this.gifProperties.displayIndex].image = this.imageData;\n    }\n    this.drawingContext.putImageData(this.imageData, 0, 0, x, y, w, h);\n  }\n\n  //////////////////////////////////////////////\n  // SHAPE | 2D Primitives\n  //////////////////////////////////////////////\n\n  /*\n   * This function requires that:\n   *\n   *   0 <= start < TWO_PI\n   *\n   *   start <= stop < start + TWO_PI\n   */\n  arc(x, y, w, h, start, stop, mode) {\n    const ctx = this.clipPa || this.drawingContext;\n    const centerX = x + w / 2,\n      centerY = y + h / 2,\n      radiusX = w / 2,\n      radiusY = h / 2;\n\n    // Determines whether to add a line to the center, which should be done\n    // when the mode is PIE or default; as well as when the start and end\n    // angles do not form a full circle.\n    const createPieSlice = !(mode === CHORD || mode === OPEN || (stop - start) % TWO_PI === 0);\n\n    // Fill curves\n    if (this.states.fillColor) {\n      if (!this._clipping) ctx.beginPath();\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, start, stop);\n      if (createPieSlice) ctx.lineTo(centerX, centerY);\n      ctx.closePath();\n      if (!this._clipping) ctx.fill();\n    }\n\n    // Stroke curves\n    if (this.states.strokeColor) {\n      if (!this._clipping) ctx.beginPath();\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, start, stop);\n      if (mode === PIE && createPieSlice) {\n        // In PIE mode, stroke is added to the center and back to path,\n        // unless the pie forms a complete ellipse (see: createPieSlice)\n        ctx.lineTo(centerX, centerY);\n      }\n      if (mode === PIE || mode === CHORD) {\n        // Stroke connects back to path begin for both PIE and CHORD\n        ctx.closePath();\n      }\n      if (!this._clipping) ctx.stroke();\n    }\n    return this;\n  }\n  ellipse(args) {\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    const x = parseFloat(args[0]),\n      y = parseFloat(args[1]),\n      w = parseFloat(args[2]),\n      h = parseFloat(args[3]);\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    const centerX = x + w / 2,\n      centerY = y + h / 2,\n      radiusX = w / 2,\n      radiusY = h / 2;\n    if (!this._clipping) ctx.beginPath();\n    ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n    ctx.closePath();\n    if (!this._clipping && doFill) {\n      ctx.fill();\n    }\n    if (!this._clipping && doStroke) {\n      ctx.stroke();\n    }\n  }\n  line(x1, y1, x2, y2) {\n    const ctx = this.clipPath || this.drawingContext;\n    if (!this.states.strokeColor) {\n      return this;\n    } else if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    return this;\n  }\n  point(x, y) {\n    const ctx = this.clipPath || this.drawingContext;\n    if (!this.states.strokeColor) {\n      return this;\n    } else if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n    const s = this._getStroke();\n    const f = this._getFill();\n    if (!this._clipping) {\n      // swapping fill color to stroke and back after for correct point rendering\n      this._setFill(s);\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.arc(x, y, ctx.lineWidth / 2, 0, TWO_PI, false);\n    if (!this._clipping) {\n      ctx.fill();\n      this._setFill(f);\n    }\n  }\n  quad(x1, y1, x2, y2, x3, y3, x4, y4) {\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x3, y3);\n    ctx.lineTo(x4, y4);\n    ctx.closePath();\n    if (!this._clipping && doFill) {\n      ctx.fill();\n    }\n    if (!this._clipping && doStroke) {\n      ctx.stroke();\n    }\n    return this;\n  }\n  rect(args) {\n    const x = args[0];\n    const y = args[1];\n    const w = args[2];\n    const h = args[3];\n    let tl = args[4];\n    let tr = args[5];\n    let br = args[6];\n    let bl = args[7];\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    if (!this._clipping) ctx.beginPath();\n    if (typeof tl === 'undefined') {\n      // No rounded corners\n      ctx.rect(x, y, w, h);\n    } else {\n      // At least one rounded corner\n      // Set defaults when not specified\n      if (typeof tr === 'undefined') {\n        tr = tl;\n      }\n      if (typeof br === 'undefined') {\n        br = tr;\n      }\n      if (typeof bl === 'undefined') {\n        bl = br;\n      }\n\n      // corner rounding must always be positive\n      const absW = Math.abs(w);\n      const absH = Math.abs(h);\n      const hw = absW / 2;\n      const hh = absH / 2;\n\n      // Clip radii\n      if (absW < 2 * tl) {\n        tl = hw;\n      }\n      if (absH < 2 * tl) {\n        tl = hh;\n      }\n      if (absW < 2 * tr) {\n        tr = hw;\n      }\n      if (absH < 2 * tr) {\n        tr = hh;\n      }\n      if (absW < 2 * br) {\n        br = hw;\n      }\n      if (absH < 2 * br) {\n        br = hh;\n      }\n      if (absW < 2 * bl) {\n        bl = hw;\n      }\n      if (absH < 2 * bl) {\n        bl = hh;\n      }\n      ctx.roundRect(x, y, w, h, [tl, tr, br, bl]);\n    }\n    if (!this._clipping && this.states.fillColor) {\n      ctx.fill();\n    }\n    if (!this._clipping && this.states.strokeColor) {\n      ctx.stroke();\n    }\n    return this;\n  }\n  triangle(args) {\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    const x1 = args[0],\n      y1 = args[1];\n    const x2 = args[2],\n      y2 = args[3];\n    const x3 = args[4],\n      y3 = args[5];\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x3, y3);\n    ctx.closePath();\n    if (!this._clipping && doFill) {\n      ctx.fill();\n    }\n    if (!this._clipping && doStroke) {\n      ctx.stroke();\n    }\n  }\n\n  //////////////////////////////////////////////\n  // SHAPE | Attributes\n  //////////////////////////////////////////////\n\n  strokeCap(cap) {\n    if (cap === ROUND || cap === SQUARE || cap === PROJECT) {\n      this.drawingContext.lineCap = cap;\n    }\n    return this;\n  }\n  strokeJoin(join) {\n    if (join === ROUND || join === BEVEL || join === MITER) {\n      this.drawingContext.lineJoin = join;\n    }\n    return this;\n  }\n  strokeWeight(w) {\n    super.strokeWeight(w);\n    if (typeof w === 'undefined' || w === 0) {\n      // hack because lineWidth 0 doesn't work\n      this.drawingContext.lineWidth = 0.0001;\n    } else {\n      this.drawingContext.lineWidth = w;\n    }\n    return this;\n  }\n  _getFill() {\n    if (!this.states._cachedFillStyle) {\n      this.states.setValue('_cachedFillStyle', this.drawingContext.fillStyle);\n    }\n    return this.states._cachedFillStyle;\n  }\n  _setFill(fillStyle) {\n    if (fillStyle !== this.states._cachedFillStyle) {\n      this.drawingContext.fillStyle = fillStyle;\n      this.states.setValue('_cachedFillStyle', fillStyle);\n    }\n  }\n  _getStroke() {\n    if (!this.states._cachedStrokeStyle) {\n      this.states.setValue('_cachedStrokeStyle', this.drawingContext.strokeStyle);\n    }\n    return this.states._cachedStrokeStyle;\n  }\n  _setStroke(strokeStyle) {\n    if (strokeStyle !== this.states._cachedStrokeStyle) {\n      this.drawingContext.strokeStyle = strokeStyle;\n      this.states.setValue('_cachedStrokeStyle', strokeStyle);\n    }\n  }\n\n  //////////////////////////////////////////////\n  // TRANSFORM\n  //////////////////////////////////////////////\n\n  applyMatrix(a, b, c, d, e, f) {\n    this.drawingContext.transform(a, b, c, d, e, f);\n  }\n  getWorldToScreenMatrix() {\n    let domMatrix = new DOMMatrix().scale(1 / this._pixelDensity).multiply(this.drawingContext.getTransform());\n    return new Matrix(domMatrix.toFloat32Array());\n  }\n  resetMatrix() {\n    this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n    this.drawingContext.scale(this._pixelDensity, this._pixelDensity);\n    return this;\n  }\n  rotate(rad) {\n    this.drawingContext.rotate(rad);\n  }\n  scale(x, y) {\n    this.drawingContext.scale(x, y);\n    return this;\n  }\n  translate(x, y) {\n    // support passing a vector as the 1st parameter\n    if (x instanceof p5.Vector) {\n      y = x.y;\n      x = x.x;\n    }\n    this.drawingContext.translate(x, y);\n    return this;\n  }\n\n  //////////////////////////////////////////////\n  // TYPOGRAPHY (see src/type/textCore.js)\n  //////////////////////////////////////////////\n\n  //////////////////////////////////////////////\n  // STRUCTURE\n  //////////////////////////////////////////////\n\n  // a push() operation is in progress.\n  // the renderer should return a 'style' object that it wishes to\n  // store on the push stack.\n  // derived renderers should call the base class' push() method\n  // to fetch the base style object.\n  push() {\n    this.drawingContext.save();\n\n    // get the base renderer style\n    return super.push();\n  }\n\n  // a pop() operation is in progress\n  // the renderer is passed the 'style' object that it returned\n  // from its push() method.\n  // derived renderers should pass this object to their base\n  // class' pop method\n  pop(style) {\n    this.drawingContext.restore();\n    super.pop(style);\n  }\n}\nfunction renderer2D(p5, fn) {\n  /**\n   * p5.Renderer2D\n   * The 2D graphics canvas renderer class.\n   * extends p5.Renderer\n   * @private\n   */\n  p5.Renderer2D = Renderer2D;\n  p5.renderers[P2D] = Renderer2D;\n  p5.renderers['p2d-hdr'] = new Proxy(Renderer2D, {\n    construct(target, [pInst, w, h, isMainCanvas, elt]) {\n      return new target(pInst, w, h, isMainCanvas, elt, {\n        colorSpace: \"display-p3\"\n      });\n    }\n  });\n}\n\n/**\n * @module Structure\n * @submodule Structure\n * @for p5\n * @requires constants\n */\n\n/**\n * This is the p5 instance constructor.\n *\n * A p5 instance holds all the properties and methods related to\n * a p5 sketch.  It expects an incoming sketch closure and it can also\n * take an optional node parameter for attaching the generated p5 canvas\n * to a node.  The sketch closure takes the newly created p5 instance as\n * its sole argument and may optionally set an asynchronous function\n * using `async/await`, along with the standard <a href=\"#/p5/setup\">setup()</a>,\n *  and/or <a href=\"#/p5/setup\">setup()</a>, and/or <a href=\"#/p5/draw\">draw()</a>\n *  properties on it for running a sketch.\n *\n * A p5 sketch can run in \"global\" or \"instance\" mode:\n * \"global\"   - all properties and methods are attached to the window\n * \"instance\" - all properties and methods are bound to this p5 object\n *\n * @class p5\n * @param  {function(p5)}       sketch a closure that can set optional <a href=\"#/p5/preload\">preload()</a>,\n *                              <a href=\"#/p5/setup\">setup()</a>, and/or <a href=\"#/p5/draw\">draw()</a> properties on the\n *                              given p5 instance\n * @param  {HTMLElement}        [node] element to attach canvas to\n * @return {p5}                 a p5 instance\n */\nclass p5 {\n  static VERSION = VERSION;\n  // This is a pointer to our global mode p5 instance, if we're in\n  // global mode.\n  static instance = null;\n  static lifecycleHooks = {\n    presetup: [],\n    postsetup: [],\n    predraw: [],\n    postdraw: [],\n    remove: []\n  };\n\n  // FES stub\n  static _checkForUserDefinedFunctions = () => {};\n  static _friendlyFileLoadError = () => {};\n  constructor(sketch, node) {\n    //////////////////////////////////////////////\n    // PRIVATE p5 PROPERTIES AND METHODS\n    //////////////////////////////////////////////\n\n    this.hitCriticalError = false;\n    this._setupDone = false;\n    this._userNode = node;\n    this._curElement = null;\n    this._elements = [];\n    this._glAttributes = null;\n    this._requestAnimId = 0;\n    this._isGlobal = false;\n    this._loop = true;\n    this._startListener = null;\n    this._initializeInstanceVariables();\n    this._events = {\n      // keep track of user-events for unregistering later\n      pointerdown: null,\n      pointerup: null,\n      pointermove: null,\n      dragend: null,\n      dragover: null,\n      click: null,\n      dblclick: null,\n      mouseover: null,\n      mouseout: null,\n      keydown: null,\n      keyup: null,\n      keypress: null,\n      wheel: null,\n      resize: null,\n      blur: null\n    };\n    this._millisStart = -1;\n    this._recording = false;\n\n    // States used in the custom random generators\n    this._lcg_random_state = null; // NOTE: move to random.js\n    this._gaussian_previous = false; // NOTE: move to random.js\n\n    if (window.DeviceOrientationEvent) {\n      this._events.deviceorientation = null;\n    }\n    if (window.DeviceMotionEvent && !window._isNodeWebkit) {\n      this._events.devicemotion = null;\n    }\n\n    // ensure correct reporting of window dimensions\n    this._updateWindowSize();\n    const bindGlobal = property => {\n      Object.defineProperty(window, property, {\n        configurable: true,\n        enumerable: true,\n        get: () => {\n          if (typeof this[property] === 'function') {\n            return this[property].bind(this);\n          } else {\n            return this[property];\n          }\n        },\n        set: newValue => {\n          Object.defineProperty(window, property, {\n            configurable: true,\n            enumerable: true,\n            value: newValue,\n            writable: true\n          });\n          if (!p5.disableFriendlyErrors) {\n            console.log(`You just changed the value of \"${property}\", which was a p5 global value. This could cause problems later if you're not careful.`);\n          }\n        }\n      });\n    };\n    // If the user has created a global setup or draw function,\n    // assume \"global\" mode and make everything global (i.e. on the window)\n    if (!sketch) {\n      this._isGlobal = true;\n      if (window.hitCriticalError) {\n        return;\n      }\n      p5.instance = this;\n\n      // Loop through methods on the prototype and attach them to the window\n      // All methods and properties with name starting with '_' will be skipped\n      for (const p of Object.getOwnPropertyNames(p5.prototype)) {\n        if (p[0] === '_') continue;\n        bindGlobal(p);\n      }\n      const protectedProperties = ['constructor', 'length'];\n      // Attach its properties to the window\n      for (const p in this) {\n        if (this.hasOwnProperty(p)) {\n          if (p[0] === '_' || protectedProperties.includes(p)) continue;\n          bindGlobal(p);\n        }\n      }\n    } else {\n      // Else, the user has passed in a sketch closure that may set\n      // user-provided 'setup', 'draw', etc. properties on this instance of p5\n      sketch(this);\n\n      // Run a check to see if the user has misspelled 'setup', 'draw', etc\n      // detects capitalization mistakes only ( Setup, SETUP, MouseClicked, etc)\n      p5._checkForUserDefinedFunctions(this);\n    }\n\n    // Bind events to window (not using container div bc key events don't work)\n    for (const e in this._events) {\n      const f = this[`_on${e}`];\n      if (f) {\n        const m = f.bind(this);\n        window.addEventListener(e, m, {\n          passive: false\n        });\n        this._events[e] = m;\n      }\n    }\n    const focusHandler = () => {\n      this.focused = true;\n    };\n    const blurHandler = () => {\n      this.focused = false;\n    };\n    window.addEventListener('focus', focusHandler);\n    window.addEventListener('blur', blurHandler);\n    p5.lifecycleHooks.remove.push(function () {\n      window.removeEventListener('focus', focusHandler);\n      window.removeEventListener('blur', blurHandler);\n    });\n\n    // Initialization complete, start runtime\n    if (document.readyState === 'complete') {\n      this.#_start();\n    } else {\n      this._startListener = this.#_start.bind(this);\n      window.addEventListener('load', this._startListener, false);\n    }\n  }\n  get pixels() {\n    return this._renderer.pixels;\n  }\n  get drawingContext() {\n    return this._renderer.drawingContext;\n  }\n  static registerAddon(addon) {\n    const lifecycles = {};\n    addon(p5, p5.prototype, lifecycles);\n    const validLifecycles = Object.keys(p5.lifecycleHooks);\n    for (const name of validLifecycles) {\n      if (typeof lifecycles[name] === 'function') {\n        p5.lifecycleHooks[name].push(lifecycles[name]);\n      }\n    }\n  }\n  async #_start() {\n    if (this.hitCriticalError) return;\n    // Find node if id given\n    if (this._userNode) {\n      if (typeof this._userNode === 'string') {\n        this._userNode = document.getElementById(this._userNode);\n      }\n    }\n    await this.#_setup();\n    if (this.hitCriticalError) return;\n    if (!this._recording) {\n      this._draw();\n    }\n  }\n  async #_setup() {\n    // Run `presetup` hooks\n    await this._runLifecycleHook('presetup');\n    if (this.hitCriticalError) return;\n\n    // Always create a default canvas.\n    // Later on if the user calls createCanvas, this default one\n    // will be replaced\n    this.createCanvas(100, 100, P2D);\n\n    // Record the time when sketch starts\n    this._millisStart = window.performance.now();\n    const context = this._isGlobal ? window : this;\n    if (typeof context.setup === 'function') {\n      await context.setup();\n    }\n    if (this.hitCriticalError) return;\n\n    // unhide any hidden canvases that were created\n    const canvases = document.getElementsByTagName('canvas');\n\n    // Apply touchAction = 'none' to canvases if pointer events exist\n    if (Object.keys(this._events).some(event => event.startsWith('pointer'))) {\n      for (const k of canvases) {\n        k.style.touchAction = 'none';\n      }\n    }\n    for (const k of canvases) {\n      if (k.dataset.hidden === 'true') {\n        k.style.visibility = '';\n        delete k.dataset.hidden;\n      }\n    }\n    this._lastTargetFrameTime = window.performance.now();\n    this._lastRealFrameTime = window.performance.now();\n    this._setupDone = true;\n    if (this._accessibleOutputs.grid || this._accessibleOutputs.text) {\n      this._updateAccsOutput();\n    }\n\n    // Run `postsetup` hooks\n    await this._runLifecycleHook('postsetup');\n  }\n\n  // While '#_draw' here is async, it is not awaited as 'requestAnimationFrame'\n  // does not await its callback. Thus it is not recommended for 'draw()` to be\n  // async and use await within as the next frame may start rendering before the\n  // current frame finish awaiting. The same goes for lifecycle hooks 'predraw'\n  // and 'postdraw'.\n  async _draw(requestAnimationFrameTimestamp) {\n    if (this.hitCriticalError) return;\n    const now = requestAnimationFrameTimestamp || window.performance.now();\n    const timeSinceLastFrame = now - this._lastTargetFrameTime;\n    const targetTimeBetweenFrames = 1000 / this._targetFrameRate;\n\n    // only draw if we really need to; don't overextend the browser.\n    // draw if we're within 5ms of when our next frame should paint\n    // (this will prevent us from giving up opportunities to draw\n    // again when it's really about time for us to do so). fixes an\n    // issue where the frameRate is too low if our refresh loop isn't\n    // in sync with the browser. note that we have to draw once even\n    // if looping is off, so we bypass the time delay if that\n    // is the case.\n    const epsilon = 5;\n    if (!this._loop || timeSinceLastFrame >= targetTimeBetweenFrames - epsilon) {\n      //mandatory update values(matrixes and stack)\n      this.deltaTime = now - this._lastRealFrameTime;\n      this._frameRate = 1000.0 / this.deltaTime;\n      await this.redraw();\n      this._lastTargetFrameTime = Math.max(this._lastTargetFrameTime + targetTimeBetweenFrames, now);\n      this._lastRealFrameTime = now;\n\n      // If the user is actually using mouse module, then update\n      // coordinates, otherwise skip. We can test this by simply\n      // checking if any of the mouse functions are available or not.\n      // NOTE : This reflects only in complete build or modular build.\n      if (typeof this._updateMouseCoords !== 'undefined') {\n        this._updateMouseCoords();\n\n        //reset delta values so they reset even if there is no mouse event to set them\n        // for example if the mouse is outside the screen\n        this.movedX = 0;\n        this.movedY = 0;\n      }\n    }\n\n    // get notified the next time the browser gives us\n    // an opportunity to draw.\n    if (this._loop) {\n      this._requestAnimId = window.requestAnimationFrame(this._draw.bind(this));\n    }\n  }\n\n  /**\n   * Removes the sketch from the web page.\n   *\n   * Calling `remove()` stops the draw loop and removes any HTML elements\n   * created by the sketch, including the canvas. A new sketch can be\n   * created by using the <a href=\"#/p5/p5\">p5()</a> constructor, as in\n   * `new p5()`.\n   *\n   * @example\n   * <div>\n   * <code>\n   * // Double-click to remove the canvas.\n   *\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   describe(\n   *     'A white circle on a gray background. The circle follows the mouse as the user moves. The sketch disappears when the user double-clicks.'\n   *   );\n   * }\n   *\n   * function draw() {\n   *   // Paint the background repeatedly.\n   *   background(200);\n   *\n   *   // Draw circles repeatedly.\n   *   circle(mouseX, mouseY, 40);\n   * }\n   *\n   * // Remove the sketch when the user double-clicks.\n   * function doubleClicked() {\n   *   remove();\n   * }\n   * </code>\n   * </div>\n   */\n  async remove() {\n    // Remove start listener to prevent orphan canvas being created\n    if (this._startListener) {\n      window.removeEventListener('load', this._startListener, false);\n    }\n    if (this._curElement) {\n      // stop draw\n      this._loop = false;\n      if (this._requestAnimId) {\n        window.cancelAnimationFrame(this._requestAnimId);\n      }\n\n      // unregister events sketch-wide\n      for (const ev in this._events) {\n        window.removeEventListener(ev, this._events[ev]);\n      }\n\n      // remove DOM elements created by p5, and listeners\n      for (const e of this._elements) {\n        if (e.elt && e.elt.parentNode) {\n          e.elt.parentNode.removeChild(e.elt);\n        }\n        for (const elt_ev in e._events) {\n          e.elt.removeEventListener(elt_ev, e._events[elt_ev]);\n        }\n      }\n\n      // Run `remove` hooks\n      await this._runLifecycleHook('remove');\n    }\n\n    // remove window bound properties and methods\n    if (this._isGlobal) {\n      for (const p in p5.prototype) {\n        try {\n          delete window[p];\n        } catch (x) {\n          window[p] = undefined;\n        }\n      }\n      for (const p2 in this) {\n        if (this.hasOwnProperty(p2)) {\n          try {\n            delete window[p2];\n          } catch (x) {\n            window[p2] = undefined;\n          }\n        }\n      }\n      p5.instance = null;\n    }\n  }\n  async _runLifecycleHook(hookName) {\n    for (const hook of p5.lifecycleHooks[hookName]) {\n      await hook.call(this);\n    }\n  }\n  _initializeInstanceVariables() {\n    this._accessibleOutputs = {\n      text: false,\n      grid: false,\n      textLabel: false,\n      gridLabel: false\n    };\n    this._styles = [];\n    this._downKeys = {}; //Holds the key codes of currently pressed keys\n    this._downKeyCodes = {};\n  }\n}\n\n// Attach constants to p5 prototype\nfor (const k in constants) {\n  p5.prototype[k] = constants[k];\n}\n\n//////////////////////////////////////////////\n// PUBLIC p5 PROPERTIES AND METHODS\n//////////////////////////////////////////////\n\n/**\n * A function that's called once when the sketch begins running.\n *\n * Declaring the function `setup()` sets a code block to run once\n * automatically when the sketch starts running. It's used to perform\n * setup tasks such as creating the canvas and initializing variables:\n *\n * ```js\n * function setup() {\n *   // Code to run once at the start of the sketch.\n * }\n * ```\n *\n * Code placed in `setup()` will run once before code placed in\n * <a href=\"#/p5/draw\">draw()</a> begins looping.\n * If `setup()` is declared `async` (e.g. `async function setup()`),\n * execution pauses at each `await` until its promise resolves.\n * For example, `font = await loadFont(...)` waits for the font asset\n * to load because `loadFont()` function returns a promise, and the await \n * keyword means the program will wait for the promise to resolve.\n * This ensures that all assets are fully loaded before the sketch continues.\n\n * \n * loading assets.\n *\n * Note: `setup()` doesn’t have to be declared, but it’s common practice to do so.\n *\n * @method setup\n * @for p5\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   background(200);\n *\n *   // Draw the circle.\n *   circle(50, 50, 40);\n *\n *   describe('A white circle on a gray background.');\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   // Paint the background once.\n *   background(200);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves, leaving a trail.'\n *   );\n * }\n *\n * function draw() {\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n *\n * async function setup() {\n *   img = await loadImage('assets/bricks.jpg');\n *\n *   createCanvas(100, 100);\n *\n *   // Draw the image.\n *   image(img, 0, 0);\n *\n *   describe(\n *     'A white circle on a brick wall. The circle follows the mouse as the user moves, leaving a trail.'\n *   );\n * }\n *\n * function draw() {\n *   // Style the circle.\n *   noStroke();\n *\n *   // Draw the circle.\n *   circle(mouseX, mouseY, 10);\n * }\n * </code>\n * </div>\n */\n/**\n * A function that's called repeatedly while the sketch runs.\n *\n * Declaring the function `draw()` sets a code block to run repeatedly\n * once the sketch starts. It’s used to create animations and respond to\n * user inputs:\n *\n * ```js\n * function draw() {\n *   // Code to run repeatedly.\n * }\n * ```\n *\n * This is often called the \"draw loop\" because p5.js calls the code in\n * `draw()` in a loop behind the scenes. By default, `draw()` tries to run\n * 60 times per second. The actual rate depends on many factors. The\n * drawing rate, called the \"frame rate\", can be controlled by calling\n * <a href=\"#/p5/frameRate\">frameRate()</a>. The number of times `draw()`\n * has run is stored in the system variable\n * <a href=\"#/p5/frameCount\">frameCount()</a>.\n *\n * Code placed within `draw()` begins looping after\n * <a href=\"#/p5/setup\">setup()</a> runs. `draw()` will run until the user\n * closes the sketch. `draw()` can be stopped by calling the\n * <a href=\"#/p5/noLoop\">noLoop()</a> function. `draw()` can be resumed by\n * calling the <a href=\"#/p5/loop\">loop()</a> function.\n *\n * @method draw\n * @for p5\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   // Paint the background once.\n *   background(200);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves, leaving a trail.'\n *   );\n * }\n *\n * function draw() {\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves.'\n *   );\n * }\n *\n * function draw() {\n *   // Paint the background repeatedly.\n *   background(200);\n *\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Double-click the canvas to change the circle's color.\n *\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves. The circle changes color to pink when the user double-clicks.'\n *   );\n * }\n *\n * function draw() {\n *   // Paint the background repeatedly.\n *   background(200);\n *\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n *\n * // Change the fill color when the user double-clicks.\n * function doubleClicked() {\n *   fill('deeppink');\n * }\n * </code>\n * </div>\n */\n\n/**\n * Turns off the parts of the Friendly Error System (FES) that impact performance.\n *\n * The <a href=\"https://github.com/processing/p5.js/blob/main/contributor_docs/friendly_error_system.md\" target=\"_blank\">FES</a>\n * can cause sketches to draw slowly because it does extra work behind the\n * scenes. For example, the FES checks the arguments passed to functions,\n * which takes time to process. Disabling the FES can significantly improve\n * performance by turning off these checks.\n *\n * @property {Boolean} disableFriendlyErrors\n *\n * @example\n * <div>\n * <code>\n * // Disable the FES.\n * p5.disableFriendlyErrors = true;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   background(200);\n *\n *   // The circle() function requires three arguments. The\n *   // next line would normally display a friendly error that\n *   // points this out. Instead, nothing happens and it fails\n *   // silently.\n *   circle(50, 50);\n *\n *   describe('A gray square.');\n * }\n * </code>\n * </div>\n */\np5.disableFriendlyErrors = false;\np5.registerAddon(transform);\np5.registerAddon(structure);\np5.registerAddon(environment);\np5.registerAddon(rendering);\np5.registerAddon(renderer);\np5.registerAddon(renderer2D);\np5.registerAddon(graphics);\nexport { Renderer2D as R, p5 as p, renderer2D as r };","map":{"version":3,"names":["P","P2D","a0","WEBGL","u","BLEND","a2","_DEFAULT_FILL","a3","_DEFAULT_STROKE","j","ROUND","a4","REMOVE","a5","SUBTRACT","a6","DARKEST","a7","LIGHTEST","a8","DIFFERENCE","a9","MULTIPLY","aa","EXCLUSION","ab","SCREEN","ac","REPLACE","ad","OVERLAY","ae","HARD_LIGHT","af","SOFT_LIGHT","ag","DODGE","ah","BURN","ai","ADD","aj","PIE","ak","CHORD","f","TWO_PI","S","SQUARE","k","PROJECT","B","BEVEL","l","MITER","O","OPEN","v","constants","al","VERSION","transform","structure","environment","G","Graphics","y","rendering","z","graphics","R","Renderer","I","Image","r","renderer","Element","MediaElement","b","RGBHDR","FilterRenderer2D","PrimitiveToPath2DConverter","Matrix","styleEmpty","Renderer2D","constructor","pInst","w","h","isMainCanvas","elt","attributes","canvas","document","createElement","_pInst","_curElement","style","display","id","classList","add","p","Object","getOwnPropertyNames","prototype","defineProperty","get","wrappedElt","width","_pixelDensity","height","_userNode","appendChild","getElementsByTagName","length","m","body","drawingContext","getContext","colorSpace","states","colorMode","scale","filterRenderer","clipPath","remove","getFilterGraphicsLayer","filterGraphicsLayer","resizeCanvas","pixelDensity","_applyDefaults","setValue","undefined","_cachedBlendMode","_setFill","_setStroke","lineCap","font","resize","props","key","val","savedKey","err","background","args","push","resetMatrix","img","globalAlpha","image","color","_addAccsOutput","_accsBackground","_getRGBA","newFill","toString","_isErasing","blendMode","fillRect","erase","pop","clear","save","clearRect","restore","fill","fillColor","_accsCanvasColors","stroke","strokeColor","opacityFill","opacityStroke","fillStyle","strokeStyle","newStroke","tempBlendMode","noErase","_cachedFillStyle","_cachedStrokeStyle","drawShape","shape","visitor","strokeWeight","accept","_clipping","addPath","path","closePath","beginClip","options","Path2D","_clipInvert","moveTo","lineTo","endClip","clip","sx","sy","sWidth","sHeight","dx","dy","dWidth","dHeight","cnv","gifProperties","_animateGif","_ensureCanvas","tint","_getTintedImageCanvas","s","drawImage","e","name","tintCanvas","ctx","globalCompositeOperation","slice","join","mode","console","warn","Error","blend","currBlend","copyArgs","Array","call","p5","copy","apply","_getPixel","x","imageData","index","getImageData","data","loadPixels","pd","pixels","set","imgOrCol","Math","floor","setTransform","g","a","idx","isArray","Color","i","updatePixels","frames","displayIndex","putImageData","arc","start","stop","clipPa","centerX","centerY","radiusX","radiusY","createPieSlice","beginPath","ellipse","doFill","doStroke","parseFloat","_getFill","_getStroke","PI","line","x1","y1","x2","y2","point","lineWidth","quad","x3","y3","x4","y4","rect","tl","tr","br","bl","absW","abs","absH","hw","hh","roundRect","triangle","strokeCap","cap","strokeJoin","lineJoin","applyMatrix","c","d","getWorldToScreenMatrix","domMatrix","DOMMatrix","multiply","getTransform","toFloat32Array","rotate","rad","translate","Vector","renderer2D","fn","renderers","Proxy","construct","target","instance","lifecycleHooks","presetup","postsetup","predraw","postdraw","_checkForUserDefinedFunctions","_friendlyFileLoadError","sketch","node","hitCriticalError","_setupDone","_elements","_glAttributes","_requestAnimId","_isGlobal","_loop","_startListener","_initializeInstanceVariables","_events","pointerdown","pointerup","pointermove","dragend","dragover","click","dblclick","mouseover","mouseout","keydown","keyup","keypress","wheel","blur","_millisStart","_recording","_lcg_random_state","_gaussian_previous","window","DeviceOrientationEvent","deviceorientation","DeviceMotionEvent","_isNodeWebkit","devicemotion","_updateWindowSize","bindGlobal","property","configurable","enumerable","bind","newValue","value","writable","disableFriendlyErrors","log","protectedProperties","hasOwnProperty","includes","addEventListener","passive","focusHandler","focused","blurHandler","removeEventListener","readyState","_start","_renderer","registerAddon","addon","lifecycles","validLifecycles","keys","#_start","getElementById","_setup","_draw","#_setup","_runLifecycleHook","createCanvas","performance","now","context","setup","canvases","some","event","startsWith","touchAction","dataset","hidden","visibility","_lastTargetFrameTime","_lastRealFrameTime","_accessibleOutputs","grid","text","_updateAccsOutput","requestAnimationFrameTimestamp","timeSinceLastFrame","targetTimeBetweenFrames","_targetFrameRate","epsilon","deltaTime","_frameRate","redraw","max","_updateMouseCoords","movedX","movedY","requestAnimationFrame","cancelAnimationFrame","ev","parentNode","removeChild","elt_ev","p2","hookName","hook","textLabel","gridLabel","_styles","_downKeys","_downKeyCodes"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/p5/dist/main-BKN5yFoS.js"],"sourcesContent":["import { P as P2D, a0 as WEBGL, u as BLEND, a2 as _DEFAULT_FILL, a3 as _DEFAULT_STROKE, j as ROUND, a4 as REMOVE, a5 as SUBTRACT, a6 as DARKEST, a7 as LIGHTEST, a8 as DIFFERENCE, a9 as MULTIPLY, aa as EXCLUSION, ab as SCREEN, ac as REPLACE, ad as OVERLAY, ae as HARD_LIGHT, af as SOFT_LIGHT, ag as DODGE, ah as BURN, ai as ADD, aj as PIE, ak as CHORD, f as TWO_PI, S as SQUARE, k as PROJECT, B as BEVEL, l as MITER, O as OPEN, v as constants, al as VERSION } from './constants-BRcElHU3.js';\nimport transform from './core/transform.js';\nimport structure from './core/structure.js';\nimport environment from './core/environment.js';\nimport { G as Graphics, y as rendering, z as graphics } from './rendering-CvUVN-Vb.js';\nimport { R as Renderer, I as Image, r as renderer } from './p5.Renderer-R23xoC7s.js';\nimport { Element } from './dom/p5.Element.js';\nimport { MediaElement } from './dom/p5.MediaElement.js';\nimport { b as RGBHDR } from './creating_reading-Cr8L2Jnm.js';\nimport FilterRenderer2D from './image/filterRenderer2D.js';\nimport './math/p5.Matrix.js';\nimport { PrimitiveToPath2DConverter } from './shape/custom_shapes.js';\nimport { Matrix } from './math/Matrices/Matrix.js';\n\nconst styleEmpty = 'rgba(0,0,0,0)';\n// const alphaThreshold = 0.00125; // minimum visible\n\nclass Renderer2D extends Renderer {\n  constructor(pInst, w, h, isMainCanvas, elt, attributes = {}) {\n    super(pInst, w, h, isMainCanvas);\n\n    this.canvas = this.elt = elt || document.createElement('canvas');\n\n    if (isMainCanvas) {\n      // for pixel method sharing with pimage\n      this._pInst._curElement = this;\n      this._pInst.canvas = this.canvas;\n    } else {\n      // hide if offscreen buffer by default\n      this.canvas.style.display = 'none';\n    }\n\n    this.elt.id = 'defaultCanvas0';\n    this.elt.classList.add('p5Canvas');\n\n    // Extend renderer with methods of p5.Element with getters\n    for (const p of Object.getOwnPropertyNames(Element.prototype)) {\n      if (p !== 'constructor' && p[0] !== '_') {\n        Object.defineProperty(this, p, {\n          get() {\n            return this.wrappedElt[p];\n          }\n        });\n      }\n    }\n\n    // Set canvas size\n    this.elt.width = w * this._pixelDensity;\n    this.elt.height = h * this._pixelDensity;\n    this.elt.style.width = `${w}px`;\n    this.elt.style.height = `${h}px`;\n\n    // Attach canvas element to DOM\n    if (this._pInst._userNode) {\n      // user input node case\n      this._pInst._userNode.appendChild(this.elt);\n    } else {\n      //create main element\n      if (document.getElementsByTagName('main').length === 0) {\n        let m = document.createElement('main');\n        document.body.appendChild(m);\n      }\n      //append canvas to main\n      document.getElementsByTagName('main')[0].appendChild(this.elt);\n    }\n\n    // Get and store drawing context\n    this.drawingContext = this.canvas.getContext('2d', attributes);\n    if(attributes.colorSpace === 'display-p3'){\n      this.states.colorMode = RGBHDR;\n    }\n    this.scale(this._pixelDensity, this._pixelDensity);\n\n    if(!this.filterRenderer){\n      this.filterRenderer = new FilterRenderer2D(this);\n    }\n    // Set and return p5.Element\n    this.wrappedElt = new Element(this.elt, this._pInst);\n\n    this.clipPath = null;\n  }\n\n  remove(){\n    this.wrappedElt.remove();\n    this.wrappedElt = null;\n    this.canvas = null;\n    this.elt = null;\n  }\n\n  getFilterGraphicsLayer() {\n    // create hidden webgl renderer if it doesn't exist\n    if (!this.filterGraphicsLayer) {\n      const pInst = this._pInst;\n\n      // create secondary layer\n      this.filterGraphicsLayer =\n        new Graphics(\n          this.width,\n          this.height,\n          WEBGL,\n          pInst\n        );\n    }\n    if (\n      this.filterGraphicsLayer.width !== this.width ||\n      this.filterGraphicsLayer.height !== this.height\n    ) {\n      // Resize the graphics layer\n      this.filterGraphicsLayer.resizeCanvas(this.width, this.height);\n    }\n    if (\n      this.filterGraphicsLayer.pixelDensity() !== this._pInst.pixelDensity()\n    ) {\n      this.filterGraphicsLayer.pixelDensity(this._pInst.pixelDensity());\n    }\n\n    return this.filterGraphicsLayer;\n  }\n\n  _applyDefaults() {\n    this.states.setValue('_cachedFillStyle', undefined);\n    this.states.setValue('_cachedStrokeStyle', undefined);\n    this._cachedBlendMode = BLEND;\n    this._setFill(_DEFAULT_FILL);\n    this._setStroke(_DEFAULT_STROKE);\n    this.drawingContext.lineCap = ROUND;\n    this.drawingContext.font = 'normal 12px sans-serif';\n  }\n\n  resize(w, h) {\n    super.resize(w, h);\n\n    // save canvas properties\n    const props = {};\n    for (const key in this.drawingContext) {\n      const val = this.drawingContext[key];\n      if (typeof val !== 'object' && typeof val !== 'function') {\n        props[key] = val;\n      }\n    }\n\n    this.canvas.width = w * this._pixelDensity;\n    this.canvas.height = h * this._pixelDensity;\n    this.canvas.style.width = `${w}px`;\n    this.canvas.style.height = `${h}px`;\n    this.drawingContext.scale(\n      this._pixelDensity,\n      this._pixelDensity\n    );\n\n    // reset canvas properties\n    for (const savedKey in props) {\n      try {\n        this.drawingContext[savedKey] = props[savedKey];\n      } catch (err) {\n        // ignore read-only property errors\n      }\n    }\n  }\n\n  //////////////////////////////////////////////\n  // COLOR | Setting\n  //////////////////////////////////////////////\n\n  background(...args) {\n    this.push();\n    this.resetMatrix();\n\n    if (args[0] instanceof Image) {\n      if (args[1] >= 0) {\n        // set transparency of background\n        const img = args[0];\n        this.drawingContext.globalAlpha = args[1] / 255;\n        this._pInst.image(img, 0, 0, this.width, this.height);\n      } else {\n        this._pInst.image(args[0], 0, 0, this.width, this.height);\n      }\n    } else {\n      // create background rect\n      const color = this._pInst.color(...args);\n\n      //accessible Outputs\n      if (this._pInst._addAccsOutput()) {\n        this._pInst._accsBackground(color._getRGBA([255, 255, 255, 255]));\n      }\n\n      const newFill = color.toString();\n      this._setFill(newFill);\n\n      if (this._isErasing) {\n        this.blendMode(this._cachedBlendMode);\n      }\n\n      this.drawingContext.fillRect(0, 0, this.width, this.height);\n\n      if (this._isErasing) {\n        this._pInst.erase();\n      }\n    }\n    this.pop();\n  }\n\n  clear() {\n    this.drawingContext.save();\n    this.resetMatrix();\n    this.drawingContext.clearRect(0, 0, this.width, this.height);\n    this.drawingContext.restore();\n  }\n\n  fill(...args) {\n    super.fill(...args);\n    const color = this.states.fillColor;\n    this._setFill(color.toString());\n\n    //accessible Outputs\n    if (this._pInst._addAccsOutput()) {\n      this._pInst._accsCanvasColors('fill', color._getRGBA([255, 255, 255, 255]));\n    }\n  }\n\n  stroke(...args) {\n    super.stroke(...args);\n    const color = this.states.strokeColor;\n    this._setStroke(color.toString());\n\n    //accessible Outputs\n    if (this._pInst._addAccsOutput()) {\n      this._pInst._accsCanvasColors('stroke', color._getRGBA([255, 255, 255, 255]));\n    }\n  }\n\n  erase(opacityFill, opacityStroke) {\n    if (!this._isErasing) {\n      // cache the fill style\n      this.states.setValue('_cachedFillStyle', this.drawingContext.fillStyle);\n      const newFill = this._pInst.color(255, opacityFill).toString();\n      this.drawingContext.fillStyle = newFill;\n\n      // cache the stroke style\n      this.states.setValue('_cachedStrokeStyle', this.drawingContext.strokeStyle);\n      const newStroke = this._pInst.color(255, opacityStroke).toString();\n      this.drawingContext.strokeStyle = newStroke;\n\n      // cache blendMode\n      const tempBlendMode = this._cachedBlendMode;\n      this.blendMode(REMOVE);\n      this._cachedBlendMode = tempBlendMode;\n\n      this._isErasing = true;\n    }\n  }\n\n  noErase() {\n    if (this._isErasing) {\n      this.drawingContext.fillStyle = this.states._cachedFillStyle;\n      this.drawingContext.strokeStyle = this.states._cachedStrokeStyle;\n\n      this.blendMode(this._cachedBlendMode);\n      this._isErasing = false;\n    }\n  }\n\n  drawShape(shape) {\n    const visitor = new PrimitiveToPath2DConverter({ strokeWeight: this.states.strokeWeight });\n    shape.accept(visitor);\n    if (this._clipping) {\n      this.clipPath.addPath(visitor.path);\n      this.clipPath.closePath();\n    } else {\n      if (this.states.fillColor) {\n        this.drawingContext.fill(visitor.path);\n      }\n      if (this.states.strokeColor) {\n        this.drawingContext.stroke(visitor.path);\n      }\n    }\n  }\n\n  beginClip(options = {}) {\n    super.beginClip(options);\n\n    // cache the fill style\n    this.states.setValue('_cachedFillStyle', this.drawingContext.fillStyle);\n    const newFill = this._pInst.color(255, 0).toString();\n    this.drawingContext.fillStyle = newFill;\n\n    // cache the stroke style\n    this.states.setValue('_cachedStrokeStyle', this.drawingContext.strokeStyle);\n    const newStroke = this._pInst.color(255, 0).toString();\n    this.drawingContext.strokeStyle = newStroke;\n\n    // cache blendMode\n    const tempBlendMode = this._cachedBlendMode;\n    this.blendMode(BLEND);\n    this._cachedBlendMode = tempBlendMode;\n\n    // Since everything must be in one path, create a new single Path2D to chain all shapes onto.\n    // Start a new path. Everything from here on out should become part of this\n    // one path so that we can clip to the whole thing.\n    this.clipPath = new Path2D();\n\n    if (this._clipInvert) {\n      // Slight hack: draw a big rectangle over everything with reverse winding\n      // order. This is hopefully large enough to cover most things.\n      this.clipPath.moveTo(\n        -2 * this.width,\n        -2 * this.height\n      );\n      this.clipPath.lineTo(\n        -2 * this.width,\n        2 * this.height\n      );\n      this.clipPath.lineTo(\n        2 * this.width,\n        2 * this.height\n      );\n      this.clipPath.lineTo(\n        2 * this.width,\n        -2 * this.height\n      );\n      this.clipPath.closePath();\n    }\n  }\n\n  endClip() {\n    this.drawingContext.clip(this.clipPath);\n    this.clipPath = null;\n\n    super.endClip();\n\n    this.drawingContext.fillStyle = this.states._cachedFillStyle;\n    this.drawingContext.strokeStyle = this.states._cachedStrokeStyle;\n\n    this.blendMode(this._cachedBlendMode);\n  }\n\n  //////////////////////////////////////////////\n  // IMAGE | Loading & Displaying\n  //////////////////////////////////////////////\n\n  image(\n    img,\n    sx,\n    sy,\n    sWidth,\n    sHeight,\n    dx,\n    dy,\n    dWidth,\n    dHeight\n  ) {\n    let cnv;\n    if (img.gifProperties) {\n      img._animateGif(this._pInst);\n    }\n\n    try {\n      if (img instanceof MediaElement) {\n        img._ensureCanvas();\n      }\n      if (this.states.tint && img.canvas) {\n        cnv = this._getTintedImageCanvas(img);\n      }\n      if (!cnv) {\n        cnv = img.canvas || img.elt;\n      }\n      let s = 1;\n      if (img.width && img.width > 0) {\n        s = cnv.width / img.width;\n      }\n      if (this._isErasing) {\n        this.blendMode(this._cachedBlendMode);\n      }\n\n      this.drawingContext.drawImage(\n        cnv,\n        s * sx,\n        s * sy,\n        s * sWidth,\n        s * sHeight,\n        dx,\n        dy,\n        dWidth,\n        dHeight\n      );\n      if (this._isErasing) {\n        this._pInst.erase();\n      }\n    } catch (e) {\n      if (e.name !== 'NS_ERROR_NOT_AVAILABLE') {\n        throw e;\n      }\n    }\n  }\n\n  _getTintedImageCanvas(img) {\n    if (!img.canvas) {\n      return img;\n    }\n\n    if (!img.tintCanvas) {\n      // Once an image has been tinted, keep its tint canvas\n      // around so we don't need to re-incur the cost of\n      // creating a new one for each tint\n      img.tintCanvas = document.createElement('canvas');\n    }\n\n    // Keep the size of the tint canvas up-to-date\n    if (img.tintCanvas.width !== img.canvas.width) {\n      img.tintCanvas.width = img.canvas.width;\n    }\n    if (img.tintCanvas.height !== img.canvas.height) {\n      img.tintCanvas.height = img.canvas.height;\n    }\n\n    // Goal: multiply the r,g,b,a values of the source by\n    // the r,g,b,a values of the tint color\n    const ctx = img.tintCanvas.getContext('2d');\n\n    ctx.save();\n    ctx.clearRect(0, 0, img.canvas.width, img.canvas.height);\n\n    if (this.states.tint[0] < 255 || this.states.tint[1] < 255 || this.states.tint[2] < 255) {\n      // Color tint: we need to use the multiply blend mode to change the colors.\n      // However, the canvas implementation of this destroys the alpha channel of\n      // the image. To accommodate, we first get a version of the image with full\n      // opacity everywhere, tint using multiply, and then use the destination-in\n      // blend mode to restore the alpha channel again.\n\n      // Start with the original image\n      ctx.drawImage(img.canvas, 0, 0);\n\n      // This blend mode makes everything opaque but forces the luma to match\n      // the original image again\n      ctx.globalCompositeOperation = 'luminosity';\n      ctx.drawImage(img.canvas, 0, 0);\n\n      // This blend mode forces the hue and chroma to match the original image.\n      // After this we should have the original again, but with full opacity.\n      ctx.globalCompositeOperation = 'color';\n      ctx.drawImage(img.canvas, 0, 0);\n\n      // Apply color tint\n      ctx.globalCompositeOperation = 'multiply';\n      ctx.fillStyle = `rgb(${this.states.tint.slice(0, 3).join(', ')})`;\n      ctx.fillRect(0, 0, img.canvas.width, img.canvas.height);\n\n      // Replace the alpha channel with the original alpha * the alpha tint\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.globalAlpha = this.states.tint[3] / 255;\n      ctx.drawImage(img.canvas, 0, 0);\n    } else {\n      // If we only need to change the alpha, we can skip all the extra work!\n      ctx.globalAlpha = this.states.tint[3] / 255;\n      ctx.drawImage(img.canvas, 0, 0);\n    }\n\n    ctx.restore();\n    return img.tintCanvas;\n  }\n\n  //////////////////////////////////////////////\n  // IMAGE | Pixels\n  //////////////////////////////////////////////\n\n  blendMode(mode) {\n    if (mode === SUBTRACT) {\n      console.warn('blendMode(SUBTRACT) only works in WEBGL mode.');\n    } else if (\n      mode === BLEND ||\n      mode === REMOVE ||\n      mode === DARKEST ||\n      mode === LIGHTEST ||\n      mode === DIFFERENCE ||\n      mode === MULTIPLY ||\n      mode === EXCLUSION ||\n      mode === SCREEN ||\n      mode === REPLACE ||\n      mode === OVERLAY ||\n      mode === HARD_LIGHT ||\n      mode === SOFT_LIGHT ||\n      mode === DODGE ||\n      mode === BURN ||\n      mode === ADD\n    ) {\n      this._cachedBlendMode = mode;\n      this.drawingContext.globalCompositeOperation = mode;\n    } else {\n      throw new Error(`Mode ${mode} not recognized.`);\n    }\n  }\n\n  blend(...args) {\n    const currBlend = this.drawingContext.globalCompositeOperation;\n    const blendMode = args[args.length - 1];\n\n    const copyArgs = Array.prototype.slice.call(args, 0, args.length - 1);\n\n    this.drawingContext.globalCompositeOperation = blendMode;\n\n    p5.prototype.copy.apply(this, copyArgs);\n\n    this.drawingContext.globalCompositeOperation = currBlend;\n  }\n\n  // p5.Renderer2D.prototype.get = p5.Renderer.prototype.get;\n  // .get() is not overridden\n\n  // x,y are canvas-relative (pre-scaled by _pixelDensity)\n  _getPixel(x, y) {\n    let imageData, index;\n    imageData = this.drawingContext.getImageData(x, y, 1, 1).data;\n    index = 0;\n    return [\n      imageData[index + 0],\n      imageData[index + 1],\n      imageData[index + 2],\n      imageData[index + 3]\n    ];\n  }\n\n  loadPixels() {\n    const pd = this._pixelDensity;\n    const w = this.width * pd;\n    const h = this.height * pd;\n    const imageData = this.drawingContext.getImageData(0, 0, w, h);\n    // @todo this should actually set pixels per object, so diff buffers can\n    // have diff pixel arrays.\n    this.imageData = imageData;\n    this.pixels = imageData.data;\n  }\n\n  set(x, y, imgOrCol) {\n    // round down to get integer numbers\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (imgOrCol instanceof Image) {\n      this.drawingContext.save();\n      this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n      this.drawingContext.scale(\n        this._pixelDensity,\n        this._pixelDensity\n      );\n      this.drawingContext.clearRect(x, y, imgOrCol.width, imgOrCol.height);\n      this.drawingContext.drawImage(imgOrCol.canvas, x, y);\n      this.drawingContext.restore();\n    } else {\n      let r = 0,\n        g = 0,\n        b = 0,\n        a = 0;\n      let idx =\n        4 *\n        (y *\n          this._pixelDensity *\n          (this.width * this._pixelDensity) +\n          x * this._pixelDensity);\n      if (!this.imageData) {\n        this.loadPixels();\n      }\n      if (typeof imgOrCol === 'number') {\n        if (idx < this.pixels.length) {\n          r = imgOrCol;\n          g = imgOrCol;\n          b = imgOrCol;\n          a = 255;\n          //this.updatePixels.call(this);\n        }\n      } else if (Array.isArray(imgOrCol)) {\n        if (imgOrCol.length < 4) {\n          throw new Error('pixel array must be of the form [R, G, B, A]');\n        }\n        if (idx < this.pixels.length) {\n          r = imgOrCol[0];\n          g = imgOrCol[1];\n          b = imgOrCol[2];\n          a = imgOrCol[3];\n          //this.updatePixels.call(this);\n        }\n      } else if (imgOrCol instanceof p5.Color) {\n        if (idx < this.pixels.length) {\n          [r, g, b, a] = imgOrCol._getRGBA([255, 255, 255, 255]);\n          //this.updatePixels.call(this);\n        }\n      }\n      // loop over pixelDensity * pixelDensity\n      for (let i = 0; i < this._pixelDensity; i++) {\n        for (let j = 0; j < this._pixelDensity; j++) {\n          // loop over\n          idx =\n            4 *\n            ((y * this._pixelDensity + j) *\n              this.width *\n              this._pixelDensity +\n              (x * this._pixelDensity + i));\n          this.pixels[idx] = r;\n          this.pixels[idx + 1] = g;\n          this.pixels[idx + 2] = b;\n          this.pixels[idx + 3] = a;\n        }\n      }\n    }\n  }\n\n  updatePixels(x, y, w, h) {\n    const pd = this._pixelDensity;\n    if (\n      x === undefined &&\n      y === undefined &&\n      w === undefined &&\n      h === undefined\n    ) {\n      x = 0;\n      y = 0;\n      w = this.width;\n      h = this.height;\n    }\n    x *= pd;\n    y *= pd;\n    w *= pd;\n    h *= pd;\n\n    if (this.gifProperties) {\n      this.gifProperties.frames[this.gifProperties.displayIndex].image =\n        this.imageData;\n    }\n\n    this.drawingContext.putImageData(this.imageData, 0, 0, x, y, w, h);\n  }\n\n  //////////////////////////////////////////////\n  // SHAPE | 2D Primitives\n  //////////////////////////////////////////////\n\n  /*\n   * This function requires that:\n   *\n   *   0 <= start < TWO_PI\n   *\n   *   start <= stop < start + TWO_PI\n   */\n  arc(x, y, w, h, start, stop, mode) {\n    const ctx = this.clipPa || this.drawingContext;\n\n    const centerX = x + w / 2,\n      centerY = y + h / 2,\n      radiusX = w / 2,\n      radiusY = h / 2;\n\n    // Determines whether to add a line to the center, which should be done\n    // when the mode is PIE or default; as well as when the start and end\n    // angles do not form a full circle.\n    const createPieSlice = ! (\n      mode === CHORD ||\n      mode === OPEN ||\n      (stop - start) % TWO_PI === 0\n    );\n\n    // Fill curves\n    if (this.states.fillColor) {\n      if (!this._clipping) ctx.beginPath();\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, start, stop);\n      if (createPieSlice) ctx.lineTo(centerX, centerY);\n      ctx.closePath();\n      if (!this._clipping) ctx.fill();\n    }\n\n    // Stroke curves\n    if (this.states.strokeColor) {\n      if (!this._clipping) ctx.beginPath();\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, start, stop);\n\n      if (mode === PIE && createPieSlice) {\n        // In PIE mode, stroke is added to the center and back to path,\n        // unless the pie forms a complete ellipse (see: createPieSlice)\n        ctx.lineTo(centerX, centerY);\n      }\n\n      if (mode === PIE || mode === CHORD) {\n        // Stroke connects back to path begin for both PIE and CHORD\n        ctx.closePath();\n      }\n\n      if (!this._clipping) ctx.stroke();\n    }\n\n    return this;\n\n  }\n\n  ellipse(args) {\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    const x = parseFloat(args[0]),\n      y = parseFloat(args[1]),\n      w = parseFloat(args[2]),\n      h = parseFloat(args[3]);\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    const centerX = x + w / 2,\n      centerY = y + h / 2,\n      radiusX = w / 2,\n      radiusY = h / 2;\n    if (!this._clipping) ctx.beginPath();\n\n    ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n    ctx.closePath();\n\n    if (!this._clipping && doFill) {\n      ctx.fill();\n    }\n    if (!this._clipping && doStroke) {\n      ctx.stroke();\n    }\n  }\n\n  line(x1, y1, x2, y2) {\n    const ctx = this.clipPath || this.drawingContext;\n    if (!this.states.strokeColor) {\n      return this;\n    } else if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    return this;\n  }\n\n  point(x, y) {\n    const ctx = this.clipPath || this.drawingContext;\n    if (!this.states.strokeColor) {\n      return this;\n    } else if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n    const s = this._getStroke();\n    const f = this._getFill();\n    if (!this._clipping) {\n      // swapping fill color to stroke and back after for correct point rendering\n      this._setFill(s);\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.arc(x, y, ctx.lineWidth / 2, 0, TWO_PI, false);\n    if (!this._clipping) {\n      ctx.fill();\n      this._setFill(f);\n    }\n  }\n\n  quad(x1, y1, x2, y2, x3, y3, x4, y4) {\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x3, y3);\n    ctx.lineTo(x4, y4);\n    ctx.closePath();\n    if (!this._clipping && doFill) {\n      ctx.fill();\n    }\n    if (!this._clipping && doStroke) {\n      ctx.stroke();\n    }\n    return this;\n  }\n\n  rect(args) {\n    const x = args[0];\n    const y = args[1];\n    const w = args[2];\n    const h = args[3];\n    let tl = args[4];\n    let tr = args[5];\n    let br = args[6];\n    let bl = args[7];\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    if (!this._clipping) ctx.beginPath();\n\n    if (typeof tl === 'undefined') {\n      // No rounded corners\n      ctx.rect(x, y, w, h);\n    } else {\n      // At least one rounded corner\n      // Set defaults when not specified\n      if (typeof tr === 'undefined') {\n        tr = tl;\n      }\n      if (typeof br === 'undefined') {\n        br = tr;\n      }\n      if (typeof bl === 'undefined') {\n        bl = br;\n      }\n\n      // corner rounding must always be positive\n      const absW = Math.abs(w);\n      const absH = Math.abs(h);\n      const hw = absW / 2;\n      const hh = absH / 2;\n\n      // Clip radii\n      if (absW < 2 * tl) {\n        tl = hw;\n      }\n      if (absH < 2 * tl) {\n        tl = hh;\n      }\n      if (absW < 2 * tr) {\n        tr = hw;\n      }\n      if (absH < 2 * tr) {\n        tr = hh;\n      }\n      if (absW < 2 * br) {\n        br = hw;\n      }\n      if (absH < 2 * br) {\n        br = hh;\n      }\n      if (absW < 2 * bl) {\n        bl = hw;\n      }\n      if (absH < 2 * bl) {\n        bl = hh;\n      }\n\n      ctx.roundRect(x, y, w, h, [tl, tr, br, bl]);\n    }\n    if (!this._clipping && this.states.fillColor) {\n      ctx.fill();\n    }\n    if (!this._clipping && this.states.strokeColor) {\n      ctx.stroke();\n    }\n    return this;\n  }\n\n\n  triangle(args) {\n    const ctx = this.clipPath || this.drawingContext;\n    const doFill = !!this.states.fillColor,\n      doStroke = this.states.strokeColor;\n    const x1 = args[0],\n      y1 = args[1];\n    const x2 = args[2],\n      y2 = args[3];\n    const x3 = args[4],\n      y3 = args[5];\n    if (doFill && !doStroke) {\n      if (this._getFill() === styleEmpty) {\n        return this;\n      }\n    } else if (!doFill && doStroke) {\n      if (this._getStroke() === styleEmpty) {\n        return this;\n      }\n    }\n    if (!this._clipping) ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x3, y3);\n    ctx.closePath();\n    if (!this._clipping && doFill) {\n      ctx.fill();\n    }\n    if (!this._clipping && doStroke) {\n      ctx.stroke();\n    }\n  }\n\n  //////////////////////////////////////////////\n  // SHAPE | Attributes\n  //////////////////////////////////////////////\n\n  strokeCap(cap) {\n    if (\n      cap === ROUND ||\n      cap === SQUARE ||\n      cap === PROJECT\n    ) {\n      this.drawingContext.lineCap = cap;\n    }\n    return this;\n  }\n\n  strokeJoin(join) {\n    if (\n      join === ROUND ||\n      join === BEVEL ||\n      join === MITER\n    ) {\n      this.drawingContext.lineJoin = join;\n    }\n    return this;\n  }\n\n  strokeWeight(w) {\n    super.strokeWeight(w);\n    if (typeof w === 'undefined' || w === 0) {\n      // hack because lineWidth 0 doesn't work\n      this.drawingContext.lineWidth = 0.0001;\n    } else {\n      this.drawingContext.lineWidth = w;\n    }\n    return this;\n  }\n\n  _getFill() {\n    if (!this.states._cachedFillStyle) {\n      this.states.setValue('_cachedFillStyle', this.drawingContext.fillStyle);\n    }\n    return this.states._cachedFillStyle;\n  }\n\n  _setFill(fillStyle) {\n    if (fillStyle !== this.states._cachedFillStyle) {\n      this.drawingContext.fillStyle = fillStyle;\n      this.states.setValue('_cachedFillStyle', fillStyle);\n    }\n  }\n\n  _getStroke() {\n    if (!this.states._cachedStrokeStyle) {\n      this.states.setValue('_cachedStrokeStyle', this.drawingContext.strokeStyle);\n    }\n    return this.states._cachedStrokeStyle;\n  }\n\n  _setStroke(strokeStyle) {\n    if (strokeStyle !== this.states._cachedStrokeStyle) {\n      this.drawingContext.strokeStyle = strokeStyle;\n      this.states.setValue('_cachedStrokeStyle', strokeStyle);\n    }\n  }\n\n  //////////////////////////////////////////////\n  // TRANSFORM\n  //////////////////////////////////////////////\n\n  applyMatrix(a, b, c, d, e, f) {\n    this.drawingContext.transform(a, b, c, d, e, f);\n  }\n\n  getWorldToScreenMatrix() {\n    let domMatrix = new DOMMatrix()\n      .scale(1 / this._pixelDensity)\n      .multiply(this.drawingContext.getTransform());\n    return new Matrix(domMatrix.toFloat32Array());\n  }\n\n  resetMatrix() {\n    this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n    this.drawingContext.scale(\n      this._pixelDensity,\n      this._pixelDensity\n    );\n    return this;\n  }\n\n  rotate(rad) {\n    this.drawingContext.rotate(rad);\n  }\n\n  scale(x, y) {\n    this.drawingContext.scale(x, y);\n    return this;\n  }\n\n  translate(x, y) {\n    // support passing a vector as the 1st parameter\n    if (x instanceof p5.Vector) {\n      y = x.y;\n      x = x.x;\n    }\n    this.drawingContext.translate(x, y);\n    return this;\n  }\n\n  //////////////////////////////////////////////\n  // TYPOGRAPHY (see src/type/textCore.js)\n  //////////////////////////////////////////////\n\n  //////////////////////////////////////////////\n  // STRUCTURE\n  //////////////////////////////////////////////\n\n  // a push() operation is in progress.\n  // the renderer should return a 'style' object that it wishes to\n  // store on the push stack.\n  // derived renderers should call the base class' push() method\n  // to fetch the base style object.\n  push() {\n    this.drawingContext.save();\n\n    // get the base renderer style\n    return super.push();\n  }\n\n  // a pop() operation is in progress\n  // the renderer is passed the 'style' object that it returned\n  // from its push() method.\n  // derived renderers should pass this object to their base\n  // class' pop method\n  pop(style) {\n    this.drawingContext.restore();\n\n    super.pop(style);\n  }\n}\n\nfunction renderer2D(p5, fn){\n  /**\n   * p5.Renderer2D\n   * The 2D graphics canvas renderer class.\n   * extends p5.Renderer\n   * @private\n   */\n  p5.Renderer2D = Renderer2D;\n  p5.renderers[P2D] = Renderer2D;\n  p5.renderers['p2d-hdr'] = new Proxy(Renderer2D, {\n    construct(target, [pInst, w, h, isMainCanvas, elt]){\n      return new target(pInst, w, h, isMainCanvas, elt, {colorSpace: \"display-p3\"})\n    }\n  });\n}\n\n/**\n * @module Structure\n * @submodule Structure\n * @for p5\n * @requires constants\n */\n\n\n/**\n * This is the p5 instance constructor.\n *\n * A p5 instance holds all the properties and methods related to\n * a p5 sketch.  It expects an incoming sketch closure and it can also\n * take an optional node parameter for attaching the generated p5 canvas\n * to a node.  The sketch closure takes the newly created p5 instance as\n * its sole argument and may optionally set an asynchronous function\n * using `async/await`, along with the standard <a href=\"#/p5/setup\">setup()</a>,\n *  and/or <a href=\"#/p5/setup\">setup()</a>, and/or <a href=\"#/p5/draw\">draw()</a>\n *  properties on it for running a sketch.\n *\n * A p5 sketch can run in \"global\" or \"instance\" mode:\n * \"global\"   - all properties and methods are attached to the window\n * \"instance\" - all properties and methods are bound to this p5 object\n *\n * @class p5\n * @param  {function(p5)}       sketch a closure that can set optional <a href=\"#/p5/preload\">preload()</a>,\n *                              <a href=\"#/p5/setup\">setup()</a>, and/or <a href=\"#/p5/draw\">draw()</a> properties on the\n *                              given p5 instance\n * @param  {HTMLElement}        [node] element to attach canvas to\n * @return {p5}                 a p5 instance\n */\nclass p5 {\n  static VERSION = VERSION;\n  // This is a pointer to our global mode p5 instance, if we're in\n  // global mode.\n  static instance = null;\n  static lifecycleHooks = {\n    presetup: [],\n    postsetup: [],\n    predraw: [],\n    postdraw: [],\n    remove: []\n  };\n\n  // FES stub\n  static _checkForUserDefinedFunctions = () => {};\n  static _friendlyFileLoadError = () => {};\n\n  constructor(sketch, node) {\n    //////////////////////////////////////////////\n    // PRIVATE p5 PROPERTIES AND METHODS\n    //////////////////////////////////////////////\n\n    this.hitCriticalError = false;\n    this._setupDone = false;\n    this._userNode = node;\n    this._curElement = null;\n    this._elements = [];\n    this._glAttributes = null;\n    this._requestAnimId = 0;\n    this._isGlobal = false;\n    this._loop = true;\n    this._startListener = null;\n    this._initializeInstanceVariables();\n    this._events = {\n      // keep track of user-events for unregistering later\n      pointerdown: null,\n      pointerup: null,\n      pointermove: null,\n      dragend: null,\n      dragover: null,\n      click: null,\n      dblclick: null,\n      mouseover: null,\n      mouseout: null,\n      keydown: null,\n      keyup: null,\n      keypress: null,\n      wheel: null,\n      resize: null,\n      blur: null\n    };\n    this._millisStart = -1;\n    this._recording = false;\n\n    // States used in the custom random generators\n    this._lcg_random_state = null; // NOTE: move to random.js\n    this._gaussian_previous = false; // NOTE: move to random.js\n\n    if (window.DeviceOrientationEvent) {\n      this._events.deviceorientation = null;\n    }\n    if (window.DeviceMotionEvent && !window._isNodeWebkit) {\n      this._events.devicemotion = null;\n    }\n\n    // ensure correct reporting of window dimensions\n    this._updateWindowSize();\n\n    const bindGlobal = (property) => {\n      Object.defineProperty(window, property, {\n        configurable: true,\n        enumerable: true,\n        get: () => {\n          if(typeof this[property] === 'function'){\n            return this[property].bind(this);\n          }else {\n            return this[property];\n          }\n        },\n        set: (newValue) => {\n          Object.defineProperty(window, property, {\n            configurable: true,\n            enumerable: true,\n            value: newValue,\n            writable: true\n          });\n          if (!p5.disableFriendlyErrors) {\n            console.log(`You just changed the value of \"${property}\", which was a p5 global value. This could cause problems later if you're not careful.`);\n          }\n        }\n      });\n    };\n    // If the user has created a global setup or draw function,\n    // assume \"global\" mode and make everything global (i.e. on the window)\n    if (!sketch) {\n      this._isGlobal = true;\n      if (window.hitCriticalError) {\n        return;\n      }\n      p5.instance = this;\n\n      // Loop through methods on the prototype and attach them to the window\n      // All methods and properties with name starting with '_' will be skipped\n      for (const p of Object.getOwnPropertyNames(p5.prototype)) {\n        if(p[0] === '_') continue;\n        bindGlobal(p);\n      }\n\n      const protectedProperties = ['constructor', 'length'];\n      // Attach its properties to the window\n      for (const p in this) {\n        if (this.hasOwnProperty(p)) {\n          if(p[0] === '_' || protectedProperties.includes(p)) continue;\n          bindGlobal(p);\n        }\n      }\n    } else {\n      // Else, the user has passed in a sketch closure that may set\n      // user-provided 'setup', 'draw', etc. properties on this instance of p5\n      sketch(this);\n\n      // Run a check to see if the user has misspelled 'setup', 'draw', etc\n      // detects capitalization mistakes only ( Setup, SETUP, MouseClicked, etc)\n      p5._checkForUserDefinedFunctions(this);\n    }\n\n    // Bind events to window (not using container div bc key events don't work)\n    for (const e in this._events) {\n      const f = this[`_on${e}`];\n      if (f) {\n        const m = f.bind(this);\n        window.addEventListener(e, m, { passive: false });\n        this._events[e] = m;\n      }\n    }\n\n    const focusHandler = () => {\n      this.focused = true;\n    };\n    const blurHandler = () => {\n      this.focused = false;\n    };\n    window.addEventListener('focus', focusHandler);\n    window.addEventListener('blur', blurHandler);\n    p5.lifecycleHooks.remove.push(function() {\n      window.removeEventListener('focus', focusHandler);\n      window.removeEventListener('blur', blurHandler);\n    });\n\n    // Initialization complete, start runtime\n    if (document.readyState === 'complete') {\n      this.#_start();\n    } else {\n      this._startListener = this.#_start.bind(this);\n      window.addEventListener('load', this._startListener, false);\n    }\n  }\n\n  get pixels(){\n    return this._renderer.pixels;\n  }\n\n  get drawingContext(){\n    return this._renderer.drawingContext;\n  }\n\n  static registerAddon(addon) {\n    const lifecycles = {};\n    addon(p5, p5.prototype, lifecycles);\n\n    const validLifecycles = Object.keys(p5.lifecycleHooks);\n    for(const name of validLifecycles){\n      if(typeof lifecycles[name] === 'function'){\n        p5.lifecycleHooks[name].push(lifecycles[name]);\n      }\n    }\n  }\n\n  async #_start() {\n    if (this.hitCriticalError) return;\n    // Find node if id given\n    if (this._userNode) {\n      if (typeof this._userNode === 'string') {\n        this._userNode = document.getElementById(this._userNode);\n      }\n    }\n\n    await this.#_setup();\n    if (this.hitCriticalError) return;\n    if (!this._recording) {\n      this._draw();\n    }\n  }\n\n  async #_setup() {\n    // Run `presetup` hooks\n    await this._runLifecycleHook('presetup');\n    if (this.hitCriticalError) return;\n\n    // Always create a default canvas.\n    // Later on if the user calls createCanvas, this default one\n    // will be replaced\n    this.createCanvas(\n      100,\n      100,\n      P2D\n    );\n\n    // Record the time when sketch starts\n    this._millisStart = window.performance.now();\n\n    const context = this._isGlobal ? window : this;\n    if (typeof context.setup === 'function') {\n      await context.setup();\n    }\n    if (this.hitCriticalError) return;\n\n    // unhide any hidden canvases that were created\n    const canvases = document.getElementsByTagName('canvas');\n\n    // Apply touchAction = 'none' to canvases if pointer events exist\n    if (Object.keys(this._events).some(event => event.startsWith('pointer'))) {\n      for (const k of canvases) {\n        k.style.touchAction = 'none';\n      }\n    }\n\n\n    for (const k of canvases) {\n      if (k.dataset.hidden === 'true') {\n        k.style.visibility = '';\n        delete k.dataset.hidden;\n      }\n    }\n\n    this._lastTargetFrameTime = window.performance.now();\n    this._lastRealFrameTime = window.performance.now();\n    this._setupDone = true;\n    if (this._accessibleOutputs.grid || this._accessibleOutputs.text) {\n      this._updateAccsOutput();\n    }\n\n    // Run `postsetup` hooks\n    await this._runLifecycleHook('postsetup');\n  }\n\n  // While '#_draw' here is async, it is not awaited as 'requestAnimationFrame'\n  // does not await its callback. Thus it is not recommended for 'draw()` to be\n  // async and use await within as the next frame may start rendering before the\n  // current frame finish awaiting. The same goes for lifecycle hooks 'predraw'\n  // and 'postdraw'.\n  async _draw(requestAnimationFrameTimestamp) {\n    if (this.hitCriticalError) return;\n    const now = requestAnimationFrameTimestamp || window.performance.now();\n    const timeSinceLastFrame = now - this._lastTargetFrameTime;\n    const targetTimeBetweenFrames = 1000 / this._targetFrameRate;\n\n    // only draw if we really need to; don't overextend the browser.\n    // draw if we're within 5ms of when our next frame should paint\n    // (this will prevent us from giving up opportunities to draw\n    // again when it's really about time for us to do so). fixes an\n    // issue where the frameRate is too low if our refresh loop isn't\n    // in sync with the browser. note that we have to draw once even\n    // if looping is off, so we bypass the time delay if that\n    // is the case.\n    const epsilon = 5;\n    if (\n      !this._loop ||\n      timeSinceLastFrame >= targetTimeBetweenFrames - epsilon\n    ) {\n      //mandatory update values(matrixes and stack)\n      this.deltaTime = now - this._lastRealFrameTime;\n      this._frameRate = 1000.0 / this.deltaTime;\n      await this.redraw();\n      this._lastTargetFrameTime = Math.max(this._lastTargetFrameTime\n        + targetTimeBetweenFrames, now);\n      this._lastRealFrameTime = now;\n\n      // If the user is actually using mouse module, then update\n      // coordinates, otherwise skip. We can test this by simply\n      // checking if any of the mouse functions are available or not.\n      // NOTE : This reflects only in complete build or modular build.\n      if (typeof this._updateMouseCoords !== 'undefined') {\n        this._updateMouseCoords();\n\n        //reset delta values so they reset even if there is no mouse event to set them\n        // for example if the mouse is outside the screen\n        this.movedX = 0;\n        this.movedY = 0;\n      }\n    }\n\n    // get notified the next time the browser gives us\n    // an opportunity to draw.\n    if (this._loop) {\n      this._requestAnimId = window.requestAnimationFrame(\n        this._draw.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Removes the sketch from the web page.\n   *\n   * Calling `remove()` stops the draw loop and removes any HTML elements\n   * created by the sketch, including the canvas. A new sketch can be\n   * created by using the <a href=\"#/p5/p5\">p5()</a> constructor, as in\n   * `new p5()`.\n   *\n   * @example\n   * <div>\n   * <code>\n   * // Double-click to remove the canvas.\n   *\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   describe(\n   *     'A white circle on a gray background. The circle follows the mouse as the user moves. The sketch disappears when the user double-clicks.'\n   *   );\n   * }\n   *\n   * function draw() {\n   *   // Paint the background repeatedly.\n   *   background(200);\n   *\n   *   // Draw circles repeatedly.\n   *   circle(mouseX, mouseY, 40);\n   * }\n   *\n   * // Remove the sketch when the user double-clicks.\n   * function doubleClicked() {\n   *   remove();\n   * }\n   * </code>\n   * </div>\n   */\n  async remove() {\n    // Remove start listener to prevent orphan canvas being created\n    if(this._startListener){\n      window.removeEventListener('load', this._startListener, false);\n    }\n\n    if (this._curElement) {\n      // stop draw\n      this._loop = false;\n      if (this._requestAnimId) {\n        window.cancelAnimationFrame(this._requestAnimId);\n      }\n\n      // unregister events sketch-wide\n      for (const ev in this._events) {\n        window.removeEventListener(ev, this._events[ev]);\n      }\n\n      // remove DOM elements created by p5, and listeners\n      for (const e of this._elements) {\n        if (e.elt && e.elt.parentNode) {\n          e.elt.parentNode.removeChild(e.elt);\n        }\n        for (const elt_ev in e._events) {\n          e.elt.removeEventListener(elt_ev, e._events[elt_ev]);\n        }\n      }\n\n      // Run `remove` hooks\n      await this._runLifecycleHook('remove');\n    }\n\n    // remove window bound properties and methods\n    if (this._isGlobal) {\n      for (const p in p5.prototype) {\n        try {\n          delete window[p];\n        } catch (x) {\n          window[p] = undefined;\n        }\n      }\n      for (const p2 in this) {\n        if (this.hasOwnProperty(p2)) {\n          try {\n            delete window[p2];\n          } catch (x) {\n            window[p2] = undefined;\n          }\n        }\n      }\n      p5.instance = null;\n    }\n  }\n\n  async _runLifecycleHook(hookName) {\n    for(const hook of p5.lifecycleHooks[hookName]){\n      await hook.call(this);\n    }\n  }\n\n  _initializeInstanceVariables() {\n    this._accessibleOutputs = {\n      text: false,\n      grid: false,\n      textLabel: false,\n      gridLabel: false\n    };\n\n    this._styles = [];\n    this._downKeys = {}; //Holds the key codes of currently pressed keys\n    this._downKeyCodes = {};\n  }\n}\n\n// Attach constants to p5 prototype\nfor (const k in constants) {\n  p5.prototype[k] = constants[k];\n}\n\n//////////////////////////////////////////////\n// PUBLIC p5 PROPERTIES AND METHODS\n//////////////////////////////////////////////\n\n/**\n * A function that's called once when the sketch begins running.\n *\n * Declaring the function `setup()` sets a code block to run once\n * automatically when the sketch starts running. It's used to perform\n * setup tasks such as creating the canvas and initializing variables:\n *\n * ```js\n * function setup() {\n *   // Code to run once at the start of the sketch.\n * }\n * ```\n *\n * Code placed in `setup()` will run once before code placed in\n * <a href=\"#/p5/draw\">draw()</a> begins looping.\n * If `setup()` is declared `async` (e.g. `async function setup()`),\n * execution pauses at each `await` until its promise resolves.\n * For example, `font = await loadFont(...)` waits for the font asset\n * to load because `loadFont()` function returns a promise, and the await \n * keyword means the program will wait for the promise to resolve.\n * This ensures that all assets are fully loaded before the sketch continues.\n\n * \n * loading assets.\n *\n * Note: `setup()` doesn’t have to be declared, but it’s common practice to do so.\n *\n * @method setup\n * @for p5\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   background(200);\n *\n *   // Draw the circle.\n *   circle(50, 50, 40);\n *\n *   describe('A white circle on a gray background.');\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   // Paint the background once.\n *   background(200);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves, leaving a trail.'\n *   );\n * }\n *\n * function draw() {\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n *\n * async function setup() {\n *   img = await loadImage('assets/bricks.jpg');\n *\n *   createCanvas(100, 100);\n *\n *   // Draw the image.\n *   image(img, 0, 0);\n *\n *   describe(\n *     'A white circle on a brick wall. The circle follows the mouse as the user moves, leaving a trail.'\n *   );\n * }\n *\n * function draw() {\n *   // Style the circle.\n *   noStroke();\n *\n *   // Draw the circle.\n *   circle(mouseX, mouseY, 10);\n * }\n * </code>\n * </div>\n */\n/**\n * A function that's called repeatedly while the sketch runs.\n *\n * Declaring the function `draw()` sets a code block to run repeatedly\n * once the sketch starts. It’s used to create animations and respond to\n * user inputs:\n *\n * ```js\n * function draw() {\n *   // Code to run repeatedly.\n * }\n * ```\n *\n * This is often called the \"draw loop\" because p5.js calls the code in\n * `draw()` in a loop behind the scenes. By default, `draw()` tries to run\n * 60 times per second. The actual rate depends on many factors. The\n * drawing rate, called the \"frame rate\", can be controlled by calling\n * <a href=\"#/p5/frameRate\">frameRate()</a>. The number of times `draw()`\n * has run is stored in the system variable\n * <a href=\"#/p5/frameCount\">frameCount()</a>.\n *\n * Code placed within `draw()` begins looping after\n * <a href=\"#/p5/setup\">setup()</a> runs. `draw()` will run until the user\n * closes the sketch. `draw()` can be stopped by calling the\n * <a href=\"#/p5/noLoop\">noLoop()</a> function. `draw()` can be resumed by\n * calling the <a href=\"#/p5/loop\">loop()</a> function.\n *\n * @method draw\n * @for p5\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   // Paint the background once.\n *   background(200);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves, leaving a trail.'\n *   );\n * }\n *\n * function draw() {\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves.'\n *   );\n * }\n *\n * function draw() {\n *   // Paint the background repeatedly.\n *   background(200);\n *\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Double-click the canvas to change the circle's color.\n *\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   describe(\n *     'A white circle on a gray background. The circle follows the mouse as the user moves. The circle changes color to pink when the user double-clicks.'\n *   );\n * }\n *\n * function draw() {\n *   // Paint the background repeatedly.\n *   background(200);\n *\n *   // Draw circles repeatedly.\n *   circle(mouseX, mouseY, 40);\n * }\n *\n * // Change the fill color when the user double-clicks.\n * function doubleClicked() {\n *   fill('deeppink');\n * }\n * </code>\n * </div>\n */\n\n/**\n * Turns off the parts of the Friendly Error System (FES) that impact performance.\n *\n * The <a href=\"https://github.com/processing/p5.js/blob/main/contributor_docs/friendly_error_system.md\" target=\"_blank\">FES</a>\n * can cause sketches to draw slowly because it does extra work behind the\n * scenes. For example, the FES checks the arguments passed to functions,\n * which takes time to process. Disabling the FES can significantly improve\n * performance by turning off these checks.\n *\n * @property {Boolean} disableFriendlyErrors\n *\n * @example\n * <div>\n * <code>\n * // Disable the FES.\n * p5.disableFriendlyErrors = true;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   background(200);\n *\n *   // The circle() function requires three arguments. The\n *   // next line would normally display a friendly error that\n *   // points this out. Instead, nothing happens and it fails\n *   // silently.\n *   circle(50, 50);\n *\n *   describe('A gray square.');\n * }\n * </code>\n * </div>\n */\np5.disableFriendlyErrors = false;\n\np5.registerAddon(transform);\np5.registerAddon(structure);\np5.registerAddon(environment);\np5.registerAddon(rendering);\np5.registerAddon(renderer);\np5.registerAddon(renderer2D);\np5.registerAddon(graphics);\n\nexport { Renderer2D as R, p5 as p, renderer2D as r };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}