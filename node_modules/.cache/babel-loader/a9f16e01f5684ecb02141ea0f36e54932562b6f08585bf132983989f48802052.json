{"ast":null,"code":"import ColorSpace from \"./space.js\";\nimport getColor from \"./getColor.js\";\nconst ε = .000075;\n\n/**\n * Check if a color is in gamut of either its own or another color space\n * @return {Boolean} Is the color in gamut?\n */\nexport default function inGamut(color, space, {\n  epsilon = ε\n} = {}) {\n  color = getColor(color);\n  if (!space) {\n    space = color.space;\n  }\n  space = ColorSpace.get(space);\n  let coords = color.coords;\n  if (space !== color.space) {\n    coords = space.from(color);\n  }\n  return space.inGamut(coords, {\n    epsilon\n  });\n}","map":{"version":3,"names":["ColorSpace","getColor","ε","inGamut","color","space","epsilon","get","coords","from"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/inGamut.js"],"sourcesContent":["import ColorSpace from \"./space.js\";\nimport getColor from \"./getColor.js\";\n\nconst ε = .000075;\n\n/**\n * Check if a color is in gamut of either its own or another color space\n * @return {Boolean} Is the color in gamut?\n */\nexport default function inGamut (color, space, {epsilon = ε} = {}) {\n\tcolor = getColor(color);\n\n\tif (!space) {\n\t\tspace = color.space;\n\t}\n\n\tspace = ColorSpace.get(space);\n\tlet coords = color.coords;\n\n\tif (space !== color.space) {\n\t\tcoords = space.from(color);\n\t}\n\n\treturn space.inGamut(coords, {epsilon});\n}\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,QAAQ,MAAM,eAAe;AAEpC,MAAMC,CAAC,GAAG,OAAO;;AAEjB;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAOA,CAAEC,KAAK,EAAEC,KAAK,EAAE;EAACC,OAAO,GAAGJ;AAAC,CAAC,GAAG,CAAC,CAAC,EAAE;EAClEE,KAAK,GAAGH,QAAQ,CAACG,KAAK,CAAC;EAEvB,IAAI,CAACC,KAAK,EAAE;IACXA,KAAK,GAAGD,KAAK,CAACC,KAAK;EACpB;EAEAA,KAAK,GAAGL,UAAU,CAACO,GAAG,CAACF,KAAK,CAAC;EAC7B,IAAIG,MAAM,GAAGJ,KAAK,CAACI,MAAM;EAEzB,IAAIH,KAAK,KAAKD,KAAK,CAACC,KAAK,EAAE;IAC1BG,MAAM,GAAGH,KAAK,CAACI,IAAI,CAACL,KAAK,CAAC;EAC3B;EAEA,OAAOC,KAAK,CAACF,OAAO,CAACK,MAAM,EAAE;IAACF;EAAO,CAAC,CAAC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}