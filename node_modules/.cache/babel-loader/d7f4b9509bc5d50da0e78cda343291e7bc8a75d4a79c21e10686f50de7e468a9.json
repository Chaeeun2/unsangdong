{"ast":null,"code":"import RGBColorSpace from \"../rgbspace.js\";\nimport REC2020Linear from \"./rec2020-linear.js\";\n\n// FIXME see https://github.com/LeaVerou/color.js/issues/190\n\nconst a = 0.17883277;\nconst b = 0.28466892; // 1 - (4 * a)\nconst c = 0.55991073; // 0.5 - a * Math.log(4 *a)\n\nconst scale = 3.7743; // Place 18% grey at HLG 0.38, so media white at 0.75\n\nexport default new RGBColorSpace({\n  id: \"rec2100hlg\",\n  cssId: \"rec2100-hlg\",\n  name: \"REC.2100-HLG\",\n  referred: \"scene\",\n  base: REC2020Linear,\n  toBase(RGB) {\n    // given HLG encoded component in range [0, 1]\n    // return media-white relative linear-light\n    return RGB.map(function (val) {\n      // first the HLG EOTF\n      // ITU-R BT.2390-10 p.30 section\n      // 6.3 The hybrid log-gamma electro-optical transfer function (EOTF)\n      // Then scale by 3 so media white is 1.0\n      if (val <= 0.5) {\n        return val ** 2 / 3 * scale;\n      }\n      return (Math.exp((val - c) / a) + b) / 12 * scale;\n    });\n  },\n  fromBase(RGB) {\n    // given media-white relative linear-light\n    // where diffuse white is 1.0,\n    // return HLG encoded component in range [0, 1]\n    return RGB.map(function (val) {\n      // first scale to put linear-light media white at 1/3\n      val /= scale;\n      // now the HLG OETF\n      // ITU-R BT.2390-10 p.23\n      // 6.1 The hybrid log-gamma opto-electronic transfer function (OETF)\n      if (val <= 1 / 12) {\n        return Math.sqrt(3 * val);\n      }\n      return a * Math.log(12 * val - b) + c;\n    });\n  }\n});","map":{"version":3,"names":["RGBColorSpace","REC2020Linear","a","b","c","scale","id","cssId","name","referred","base","toBase","RGB","map","val","Math","exp","fromBase","sqrt","log"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/spaces/rec2100-hlg.js"],"sourcesContent":["import RGBColorSpace from \"../rgbspace.js\";\nimport REC2020Linear from \"./rec2020-linear.js\";\n\n// FIXME see https://github.com/LeaVerou/color.js/issues/190\n\nconst a = 0.17883277;\nconst b = 0.28466892; // 1 - (4 * a)\nconst c = 0.55991073; // 0.5 - a * Math.log(4 *a)\n\nconst scale = 3.7743;\t// Place 18% grey at HLG 0.38, so media white at 0.75\n\nexport default new RGBColorSpace({\n\tid: \"rec2100hlg\",\n\tcssId: \"rec2100-hlg\",\n\tname: \"REC.2100-HLG\",\n\treferred: \"scene\",\n\n\tbase: REC2020Linear,\n\ttoBase (RGB) {\n\t\t// given HLG encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\t// first the HLG EOTF\n\t\t\t// ITU-R BT.2390-10 p.30 section\n\t\t\t// 6.3 The hybrid log-gamma electro-optical transfer function (EOTF)\n\t\t\t// Then scale by 3 so media white is 1.0\n\t\t\tif (val <= 0.5) {\n\t\t\t\treturn (val ** 2) / 3 * scale;\n\t\t\t}\n\t\t\treturn ((Math.exp((val - c) / a) + b) / 12) * scale;\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// where diffuse white is 1.0,\n\t\t// return HLG encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\t// first scale to put linear-light media white at 1/3\n\t\t\tval /= scale;\n\t\t\t// now the HLG OETF\n\t\t\t// ITU-R BT.2390-10 p.23\n\t\t\t// 6.1 The hybrid log-gamma opto-electronic transfer function (OETF)\n\t\t\tif (val <= 1 / 12) {\n\t\t\t\treturn Math.sqrt(3 * val);\n\t\t\t}\n\t\t\treturn a * Math.log(12 * val - b) + c;\n\t\t});\n\t},\n});\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,aAAa,MAAM,qBAAqB;;AAE/C;;AAEA,MAAMC,CAAC,GAAG,UAAU;AACpB,MAAMC,CAAC,GAAG,UAAU,CAAC,CAAC;AACtB,MAAMC,CAAC,GAAG,UAAU,CAAC,CAAC;;AAEtB,MAAMC,KAAK,GAAG,MAAM,CAAC,CAAC;;AAEtB,eAAe,IAAIL,aAAa,CAAC;EAChCM,EAAE,EAAE,YAAY;EAChBC,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,OAAO;EAEjBC,IAAI,EAAET,aAAa;EACnBU,MAAMA,CAAEC,GAAG,EAAE;IACZ;IACA;IACA,OAAOA,GAAG,CAACC,GAAG,CAAC,UAAUC,GAAG,EAAE;MAC7B;MACA;MACA;MACA;MACA,IAAIA,GAAG,IAAI,GAAG,EAAE;QACf,OAAQA,GAAG,IAAI,CAAC,GAAI,CAAC,GAAGT,KAAK;MAC9B;MACA,OAAQ,CAACU,IAAI,CAACC,GAAG,CAAC,CAACF,GAAG,GAAGV,CAAC,IAAIF,CAAC,CAAC,GAAGC,CAAC,IAAI,EAAE,GAAIE,KAAK;IACpD,CAAC,CAAC;EACH,CAAC;EACDY,QAAQA,CAAEL,GAAG,EAAE;IACd;IACA;IACA;IACA,OAAOA,GAAG,CAACC,GAAG,CAAC,UAAUC,GAAG,EAAE;MAC7B;MACAA,GAAG,IAAIT,KAAK;MACZ;MACA;MACA;MACA,IAAIS,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;QAClB,OAAOC,IAAI,CAACG,IAAI,CAAC,CAAC,GAAGJ,GAAG,CAAC;MAC1B;MACA,OAAOZ,CAAC,GAAGa,IAAI,CAACI,GAAG,CAAC,EAAE,GAAGL,GAAG,GAAGX,CAAC,CAAC,GAAGC,CAAC;IACtC,CAAC,CAAC;EACH;AACD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}