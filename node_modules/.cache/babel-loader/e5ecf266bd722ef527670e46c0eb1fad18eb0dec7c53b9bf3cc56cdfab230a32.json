{"ast":null,"code":"import ColorSpace from \"../space.js\";\nimport sRGB from \"./srgb.js\";\nexport default new ColorSpace({\n  id: \"hsl\",\n  name: \"HSL\",\n  coords: {\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    },\n    s: {\n      range: [0, 100],\n      name: \"Saturation\"\n    },\n    l: {\n      range: [0, 100],\n      name: \"Lightness\"\n    }\n  },\n  base: sRGB,\n  // Adapted from https://drafts.csswg.org/css-color-4/better-rgbToHsl.js\n  fromBase: rgb => {\n    let max = Math.max(...rgb);\n    let min = Math.min(...rgb);\n    let [r, g, b] = rgb;\n    let [h, s, l] = [NaN, 0, (min + max) / 2];\n    let d = max - min;\n    if (d !== 0) {\n      s = l === 0 || l === 1 ? 0 : (max - l) / Math.min(l, 1 - l);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n      }\n      h = h * 60;\n    }\n\n    // Very out of gamut colors can produce negative saturation\n    // If so, just rotate the hue by 180 and use a positive saturation\n    // see https://github.com/w3c/csswg-drafts/issues/9222\n    if (s < 0) {\n      h += 180;\n      s = Math.abs(s);\n    }\n    if (h >= 360) {\n      h -= 360;\n    }\n    return [h, s * 100, l * 100];\n  },\n  // Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n  toBase: hsl => {\n    let [h, s, l] = hsl;\n    h = h % 360;\n    if (h < 0) {\n      h += 360;\n    }\n    s /= 100;\n    l /= 100;\n    function f(n) {\n      let k = (n + h / 30) % 12;\n      let a = s * Math.min(l, 1 - l);\n      return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4)];\n  },\n  formats: {\n    \"hsl\": {\n      coords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"]\n    },\n    \"hsla\": {\n      coords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n      commas: true,\n      lastAlpha: true\n    }\n  }\n});","map":{"version":3,"names":["ColorSpace","sRGB","id","name","coords","h","refRange","type","s","range","l","base","fromBase","rgb","max","Math","min","r","g","b","NaN","d","abs","toBase","hsl","f","n","k","a","formats","commas","lastAlpha"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/colorjs.io/src/spaces/hsl.js"],"sourcesContent":["import ColorSpace from \"../space.js\";\nimport sRGB from \"./srgb.js\";\n\nexport default new ColorSpace({\n\tid: \"hsl\",\n\tname: \"HSL\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t},\n\n\tbase: sRGB,\n\n\t// Adapted from https://drafts.csswg.org/css-color-4/better-rgbToHsl.js\n\tfromBase: rgb => {\n\t\tlet max = Math.max(...rgb);\n\t\tlet min = Math.min(...rgb);\n\t\tlet [r, g, b] = rgb;\n\t\tlet [h, s, l] = [NaN, 0, (min + max) / 2];\n\t\tlet d = max - min;\n\n\t\tif (d !== 0) {\n\t\t\ts = (l === 0 || l === 1) ? 0 : (max - l) / Math.min(l, 1 - l);\n\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4;\n\t\t\t}\n\n\t\t\th = h * 60;\n\t\t}\n\n\t\t// Very out of gamut colors can produce negative saturation\n\t\t// If so, just rotate the hue by 180 and use a positive saturation\n\t\t// see https://github.com/w3c/csswg-drafts/issues/9222\n\t\tif (s < 0) {\n\t\t\th += 180;\n\t\t\ts = Math.abs(s);\n\t\t}\n\n\t\tif (h >= 360) {\n\t\t\th -= 360;\n\t\t}\n\n\t\treturn [h, s * 100, l * 100];\n\t},\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n\ttoBase: hsl => {\n\t\tlet [h, s, l] = hsl;\n\t\th = h % 360;\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tfunction f (n) {\n\t\t\tlet k = (n + h / 30) % 12;\n\t\t\tlet a = s * Math.min(l, 1 - l);\n\t\t\treturn l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n\t\t}\n\n\t\treturn [f(0), f(8), f(4)];\n\t},\n\n\tformats: {\n\t\t\"hsl\": {\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t},\n\t\t\"hsla\": {\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t\tcommas: true,\n\t\t\tlastAlpha: true,\n\t\t},\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}