{"ast":null,"code":"import * as fileSaver from 'file-saver';\nfunction downloadFile(data, fName, extension) {\n  const fx = _checkFileExtension(fName, extension);\n  const filename = fx[0];\n  let saveData = data;\n  if (!(saveData instanceof Blob)) {\n    saveData = new Blob([data]);\n  }\n  fileSaver.saveAs(saveData, filename);\n}\nfunction _checkFileExtension(filename, extension) {\n  if (!extension || extension === true || extension === 'true') {\n    extension = '';\n  }\n  if (!filename) {\n    filename = 'untitled';\n  }\n  let ext = '';\n  // make sure the file will have a name, see if filename needs extension\n  if (filename && filename.includes('.')) {\n    ext = filename.split('.').pop();\n  }\n  // append extension if it doesn't exist\n  if (extension) {\n    if (ext !== extension) {\n      ext = extension;\n      filename = `${filename}.${ext}`;\n    }\n  }\n  return [filename, ext];\n}\nexport { _checkFileExtension, downloadFile };","map":{"version":3,"names":["fileSaver","downloadFile","data","fName","extension","fx","_checkFileExtension","filename","saveData","Blob","saveAs","ext","includes","split","pop"],"sources":["/Users/lyuchaeeun/Desktop/unsaengdong/node_modules/p5/dist/io/utilities.js"],"sourcesContent":["import * as fileSaver from 'file-saver';\n\nfunction downloadFile(data, fName, extension) {\n  const fx = _checkFileExtension(fName, extension);\n  const filename = fx[0];\n  let saveData = data;\n\n  if (!(saveData instanceof Blob)) {\n    saveData = new Blob([data]);\n  }\n\n  fileSaver.saveAs(saveData, filename);\n}\n\nfunction _checkFileExtension(filename, extension) {\n  if (!extension || extension === true || extension === 'true') {\n    extension = '';\n  }\n  if (!filename) {\n    filename = 'untitled';\n  }\n  let ext = '';\n  // make sure the file will have a name, see if filename needs extension\n  if (filename && filename.includes('.')) {\n    ext = filename.split('.').pop();\n  }\n  // append extension if it doesn't exist\n  if (extension) {\n    if (ext !== extension) {\n      ext = extension;\n      filename = `${filename}.${ext}`;\n    }\n  }\n  return [filename, ext];\n}\n\nexport { _checkFileExtension, downloadFile };\n"],"mappings":"AAAA,OAAO,KAAKA,SAAS,MAAM,YAAY;AAEvC,SAASC,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAE;EAC5C,MAAMC,EAAE,GAAGC,mBAAmB,CAACH,KAAK,EAAEC,SAAS,CAAC;EAChD,MAAMG,QAAQ,GAAGF,EAAE,CAAC,CAAC,CAAC;EACtB,IAAIG,QAAQ,GAAGN,IAAI;EAEnB,IAAI,EAAEM,QAAQ,YAAYC,IAAI,CAAC,EAAE;IAC/BD,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAACP,IAAI,CAAC,CAAC;EAC7B;EAEAF,SAAS,CAACU,MAAM,CAACF,QAAQ,EAAED,QAAQ,CAAC;AACtC;AAEA,SAASD,mBAAmBA,CAACC,QAAQ,EAAEH,SAAS,EAAE;EAChD,IAAI,CAACA,SAAS,IAAIA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,MAAM,EAAE;IAC5DA,SAAS,GAAG,EAAE;EAChB;EACA,IAAI,CAACG,QAAQ,EAAE;IACbA,QAAQ,GAAG,UAAU;EACvB;EACA,IAAII,GAAG,GAAG,EAAE;EACZ;EACA,IAAIJ,QAAQ,IAAIA,QAAQ,CAACK,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCD,GAAG,GAAGJ,QAAQ,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EACjC;EACA;EACA,IAAIV,SAAS,EAAE;IACb,IAAIO,GAAG,KAAKP,SAAS,EAAE;MACrBO,GAAG,GAAGP,SAAS;MACfG,QAAQ,GAAG,GAAGA,QAAQ,IAAII,GAAG,EAAE;IACjC;EACF;EACA,OAAO,CAACJ,QAAQ,EAAEI,GAAG,CAAC;AACxB;AAEA,SAASL,mBAAmB,EAAEL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}